{"version":3,"sources":["./src/app/core/services/reservation-marks.service.ts","./src/app/core/services/reservation-marks.utils.ts"],"names":[],"mappings":"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","file":"default~offices-map-offices-map-module~reservation-create-reservation-create-module~team-create-team~5c833816.js","sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Injectable, TemplateRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IMarkItem } from '@src/app/base/map/map-mark/map-mark.model';\r\nimport { MapService } from '@src/app/base/map/map.service';\r\nimport { UserService } from '@src/app/core/services/user.service';\r\nimport {\r\n  forkJoinObjectEmpty,\r\n  generateCustomObjectMark,\r\n  generateParkingLotMark,\r\n  generateRoomMark,\r\n  generateUserMark,\r\n  generateWorkplaceMark,\r\n} from './reservation-marks.utils';\r\nimport { checkReservedNeighbors } from '@src/app/presentation/reservations/utils/reservation';\r\nimport { DictionariesService } from '@src/app/shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@src/app/shared/dictionaries/services/measurements.service';\r\nimport {\r\n  ICustomObject,\r\n  IFloor,\r\n  ReservationSocialDistanceCheck,\r\n  IUser,\r\n  IWorkplace,\r\n  IWorkplaceReservation,\r\n  IRoom,\r\n} from '@src/app/shared/http/models/database.model';\r\nimport { ReservationsApiService } from '@src/app/shared/http/services/reservations-api.service';\r\nimport {\r\n  DEFAULT_MAP_POINT,\r\n  DEFAULT_USER_AVATAR,\r\n} from '@src/app/shared/http/utils/images.const';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  forkJoin,\r\n  Observable,\r\n  of,\r\n  Subject,\r\n} from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  filter,\r\n  map,\r\n  shareReplay,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ImageBlobService } from '@src/app/shared/images/services/image-blob.service';\r\nimport { ReservationType } from '@src/app/shared/http/models/meta.model';\r\n\r\n@Injectable()\r\nexport class ReservationMarksService {\r\n  constructor(\r\n    private $measurements: MeasurementsService,\r\n    private $dictionary: DictionariesService,\r\n    private $route: ActivatedRoute,\r\n    private $images: ImageBlobService,\r\n    private $api: ReservationsApiService,\r\n    private $user: UserService,\r\n    private datePipe: DatePipe,\r\n    private $map: MapService\r\n  ) {}\r\n  reload() {\r\n    this._reload.next();\r\n  }\r\n\r\n  get currentFloor$(): Observable<IFloor> {\r\n    return this.$route.paramMap.pipe(\r\n      switchMap((params) => {\r\n        const id = Number(params.get('floorId'));\r\n        return this.$dictionary\r\n          .getDictionaryItemByKey<IFloor>('floorMaps', id)\r\n          .pipe(\r\n            tap(\r\n              (floor) =>\r\n                (this._floorWorkplaceReservationSocialDistanceCheck =\r\n                  floor?.workplaceReservationSocialDistanceCheck)\r\n            ),\r\n            tap(() => this.$map.marksReady$.next(false))\r\n          );\r\n      })\r\n    );\r\n  }\r\n\r\n  getFilterValue(): Date[] {\r\n    return this._filter.getValue();\r\n  }\r\n  setDateFilterValue(range: Date[]) {\r\n    this._filter.next(range);\r\n  }\r\n\r\n  get filterValueOptimize$(): Observable<any> {\r\n    return this._filter.pipe(debounceTime(500));\r\n  }\r\n  private get parkingLots$(): Observable<IWorkplace[]> {\r\n    return this.$dictionary.getDictionary<IWorkplace[]>('parkingLots');\r\n  }\r\n  private get rooms$(): Observable<IRoom[]> {\r\n    return this.$dictionary.getDictionary<IRoom[]>('rooms');\r\n  }\r\n  private get workplaces$(): Observable<IWorkplace[]> {\r\n    return this.$dictionary.getDictionary<IWorkplace[]>('workplaces');\r\n  }\r\n\r\n  private getCurrentRooms(\r\n    floor: IFloor,\r\n    places: IRoom[]\r\n  ): Observable<{\r\n    rooms: IRoom[];\r\n  }> {\r\n    return of({\r\n      rooms: places.filter((place) => place.floorMapId === floor?.id),\r\n    });\r\n  }\r\n\r\n  private getCurrentWorkplacesAndReservations(\r\n    floor: IFloor,\r\n    dates: Date[],\r\n    places: IWorkplace[],\r\n    disabledWorkplaces: number[]\r\n  ): Observable<{\r\n    workplaces: IWorkplace[];\r\n    reservations: IWorkplaceReservation[];\r\n  }> {\r\n    return this.getReservations(floor, dates, 'workplace').pipe(\r\n      switchMap((reservations) =>\r\n        of(floor).pipe(\r\n          map((floor) =>\r\n            places.filter((place) => place.floorMapId === floor?.id)\r\n          ),\r\n          map((workplaces) =>\r\n            workplaces.map((workplace) => {\r\n              workplace.disabled =\r\n                disabledWorkplaces.includes(workplace.id) ||\r\n                Boolean(\r\n                  reservations.find((r) => r.workplaceId === workplace.id)\r\n                );\r\n              return workplace;\r\n            })\r\n          ),\r\n          map((workplaces) => ({ workplaces, reservations }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n  private getCurrentParkingLotsAndReservations(\r\n    floor: IFloor,\r\n    dates: Date[],\r\n    places: IWorkplace[],\r\n    disabledWorkplaces: number[]\r\n  ): Observable<{\r\n    parkingLots: IWorkplace[];\r\n    parkingLotReservations: IWorkplaceReservation[];\r\n  }> {\r\n    return this.getReservations(floor, dates, 'parking').pipe(\r\n      switchMap((parkingLotReservations) =>\r\n        of(floor).pipe(\r\n          map((floor) =>\r\n            places.filter((place) => place.floorMapId === floor?.id)\r\n          ),\r\n          map((parkingLots) =>\r\n            parkingLots.map((parkingLot) => {\r\n              parkingLot.disabled =\r\n                disabledWorkplaces.includes(parkingLot.id) ||\r\n                Boolean(\r\n                  parkingLotReservations.find(\r\n                    (r:any) => r.parkingLotId === parkingLot.id\r\n                  )\r\n                );\r\n              return parkingLot;\r\n            })\r\n          ),\r\n          map((parkingLots) => ({ parkingLots, parkingLotReservations }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n  private getReservations(\r\n    floor: IFloor,\r\n    dates: Date[],\r\n    type: ReservationType\r\n  ): Observable<IWorkplaceReservation[]> {\r\n    if (!floor || !dates) {\r\n      return of([]);\r\n    }\r\n    return this.$api.getMapReservationsByType(type, {\r\n      floorMapId: floor.id,\r\n      dateTimeFrom: this._getApiDate(dates[0]),\r\n      dateTimeTo: this._getApiDate(dates[1]),\r\n    });\r\n  }\r\n\r\n  get mapMarks$(): Observable<IMarkItem[]> {\r\n    return combineLatest([\r\n      this.workplaces$,\r\n      this.$api.getWorkplacesDisabled$,\r\n      this.currentFloor$,\r\n      this.filterValueOptimize$,\r\n      this.rooms$,\r\n      this.parkingLots$,\r\n      this.$api.getParkingLotsDisabled$,\r\n      this._reload,\r\n    ]).pipe(\r\n      switchMap(\r\n        ([\r\n          workplaces,\r\n          disabledWorkplaces,\r\n          floor,\r\n          dates,\r\n          rooms,\r\n          parkingLots,\r\n          disabledParkingLots,\r\n        ]) =>\r\n          forkJoin([\r\n            this.getCurrentWorkplacesAndReservations(\r\n              floor,\r\n              dates,\r\n              workplaces,\r\n              disabledWorkplaces\r\n            ),\r\n            this.getCurrentUsersWithWorkplace(floor, dates),\r\n            this.getCurrentCustomObject(floor),\r\n            this.getCurrentRooms(floor, rooms),\r\n            this.getCurrentParkingLotsAndReservations(\r\n              floor,\r\n              dates,\r\n              parkingLots,\r\n              disabledParkingLots\r\n            ),\r\n          ])\r\n      ),\r\n      switchMap(\r\n        ([\r\n          { workplaces, reservations },\r\n          usersWithWorkplaces,\r\n          customObjects,\r\n          { rooms },\r\n          { parkingLots, parkingLotReservations },\r\n        ]) => {\r\n          const roomImages: Record<number, any> = rooms\r\n            .map((room) => {\r\n              return [room.id, this.$images.getImageBlob(room.avatarImageUrl)];\r\n            })\r\n            .reduce(\r\n              (acc, [id, _img]) => ({ ...acc, [id as number]: _img }),\r\n              {}\r\n            );\r\n\r\n          const workplaceImages: Record<number, any> = workplaces\r\n            .map((place) => {\r\n              const reservation = reservations.find(\r\n                (r) => r.workplaceId === place.id\r\n              );\r\n              if (\r\n                this._floorWorkplaceReservationSocialDistanceCheck ===\r\n                'FORBIDDEN'\r\n              ) {\r\n                place.disabled = checkReservedNeighbors(place, reservations);\r\n              }\r\n              const img = this._markDistributionImage(reservation, place);\r\n              return [place.id, this.$images.getImageBlob(img)];\r\n            })\r\n            .reduce(\r\n              (acc, [id, _img]) => ({ ...acc, [id as number]: _img }),\r\n              {}\r\n            );\r\n          const parkingLotImages: Record<number, any> = parkingLots\r\n            .map((place) => {\r\n              const reservation = parkingLotReservations.find(\r\n                (r: any) => r.parkingLotId === place.id\r\n              );\r\n              place.disabled = !!reservation;\r\n              const img = this._markDistributionImage(reservation, place);\r\n              return [place.id, this.$images.getImageBlob(img)];\r\n            })\r\n            .reduce(\r\n              (acc, [id, _img]) => ({ ...acc, [id as number]: _img }),\r\n              {}\r\n            );\r\n          const usersImages: Record<\r\n            number,\r\n            Observable<any>\r\n          > = usersWithWorkplaces.reduce(\r\n            (acc, item) => ({\r\n              ...acc,\r\n              [item.workplace.id as number]: this.$images.getImageBlob(\r\n                item.user.avatarImageUrl || DEFAULT_USER_AVATAR\r\n              ),\r\n            }),\r\n            {}\r\n          );\r\n\r\n          // tslint:disable-next-line:max-line-length\r\n          const customObjectsImages: Record<\r\n            number,\r\n            Observable<any>\r\n          > = customObjects.reduce(\r\n            (acc, customObject) => ({\r\n              ...acc,\r\n              [customObject.id as number]: this.$images.getImageBlob(\r\n                customObject.imageNormalUrl || DEFAULT_MAP_POINT\r\n              ),\r\n            }),\r\n            {}\r\n          );\r\n          return combineLatest([\r\n            forkJoin(forkJoinObjectEmpty(workplaceImages)),\r\n            forkJoin(forkJoinObjectEmpty(usersImages)),\r\n            forkJoin(forkJoinObjectEmpty(customObjectsImages)),\r\n            forkJoin(forkJoinObjectEmpty(roomImages)),\r\n            forkJoin(forkJoinObjectEmpty(parkingLotImages)),\r\n          ]).pipe(\r\n            map(([wImages, uImages, coImages, rImages, pImages]) => ({\r\n              workplaceImages: wImages,\r\n              usersImages: uImages,\r\n              customObjectsImages: coImages,\r\n              places: workplaces,\r\n              usersWithWorkplaces,\r\n              customObjects,\r\n              rooms,\r\n              roomImages: rImages,\r\n              parkingLots,\r\n              parkingLotImages: pImages,\r\n            }))\r\n          );\r\n        }\r\n      ),\r\n      map(\r\n        ({\r\n          workplaceImages,\r\n          usersImages,\r\n          customObjectsImages,\r\n          places,\r\n          usersWithWorkplaces,\r\n          customObjects,\r\n          rooms,\r\n          roomImages,\r\n          parkingLots,\r\n          parkingLotImages\r\n        }) => {\r\n          const marks: IMarkItem[] = [];\r\n          if (places?.length > 0) {\r\n            places.forEach((place) => {\r\n              marks.push(\r\n                generateWorkplaceMark(place, workplaceImages[place.id])\r\n              );\r\n            });\r\n          }\r\n          if (parkingLots?.length > 0) {\r\n            parkingLots.forEach((parkingLot) => {\r\n              marks.push(\r\n                generateParkingLotMark(\r\n                  parkingLot,\r\n                  parkingLotImages[parkingLot.id]\r\n                )\r\n              );\r\n            });\r\n          }\r\n\r\n          if (rooms?.length > 0) {\r\n            rooms.forEach((room) => {\r\n              marks.push(generateRoomMark(room, roomImages[room.id]));\r\n            });\r\n          }\r\n\r\n          if (usersWithWorkplaces?.length > 0) {\r\n            usersWithWorkplaces.forEach(({ user: rUser, workplace }) => {\r\n              if (workplace && rUser) {\r\n                marks.push(\r\n                  generateUserMark(\r\n                    workplace,\r\n                    rUser,\r\n                    usersImages[workplace.id],\r\n                    'Users'\r\n                  )\r\n                );\r\n              }\r\n            });\r\n          }\r\n          if (customObjects?.length > 0) {\r\n            customObjects.forEach((cObj) => {\r\n              marks.push(\r\n                generateCustomObjectMark(cObj, customObjectsImages[cObj.id])\r\n              );\r\n            });\r\n          }\r\n          return marks;\r\n        }\r\n      ),\r\n      // tap(() => this._loading.next(false)),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private getCurrentCustomObject(floor: IFloor): Observable<ICustomObject[]> {\r\n    return of(floor).pipe(\r\n      switchMap((floor) => {\r\n        if (!floor) {\r\n          return of(null);\r\n        }\r\n        return this.$dictionary\r\n          .getDictionary<ICustomObject[]>('customObjects')\r\n          .pipe(\r\n            map((objs) => objs.filter((obj) => obj.floorMapId === floor?.id))\r\n          );\r\n      }),\r\n      filter((data) => Boolean(data))\r\n    );\r\n  }\r\n  private getCurrentUsersWithWorkplace(\r\n    floor: IFloor,\r\n    dates: Date[]\r\n  ): Observable<{ user: IUser; workplace: IWorkplace }[]> {\r\n    if (floor && dates) {\r\n      return forkJoin([\r\n        this.$dictionary.getDictionary<IUser[]>('labels'),\r\n        this.$api.getWorkplaceReservations({\r\n          floorMapId: floor.id,\r\n          dateTimeFrom: this._getApiDate(dates[0]),\r\n          dateTimeTo: this._getApiDate(dates[1]),\r\n        }),\r\n        this.$dictionary.getDictionary<IWorkplace[]>('workplaces'),\r\n      ]).pipe(\r\n        map(([users, reservations, workplaces]) => {\r\n          return reservations.map((r) => ({\r\n            user: users.find((u) => u.id === r.labelId),\r\n            workplace: workplaces.find((w) => w.id === r.workplaceId),\r\n          }));\r\n        })\r\n      );\r\n    } else {\r\n      return of([]);\r\n    }\r\n    // }));\r\n  }\r\n  private _floorWorkplaceReservationSocialDistanceCheck: ReservationSocialDistanceCheck =\r\n    null;\r\n  private readonly _filter: BehaviorSubject<any> = new BehaviorSubject<any>([]);\r\n  private readonly _reload: BehaviorSubject<void> = new BehaviorSubject<void>(\r\n    void 0\r\n  );\r\n\r\n  private _markDistributionImage(\r\n    reservation: IWorkplaceReservation,\r\n    workplace: IWorkplace\r\n  ): string {\r\n    let img = workplace.imageFreeUrl;\r\n    if (workplace.disabled) {\r\n      img = workplace.imageDisabledUrl;\r\n    }\r\n    if (reservation) {\r\n      if (reservation.labelId === this.$user.info.id) {\r\n        img =\r\n          reservation.status === 'CONFIRMED'\r\n            ? workplace.imageReservedByMeUrl\r\n            : workplace.imageReservedByMeNotConfirmedUrl;\r\n      } else {\r\n        img = workplace.imageReservedByUserUrl;\r\n      }\r\n    }\r\n    return img || DEFAULT_MAP_POINT;\r\n  }\r\n  private _getApiDate(date: Date): string {\r\n    return this.datePipe.transform(\r\n      date,\r\n      this.$measurements.getMeasurementByName('filterDate')\r\n    );\r\n  }\r\n}\r\n","import {\r\n  IMarkItem,\r\n  MarkItemLogicType,\r\n} from '@src/app/base/map/map-mark/map-mark.model';\r\nimport {\r\n  IWorkplace,\r\n  IUser,\r\n  ICustomObject,\r\n  IRoom,\r\n} from '@src/app/shared/http/models/database.model';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport const generateRoomMark = (room: IRoom, image: string): IMarkItem => {\r\n  return {\r\n    id: room?.id || 0,\r\n    img: null,\r\n    disabled: room?.disabled || false,\r\n    logicType: 'Room',\r\n    relativePlace: room,\r\n    tooltip: room?.name || '-',\r\n    coordinates: {\r\n      x: room?.x || 0,\r\n      y: room?.y || 0,\r\n      size: 120,\r\n    },\r\n    size: {\r\n      height: room?.height || 120,\r\n      width: room?.width || 120,\r\n    },\r\n  };\r\n};\r\nexport const generateWorkplaceMark = (\r\n  workplace: IWorkplace,\r\n  image: string\r\n): IMarkItem => {\r\n  return {\r\n    id: workplace?.id || 0,\r\n    img: image,\r\n    disabled: workplace?.disabled || false,\r\n    logicType: 'Workplace',\r\n    relativePlace: workplace,\r\n    tooltip: workplace?.name || '-',\r\n    coordinates: {\r\n      x: workplace?.x || 0,\r\n      y: workplace?.y || 0,\r\n      size: workplace?.width || 40,\r\n    },\r\n  };\r\n};\r\nexport const generateParkingLotMark = (\r\n  parkingLot: IWorkplace,\r\n  image: string\r\n): IMarkItem => {\r\n  return {\r\n    id: parkingLot?.id || 0,\r\n    img: image,\r\n    disabled: parkingLot?.disabled || false,\r\n    logicType: 'ParkingLot',\r\n    relativePlace: parkingLot,\r\n    tooltip: parkingLot?.name || '-',\r\n    coordinates: {\r\n      x: parkingLot?.x || 0,\r\n      y: parkingLot?.y || 0,\r\n      size: parkingLot?.width || 40,\r\n    },\r\n  };\r\n};\r\nexport const generateUserMark = (\r\n  workplace: IWorkplace,\r\n  user: IUser,\r\n  image: string,\r\n  type: MarkItemLogicType = 'User'\r\n): IMarkItem => {\r\n  return {\r\n    id: workplace?.id || 0,\r\n    img: image,\r\n    logicType: type,\r\n    tooltip: user?.name || '-',\r\n    coordinates: {\r\n      x: workplace?.x || 0,\r\n      y: workplace?.y || 0,\r\n      size: workplace?.width || 40,\r\n    },\r\n  };\r\n};\r\nexport const generateCustomObjectMark = (\r\n  customObj: ICustomObject,\r\n  image: string\r\n): IMarkItem => {\r\n  const SIZE = 72;\r\n  return {\r\n    id: customObj.id,\r\n    img: image,\r\n    logicType: 'POI',\r\n    tooltip: customObj.htmlText || customObj.name,\r\n    coordinates: {\r\n      x: customObj.x - SIZE / 2,\r\n      y: customObj.y - SIZE / 2,\r\n      size: SIZE,\r\n    },\r\n  };\r\n};\r\nexport const forkJoinObjectEmpty = (\r\n  obj: Record<any, any>\r\n): Record<number, Observable<any>> => {\r\n  return Object.entries(obj).length ? obj : { 0: of(null) };\r\n};\r\n"],"sourceRoot":"webpack:///"}