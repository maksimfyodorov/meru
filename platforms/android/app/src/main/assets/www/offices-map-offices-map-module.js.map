{"version":3,"sources":["./src/app/presentation/offices/offices-map/offices-map.component.ts","./src/app/presentation/offices/offices-map/offices-map.component.html","./src/app/base/multi-switcher/multi-switcher.module.ts","./src/app/presentation/offices/offices-map/offices-map.service.ts","./src/app/base/multi-switcher/multi-switcher.component.ts","./src/app/base/multi-switcher/multi-switcher.component.html","./src/app/presentation/offices/offices-map/offices-map.module.ts","./src/app/presentation/offices/offices-map/offices-map-routing.module.ts"],"names":[],"mappings":"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","file":"offices-map-offices-map-module.js","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  TemplateRef,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { OfficesMapService } from '@presentation/offices/offices-map/offices-map.service';\r\nimport {\r\n  IOfficesMapControl,\r\n  OfficesMapFilter,\r\n} from '@presentation/offices/offices-map/offices-map.model';\r\nimport { fromEvent, Observable, Subject, Subscription } from 'rxjs';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { SafeUrl } from '@angular/platform-browser';\r\nimport {\r\n  findDateRange,\r\n  findSliderRange,\r\n  nowRang,\r\n} from '@presentation/offices/offices-map/offices-map.utils';\r\nimport { debounceTime, first } from 'rxjs/operators';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport {\r\n  IUser,\r\n  IWorkplaceReservation,\r\n} from '@shared/http/models/database.model';\r\nimport { NzOptionComponent } from 'ng-zorro-antd/select';\r\nimport { DEFAULT_USER_AVATAR } from '@shared/http/utils/images.const';\r\nimport { MarkItemLogicType } from '@base/map/map-mark/map-mark.model';\r\nimport { IDropdownSelectValue } from '@base/dropdown-select/dropdown-select.model';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationsService } from '@core/services/notifications.service';\r\nimport { IOfficesMapSwitcher } from '@presentation/offices/offices-map/offices-map.model';\r\nimport { MapService } from '@base/map/map.service';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\nimport { IMapArea } from '@base/map/map.model';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { ReservationMarksService } from '@src/app/core/services/reservation-marks.service';\r\n\r\nconst HEIGHT_EXCEPT_MAP: number = 405;\r\n\r\n@Component({\r\n  selector: 'app-offices-map',\r\n  templateUrl: './offices-map.component.html',\r\n  styleUrls: ['./offices-map.component.less'],\r\n  providers: [ReservationMarksService, OfficesMapService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OfficesMapComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  get modeLabel(): string {\r\n    return this.mode.items[this.mode.value].tooltip;\r\n  }\r\n\r\n  get currentFloorMap(): Record<string, any> {\r\n    return this._currentFloorMap;\r\n  }\r\n\r\n  set currentFloorMap(value) {\r\n    this._currentFloorMap = value;\r\n    if (value) {\r\n      this.dropdownSelect = this.$service.dropdownSelect({\r\n        label: value.name,\r\n        value: value.id,\r\n      });\r\n    } else {\r\n      this.sub = this.$service.floors$.subscribe((floors) => {\r\n        this._dropdownSelect.values = floors.map((_f) => ({\r\n          label: _f.name,\r\n          value: _f.id,\r\n        }));\r\n        this.cdr.markForCheck();\r\n      });\r\n      this.$notifications.error(\r\n        this._translatePipe.transform('OfficesMap.Error'),\r\n        this._translatePipe.transform('OfficesMap.Floor not found')\r\n      );\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set filter(value) {\r\n    this._filter = value;\r\n  }\r\n\r\n  get filter(): OfficesMapFilter {\r\n    return this._filter;\r\n  }\r\n\r\n  set dropdownSelect(value) {\r\n    this._dropdownSelect = value;\r\n  }\r\n\r\n  get dropdownSelect(): Record<string, any> {\r\n    return this._dropdownSelect;\r\n  }\r\n\r\n  @ViewChild('popup', { read: TemplateRef })\r\n  set popup(value: TemplateRef<any>) {\r\n    this._popup = value;\r\n    this.$service.popup$.next(value);\r\n  }\r\n\r\n  constructor(\r\n    private $service: OfficesMapService,\r\n    private cdr: ChangeDetectorRef,\r\n    private $router: Router,\r\n    private $notifications: NotificationsService,\r\n    private $map: MapService,\r\n    private _modal: NzModalService,\r\n    private _translatePipe: TranslatePipe\r\n  ) {\r\n    this._filter = $service.filter;\r\n    this._dropdownSelect = $service.dropdownSelect;\r\n    this.image$ = $service.mapImageUrl$;\r\n    this.loading$ = $service.loading$;\r\n    this.marks$ = $service.mapMarksWithPopup$;\r\n    this.selectedWorkplace$ = $service.selectedWorkplace$;\r\n    this.users$ = $service.users$;\r\n    this.defaultAvatar = DEFAULT_USER_AVATAR;\r\n    this.sub = $service.areas$.subscribe((areas) => {\r\n      this.areas = areas;\r\n    });\r\n  }\r\n\r\n  get isReservation(): boolean {\r\n    return this.mode.value === 1 || this.workplaceDisabled;\r\n  }\r\n  areas: IMapArea[];\r\n  workplaceId: number;\r\n  type: 'workplace' | 'parking' | 'appointment' = 'workplace';\r\n  isEwsReadOnly: boolean;\r\n  visibleWorkplaceId: number = null;\r\n  workplaceDisabled: boolean;\r\n  areasVisible: boolean;\r\n  hiddenMarksTypes: MarkItemLogicType[] = [];\r\n  search: Record<string, any> = {\r\n    value: null,\r\n    placeHolder: 'Введите ФИО чтобы найти место пользователя',\r\n    showArrow: false,\r\n    filterOption: (input: string, option: NzOptionComponent) =>\r\n      String(option.nzLabel).trim().toLowerCase().includes(input.toLowerCase()),\r\n    loading: false,\r\n    beforeImg: null,\r\n  };\r\n  defaultAvatar: string;\r\n  mode: IOfficesMapSwitcher = this.$service.switcher;\r\n\r\n  private _filter: OfficesMapFilter;\r\n  @MarkForCheck\r\n  private _dropdownSelect: Record<string, any>;\r\n  private _popup: TemplateRef<any>;\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n  private _currentFloorMap: Record<string, any>;\r\n  @MarkForCheck\r\n  mapHeight: number = 0;\r\n\r\n  image$: Observable<SafeUrl>;\r\n  loading$: Observable<boolean>;\r\n  filterValue$: Subject<any>;\r\n  marks$: Observable<any>;\r\n  selectedWorkplace$: Observable<Record<string, any>>;\r\n  resize$: Observable<any> = fromEvent(window, 'resize');\r\n  users$: Observable<IUser[]>;\r\n\r\n  setMapHeight(): void {\r\n    const body = document.querySelector('body').offsetHeight;\r\n    this.mapHeight = body - HEIGHT_EXCEPT_MAP;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.resize$.pipe(debounceTime(500)).subscribe((_e) => {\r\n      this.setMapHeight();\r\n    });\r\n    this.sub = this.$service.currentFloor$.subscribe((data) => {\r\n      this.currentFloorMap = data;\r\n    });\r\n    this.sub = this.$service.allFloorsInBuilding$.subscribe((values) => {\r\n      this.dropdownSelect = { ...this.dropdownSelect, values };\r\n    });\r\n    this.sub = this.$service.selectedWorkplace$.subscribe((place) => {\r\n      if (place) {\r\n        this.workplaceId = place.id;\r\n        this.isEwsReadOnly = place.isEwsReadOnly;\r\n        const logicType: MarkItemLogicType = place.logicType;\r\n        switch (logicType) {\r\n          case 'Workplace':\r\n            this.type = 'workplace';\r\n            break;\r\n          case 'ParkingLot':\r\n            this.type = 'parking';\r\n            break;\r\n          default:\r\n            this.type = 'appointment';\r\n            break;\r\n        }\r\n        this.workplaceDisabled = place.disabled;\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n    this.sub = this.$service.currentPlaceId$.subscribe(\r\n      ([place, marksR, mapR]) => {\r\n        if (place && marksR && mapR) {\r\n          this.visibleWorkplaceId = place.id;\r\n          this.workplaceId = place.id;\r\n          this.workplaceDisabled = true;\r\n          this.cdr.markForCheck();\r\n        }\r\n      }\r\n    );\r\n    this.sub = this.$service.userComplexData$.subscribe((data) => {\r\n      if (data.floor) {\r\n        this.$router.navigate(['/office', data.floor.id]).catch(console.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setMapHeight();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  onHiddenMarksChange(hiddenMarksTypes: MarkItemLogicType[]) {\r\n    if (this.mode.value === 1 && !hiddenMarksTypes.includes('Users')) {\r\n      this.hideMark('Users');\r\n      return;\r\n    }\r\n    this.hiddenMarksTypes = hiddenMarksTypes;\r\n  }\r\n\r\n  onAreaVisibilityChange(visible: boolean) {\r\n    this.areasVisible = visible;\r\n  }\r\n\r\n  private hideMark(markType: MarkItemLogicType) {\r\n    if (!this.hiddenMarksTypes.includes(markType)) {\r\n      this.hiddenMarksTypes = [...this.hiddenMarksTypes, markType];\r\n    } else {\r\n      this.hiddenMarksTypes = [...this.hiddenMarksTypes];\r\n    }\r\n  }\r\n\r\n  filterValueChange(flag: 'date' | 'time'): void {\r\n    if (flag === 'time') {\r\n      const updateDate = findDateRange(\r\n        this.filter.date.value,\r\n        this.filter.slider.value\r\n      );\r\n      this.filter.date.value = updateDate;\r\n      this.$service.setDateFilterValue(updateDate);\r\n    }\r\n    if (flag === 'date') {\r\n      if (this.filter.date.value.length === 2) {\r\n        this.filter.slider.value = findSliderRange(this.filter.date.value);\r\n        this.$service.setDateFilterValue(this.filter.date.value);\r\n      }\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  onSelectSearch(value: IUser): void {\r\n    if (value.avatarImageUrl !== this.search.beforeImg) {\r\n      this.search.loading = true;\r\n    }\r\n    this.search.beforeImg = value.avatarImageUrl;\r\n    this.$service.userSelected$.next(value);\r\n    // this.$service.userWorkplace$.pipe(first()).subscribe((res) => {\r\n    //   console.log(res);\r\n    //   this.visibleWorkplaceId = res.id;\r\n    //   this.cdr.markForCheck();\r\n    // });\r\n  }\r\n\r\n  onLoadSearchAvatar(): void {\r\n    this.search.loading = false;\r\n  }\r\n\r\n  changeMode(value: string | number): void {\r\n    if (value === 1) {\r\n      this.$service.setDateFilterValue(nowRang());\r\n      this.hideMark('Users');\r\n    }\r\n    if (value === 0) {\r\n      this.$service.setDateFilterValue(this.filter.date.value);\r\n      this.search.value = null;\r\n      this.$service.userSelected$.next(null);\r\n    }\r\n  }\r\n\r\n  reservationPlace(id: number): void {\r\n    if (this.type === 'workplace') {\r\n      if (this.$service.isConfirmation(id)) {\r\n        this.$service.confirmationModal(id);\r\n      } else {\r\n        this.$service.reservationWorkplace(id).then((res) => {\r\n          if (res.success) {\r\n            this.$notifications.success('Успешно', res.data.RESULT_SUCCESS);\r\n            this.$service.reload();\r\n          } else {\r\n            this.$notifications.error('Ошибка', res.error.message);\r\n          }\r\n        });\r\n      }\r\n    } else if (this.type === 'parking') {\r\n      if (this.$service.isConfirmation(id)) {\r\n        this.$service.confirmationModal(id);\r\n      } else {\r\n        this.$service.reservationParkingLot(id).then((res) => {\r\n          if (res.success) {\r\n            this.$notifications.success('Успешно', res.data.RESULT_SUCCESS);\r\n            this.$service.reload();\r\n          } else {\r\n            this.$notifications.error('Ошибка', res.error.message);\r\n          }\r\n        });\r\n      }\r\n    } else if (this.type === 'appointment') {\r\n      this.$router.navigate(['reservations/appointment/workplace', id], {\r\n        queryParams: { mode: 'day' },\r\n      });\r\n      // if (this.$service.isConfirmation(id)) {\r\n      //   this.$service.confirmationModal(id);\r\n      // } else {\r\n      //   this.$service.reservationRoom(id).then((res) => {\r\n      //     if (res.success) {\r\n      //       res.data[0].RESULT_SUCCESS = `Переговорная комната успешно забронирована`;\r\n      //       this.$notifications.success('Успешно', res.data[0].RESULT_SUCCESS);\r\n      //       this.$service.reload();\r\n      //     } else {\r\n      //       this.$notifications.error('Ошибка', res.error.message);\r\n      //     }\r\n      //   });\r\n      // }\r\n    }\r\n  }\r\n  handleReservation(id: number): void {\r\n    if (\r\n      (this.type === 'workplace' &&\r\n        this.$service.currentWorkplace(id).labelIdPermanentAssignment > 0) ||\r\n      (this.type === 'parking' &&\r\n        this.$service.currentParkingLot(id).labelIdPermanentAssignment > 0)\r\n    ) {\r\n      this._modal.create({\r\n        nzTitle: 'Информация о бронирование',\r\n        nzContent:\r\n          'Это место закреплено за другим пользователем, Вы уверены, что хотите его забронировать?',\r\n        nzFooter: [\r\n          {\r\n            label: 'Отмена',\r\n            onClick: () => {\r\n              this._modal.closeAll();\r\n            },\r\n          },\r\n          {\r\n            label: 'Ок',\r\n            type: 'primary',\r\n            onClick: () => {\r\n              this.reservationPlace(id);\r\n              this._modal.closeAll();\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      this.reservationPlace(id);\r\n    }\r\n  }\r\n\r\n  changeDropdownSelect(value: IDropdownSelectValue): void {\r\n    this.$router.navigate(['/office', value.value]).catch(console.error);\r\n    this.mode.value = 0;\r\n  }\r\n}\r\n","<section class=\"offices-map\">\r\n  <div class=\"offices-map__top-controls user-select-none\">\r\n    <app-dropdown-select\r\n      class=\"offices-map__dropdown-select\"\r\n      [values]=\"dropdownSelect.values\"\r\n      [(value)]=\"dropdownSelect.value\"\r\n      (valueChange)=\"changeDropdownSelect($event)\"\r\n    ></app-dropdown-select>\r\n    <div class=\"offices-map__mode\">\r\n      <label>\r\n        <span class=\"offices-map__mode-label\">{{ modeLabel }}</span>\r\n        <app-multi-switcher\r\n          [items]=\"mode.items\"\r\n          [(value)]=\"mode.value\"\r\n          (valueChange)=\"changeMode($event)\"\r\n        ></app-multi-switcher>\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <app-map\r\n    [img]=\"image$ | async\"\r\n    [size]=\"{\r\n      width: currentFloorMap?.mapWidth,\r\n      height: currentFloorMap?.mapHeight\r\n    }\"\r\n    [loading]=\"loading$ | async\"\r\n    [marks]=\"marks$ | async\"\r\n    [centeredMarkId]=\"visibleWorkplaceId\"\r\n    [height]=\"mapHeight\"\r\n    [hiddenMarksTypes]=\"hiddenMarksTypes\"\r\n    [areas]=\"areas\"\r\n    [areasVisible]=\"areasVisible\"\r\n    (hiddenMarksChange)=\"onHiddenMarksChange($event)\"\r\n    (areaVisibilityChange)=\"onAreaVisibilityChange($event)\"\r\n    class=\"offices-map__map\"\r\n  ></app-map>\r\n  <div class=\"offices-map__bottom-controls light-fon\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"mode.value ? searchTpl : filterTpl\"\r\n    ></ng-container>\r\n  </div>\r\n</section>\r\n\r\n<ng-template #popup>\r\n  <app-workplace-card\r\n    [type]=\"type\"\r\n    [readOnly]=\"isEwsReadOnly\"\r\n    [showPermanentAssignment]=\"true\"\r\n    [workplaceId]=\"workplaceId\"\r\n    [disabled]=\"isReservation\"\r\n    [calendarLink]=\"'reservations/appointment/workplace/' + workplaceId\"\r\n    (reservation)=\"handleReservation($event)\"\r\n  ></app-workplace-card>\r\n</ng-template>\r\n\r\n<ng-template #filterTpl>\r\n  <section class=\"offices-map__filter\">\r\n    <div class=\"offices-map__filter-date\">\r\n      <app-filter-date\r\n        [(ngModel)]=\"filter.date.value\"\r\n        [format]=\"filter.date.format\"\r\n        [layout]=\"'horizontal'\"\r\n        [workHours]=\"filter.date.workHours\"\r\n        [autoUpdateDateTo]=\"true\"\r\n        [autoUpdateDateToFullDay]=\"true\"\r\n        [minDuration]=\"filter.slider.step\"\r\n        (ngModelChange)=\"filterValueChange('date')\"\r\n      ></app-filter-date>\r\n    </div>\r\n    <div class=\"offices-map__filter-time\">\r\n      <nz-slider\r\n        class=\"tooltip-blue\"\r\n        nzRange\r\n        [(ngModel)]=\"filter.slider.value\"\r\n        (ngModelChange)=\"filterValueChange('time')\"\r\n        [nzMin]=\"filter.slider.min\"\r\n        [nzMax]=\"filter.slider.max\"\r\n        [nzStep]=\"filter.slider.step\"\r\n        [nzTipFormatter]=\"filter.slider.tipFormatter\"\r\n        [nzDisabled]=\"filter.slider.disabled\"\r\n        [nzTooltipVisible]=\"filter.slider.tooltipVisible\"\r\n        [nzMarks]=\"filter.slider.marks\"\r\n      ></nz-slider>\r\n    </div>\r\n  </section>\r\n</ng-template>\r\n\r\n<ng-template #searchTpl>\r\n  <nz-input-group nzSearch [nzAddOnAfter]=\"suffixIconButtonTpl\">\r\n    <nz-select\r\n      nzShowSearch\r\n      [nzPlaceHolder]=\"search.placeHolder\"\r\n      [(ngModel)]=\"search.value\"\r\n      [nzShowArrow]=\"search.showArrow\"\r\n      [nzFilterOption]=\"search.filterOption\"\r\n      [nzCustomTemplate]=\"searchResultTemplateTpl\"\r\n      (ngModelChange)=\"onSelectSearch($event)\"\r\n    >\r\n      <nz-option\r\n        *ngFor=\"let user of users$ | async\"\r\n        [nzLabel]=\"user.name\"\r\n        [nzValue]=\"user\"\r\n      ></nz-option>\r\n    </nz-select>\r\n  </nz-input-group>\r\n</ng-template>\r\n<ng-template #suffixIconButtonTpl>\r\n  <button nz-button nzType=\"primary\" nzSearch>\r\n    <i nz-icon nzType=\"search\"></i>\r\n  </button>\r\n</ng-template>\r\n<ng-template #searchResultTemplateTpl let-option>\r\n  <div class=\"d-flex align-items-center\" [class.d-none]=\"search.loading\">\r\n    <img\r\n      class=\"offices-map__search-img\"\r\n      [src]=\"\r\n        option.nzValue.avatarImageUrl\r\n          ? (option.nzValue.avatarImageUrl | imageBlob | async)\r\n          : defaultAvatar\r\n      \"\r\n      [alt]=\"option.nzLabel\"\r\n      (load)=\"onLoadSearchAvatar()\"\r\n    />\r\n    <span>{{ option.nzLabel }}</span>\r\n  </div>\r\n  <ng-container\r\n    *ngTemplateOutlet=\"search.loading ? searchResultTemplateLoadingTpl : null\"\r\n  ></ng-container>\r\n</ng-template>\r\n<ng-template #searchResultTemplateLoadingTpl>\r\n  <div class=\"d-flex align-items-center\">\r\n    <nz-spin\r\n      nzSimple\r\n      [nzIndicator]=\"loadingIndicatorTpl\"\r\n      class=\"mr-10\"\r\n    ></nz-spin\r\n    ><span>Загрузка пользователя...</span>\r\n  </div>\r\n</ng-template>\r\n<ng-template #loadingIndicatorTpl><i nz-icon nzType=\"loading\"></i></ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MultiSwitcherComponent } from './multi-switcher.component';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [MultiSwitcherComponent],\r\n  exports: [\r\n    MultiSwitcherComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NzRadioModule,\r\n    FormsModule,\r\n    NzIconModule,\r\n    NzToolTipModule\r\n  ]\r\n})\r\nexport class MultiSwitcherModule { }\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable, TemplateRef } from '@angular/core';\r\nimport { SafeUrl } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  IDropdownSelectValue,\r\n  IDropdownSelectValues,\r\n} from '@base/dropdown-select/dropdown-select.model';\r\nimport {\r\n  IMarkItem,\r\n  MarkItemLogicType,\r\n} from '@base/map/map-mark/map-mark.model';\r\nimport { MapService } from '@base/map/map.service';\r\nimport { NotificationsService } from '@core/services/notifications.service';\r\nimport { UserService } from '@core/services/user.service';\r\nimport {\r\n  IOfficesMapControl,\r\n  IOfficesMapSwitcher,\r\n  OfficesMapFilter,\r\n} from '@presentation/offices/offices-map/offices-map.model';\r\nimport {\r\n  breakdownDate,\r\n  findSliderRange,\r\n  getInitDate,\r\n  getSliderLimitValue,\r\n  workDateRange,\r\n} from '@presentation/offices/offices-map/offices-map.utils';\r\nimport {\r\n  checkReservedNeighbors,\r\n  getDistanceCheckConfirmModal,\r\n} from '@presentation/reservations/utils/reservation';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport {\r\n  IArea,\r\n  ICustomObject,\r\n  IFloor,\r\n  ReservationSocialDistanceCheck,\r\n  IUser,\r\n  IWorkplace,\r\n  IWorkplaceReservation,\r\n  IRoom,\r\n} from '@shared/http/models/database.model';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport {\r\n  DEFAULT_MAP_POINT,\r\n  DEFAULT_USER_AVATAR,\r\n} from '@shared/http/utils/images.const';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport { UserOfficesService } from '@src/app/core/services/user-offices.service';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  forkJoin,\r\n  Observable,\r\n  of,\r\n  Subject,\r\n  zip,\r\n} from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  filter,\r\n  map,\r\n  shareReplay,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ImageBlobService } from '@shared/images/services/image-blob.service';\r\nimport { ReservationMarksService } from '@src/app/core/services/reservation-marks.service';\r\nimport {\r\n  forkJoinObjectEmpty,\r\n  generateUserMark,\r\n} from '@src/app/core/services/reservation-marks.utils';\r\n\r\n@Injectable()\r\nexport class OfficesMapService {\r\n  constructor(\r\n    private $measurements: MeasurementsService,\r\n    private $date: DatePipe,\r\n    private $dictionary: DictionariesService,\r\n    private $userOffices: UserOfficesService,\r\n    private $route: ActivatedRoute,\r\n    private $settings: SettingsService,\r\n    private $images: ImageBlobService,\r\n    private $api: ReservationsApiService,\r\n    private $reservationMarks: ReservationMarksService,\r\n    private $user: UserService,\r\n    private datePipe: DatePipe,\r\n    private $map: MapService,\r\n    private $modal: NzModalService,\r\n    private $notifications: NotificationsService\r\n  ) {\r\n    this.reload();\r\n  }\r\n\r\n  reload() {\r\n    this.$reservationMarks.reload();\r\n  }\r\n  get filter(): OfficesMapFilter {\r\n    const minReservationDuration: number =\r\n      this.$settings.getSettingByName<number>(\r\n        'workplaceReservationDurationMinSeconds'\r\n      ) * 1000;\r\n    const workHours: number[] = [\r\n      this.$settings.getSettingByName<number>(\r\n        'workplaceReservationBeginHourDefault'\r\n      ),\r\n      this.$settings.getSettingByName<number>(\r\n        'workplaceReservationEndHourDefault'\r\n      ),\r\n    ];\r\n    const [sliderMin, sliderMax] = getSliderLimitValue(workHours);\r\n    const dates = getInitDate(workHours, minReservationDuration);\r\n    const marks = breakdownDate(\r\n      workDateRange(workHours),\r\n      minReservationDuration\r\n    ).reduce((acc, val) => {\r\n      acc[val] = '';\r\n      return acc;\r\n    }, {});\r\n    return {\r\n      date: {\r\n        value: dates,\r\n        format: this.$measurements.getMeasurementByName('dateTime'),\r\n        workHours,\r\n      },\r\n      slider: {\r\n        value: findSliderRange(dates),\r\n        step: minReservationDuration,\r\n        min: sliderMin,\r\n        max: sliderMax,\r\n        tipFormatter: (value: number) =>\r\n          this.$date.transform(new Date(value), 'HH:mm'),\r\n        disabled: false,\r\n        tooltipVisible: 'default',\r\n        marks,\r\n      },\r\n    };\r\n  }\r\n\r\n  get switcher(): IOfficesMapSwitcher {\r\n    return {\r\n      value: 0,\r\n      items: [\r\n        {\r\n          icon: 'history',\r\n          tooltip: 'Бронирование мест',\r\n        },\r\n        {\r\n          icon: 'user',\r\n          tooltip: 'Поиск пользователя',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  get currentFloor$(): Observable<IFloor> {\r\n    return this.$route.paramMap.pipe(\r\n      switchMap((params) => {\r\n        const id = Number(params.get('floorId'));\r\n        return this.$dictionary\r\n          .getDictionaryItemByKey<IFloor>('floorMaps', id)\r\n          .pipe(\r\n            tap(\r\n              (floor) =>\r\n                (this._floorWorkplaceReservationSocialDistanceCheck =\r\n                  floor?.workplaceReservationSocialDistanceCheck)\r\n            ),\r\n            tap(() => this.$map.marksReady$.next(false))\r\n          );\r\n      })\r\n    );\r\n  }\r\n  get currentPlaceId$(): Observable<[IWorkplace, boolean, boolean]> {\r\n    return this.$route.paramMap.pipe(\r\n      switchMap((params) => {\r\n        const id = Number(params.get('placeId'));\r\n        return combineLatest([\r\n          this.$dictionary.getDictionaryItemByKey<IWorkplace>('workplaces', id),\r\n          this.$map.marksReady$,\r\n          this.$map.mapReady$,\r\n        ]).pipe(debounceTime(500));\r\n      })\r\n    );\r\n  }\r\n  get allFloorsInBuilding$(): Observable<IDropdownSelectValues> {\r\n    return combineLatest([this.currentFloor$, this.floors$]).pipe(\r\n      map(([currentFloorMap, floorMaps]) => {\r\n        const buildingId = currentFloorMap?.buildingId;\r\n        return floorMaps\r\n          .filter((floor) => floor.buildingId === buildingId)\r\n          .map((floor) => {\r\n            return {\r\n              label: floor.name,\r\n              value: floor.id,\r\n            };\r\n          });\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n  get mapImageUrl$(): Observable<SafeUrl> {\r\n    return this.currentFloor$.pipe(\r\n      tap(() => this._loading.next(true)),\r\n      switchMap((floorMap) => {\r\n        return floorMap\r\n          ? this.$images.getImageBlob(floorMap.mapImageUrl)\r\n          : of(null);\r\n      })\r\n    );\r\n  }\r\n  get loading$(): Observable<boolean> {\r\n    return this._loading.asObservable();\r\n  }\r\n  getFilterValue(): Date[] {\r\n    return this.$reservationMarks.getFilterValue();\r\n  }\r\n\r\n  setDateFilterValue(range: Date[]) {\r\n    this.$reservationMarks.setDateFilterValue(range);\r\n  }\r\n\r\n  get filterValueOptimize$(): Observable<any> {\r\n    return this._filter.pipe(debounceTime(500));\r\n  }\r\n  get parkingLots$(): Observable<IWorkplace[]> {\r\n    return this.$dictionary\r\n      .getDictionary<IWorkplace[]>('parkingLots')\r\n      .pipe(tap((parkingLots) => (this._parkingLots = parkingLots)));\r\n  }\r\n  get workplaces$(): Observable<IWorkplace[]> {\r\n    return this.$dictionary\r\n      .getDictionary<IWorkplace[]>('workplaces')\r\n      .pipe(tap((workplaces) => (this._workplaces = workplaces)));\r\n  }\r\n  get rooms$(): Observable<IRoom[]> {\r\n    return this.$dictionary\r\n      .getDictionary<IRoom[]>('rooms')\r\n      .pipe(tap((rooms) => (this._rooms = rooms)));\r\n  }\r\n  get floors$(): Observable<IFloor[]> {\r\n    return this.$userOffices.getMyOrderedFloors<IFloor[]>();\r\n  }\r\n\r\n  get mapMarks$(): Observable<any> {\r\n    return combineLatest([\r\n      this.$reservationMarks.mapMarks$,\r\n      this.userComplexData$,\r\n      this.workplaces$,\r\n      this.rooms$,\r\n      this.parkingLots$,\r\n    ]).pipe(\r\n      switchMap(([marks, { user, workplace }]) => {\r\n        const userImage: Record<number, Observable<any>> = {\r\n          [workplace?.id || 0]: this.$images.getImageBlob(\r\n            user?.avatarImageUrl || DEFAULT_USER_AVATAR\r\n          ),\r\n        };\r\n        return forkJoin(forkJoinObjectEmpty(userImage)).pipe(\r\n          map((userImage) => {\r\n            if (user && workplace) {\r\n              marks.push(\r\n                generateUserMark(workplace, user, userImage[workplace.id])\r\n              );\r\n            }\r\n\r\n            return marks;\r\n          })\r\n        );\r\n      }),\r\n      tap(() => this._loading.next(false)),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n  get popup$(): Subject<TemplateRef<any>> {\r\n    return this._popup;\r\n  }\r\n  get mapMarksWithPopup$(): Observable<any> {\r\n    return combineLatest([this.popup$, this.mapMarks$]).pipe(\r\n      map(([templateRef, marks]) => {\r\n        return marks.map((_m) => {\r\n          if (_m.logicType === 'Workplace' || _m.logicType === 'Room' || _m.logicType === 'ParkingLot') {\r\n            _m.popup = templateRef;\r\n          }\r\n          return _m;\r\n        });\r\n      })\r\n    );\r\n  }\r\n  get selectedWorkplace$(): Observable<Record<string, any>> {\r\n    return this.$map.mark$;\r\n  }\r\n  // TODO shareReplay не помогает и запрос летит 6 раз (withLatestFrom)\r\n  get userReservation$(): Observable<IWorkplaceReservation> {\r\n    return this.userSelected$.pipe(\r\n      switchMap((user) => {\r\n        if (user) {\r\n          return this.$api\r\n            .getWorkplaceReservations({\r\n              labelId: user.id,\r\n            })\r\n            .pipe(map((data) => (data?.length > 0 ? data[0] : null)));\r\n        }\r\n        return of(null);\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n  get userWorkplace$(): Observable<IWorkplace> {\r\n    return this.userReservation$.pipe(\r\n      switchMap((reservation) => {\r\n        if (reservation) {\r\n          return this.workplaces$.pipe(\r\n            map((workplaces) =>\r\n              workplaces.find((w) => reservation.workplaceId === w.id)\r\n            )\r\n          );\r\n        }\r\n        return of(null);\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n  get userFloor$(): Observable<IFloor> {\r\n    return this.userWorkplace$.pipe(\r\n      switchMap((workplace) => {\r\n        if (workplace) {\r\n          return this.floors$.pipe(\r\n            map((floors) => floors.find((f) => f.id === workplace.floorMapId))\r\n          );\r\n        }\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n  get userSelected$(): BehaviorSubject<IUser> {\r\n    return this._userSelected;\r\n  }\r\n  get userComplexData$(): Observable<{\r\n    user: IUser;\r\n    reservation: IWorkplaceReservation;\r\n    workplace: IWorkplace;\r\n    floor: IFloor;\r\n  }> {\r\n    return zip(\r\n      this.userSelected$,\r\n      this.userReservation$,\r\n      this.userWorkplace$,\r\n      this.userFloor$\r\n    ).pipe(\r\n      map(([user, reservation, workplace, floor]) => ({\r\n        user,\r\n        reservation,\r\n        workplace,\r\n        floor,\r\n      }))\r\n    );\r\n  }\r\n  get users$(): Observable<IUser[]> {\r\n    return this.$dictionary.getDictionary('labels');\r\n  }\r\n  get currentCustomObject$(): Observable<ICustomObject[]> {\r\n    return this.currentFloor$.pipe(\r\n      switchMap((floor) => {\r\n        if (!floor) {\r\n          return of(null);\r\n        }\r\n        return this.$dictionary\r\n          .getDictionary<ICustomObject[]>('customObjects')\r\n          .pipe(\r\n            map((objs) => objs.filter((obj) => obj.floorMapId === floor?.id))\r\n          );\r\n      }),\r\n      filter((data) => Boolean(data))\r\n    );\r\n  }\r\n  get currentUsersWithWorkplace$(): Observable<\r\n    { user: IUser; workplace: IWorkplace }[]\r\n  > {\r\n    return combineLatest([this.currentFloor$, this.filterValueOptimize$]).pipe(\r\n      switchMap(([floor, dates]) => {\r\n        if (floor && dates) {\r\n          return forkJoin([\r\n            this.$dictionary.getDictionary<IUser[]>('labels'),\r\n            this.$api.getWorkplaceReservations({\r\n              floorMapId: floor.id,\r\n              dateTimeFrom: this._getApiDate(dates[0]),\r\n              dateTimeTo: this._getApiDate(dates[1]),\r\n            }),\r\n            this.$dictionary.getDictionary<IWorkplace[]>('workplaces'),\r\n          ]).pipe(\r\n            map(([users, reservations, workplaces]) => {\r\n              return reservations.map((r) => ({\r\n                user: users.find((u) => u.id === r.labelId),\r\n                workplace: workplaces.find((w) => w.id === r.workplaceId),\r\n              }));\r\n            })\r\n          );\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n  private _floorWorkplaceReservationSocialDistanceCheck: ReservationSocialDistanceCheck =\r\n    null;\r\n  private _workplaceReservations: IWorkplaceReservation[] = null;\r\n  private _workplaces: IWorkplace[] = null;\r\n  private _parkingLots: IWorkplace[] = null;\r\n  private _rooms: IRoom[] = null;\r\n  private readonly _loading: BehaviorSubject<boolean> =\r\n    new BehaviorSubject<boolean>(false);\r\n  private readonly _filter: BehaviorSubject<any> = new BehaviorSubject<any>(\r\n    null\r\n  );\r\n  private readonly _popup: Subject<TemplateRef<any>> = new Subject<\r\n    TemplateRef<any>\r\n  >();\r\n  private readonly _reload: BehaviorSubject<any> = new BehaviorSubject<any>(\r\n    null\r\n  );\r\n  private readonly _userSelected: BehaviorSubject<IUser> =\r\n    new BehaviorSubject<IUser>(null);\r\n  get areas$(): Observable<IArea[]> {\r\n    return this.currentFloor$.pipe(\r\n      switchMap((floor) =>\r\n        this.$dictionary\r\n          .getDictionary<IArea[]>('areas')\r\n          .pipe(map((areas) => areas.filter((a) => a.floorMapId === floor.id)))\r\n      )\r\n    );\r\n  }\r\n\r\n  currentRoom(id: number) {\r\n    return this._rooms.find((w) => w.id === id);\r\n  }\r\n  currentWorkplace(id: number) {\r\n    return this._workplaces.find((w) => w.id === id);\r\n  }\r\n  currentParkingLot(id: number) {\r\n    return this._parkingLots.find((p) => p.id === id);\r\n  }\r\n\r\n  isConfirmation(workplaceId: number): boolean {\r\n    if (this._floorWorkplaceReservationSocialDistanceCheck === 'CONFIRMATION') {\r\n      const currentWorkplace = this._workplaces.find(\r\n        (w) => w.id === workplaceId\r\n      );\r\n      return checkReservedNeighbors(\r\n        currentWorkplace,\r\n        this._workplaceReservations\r\n      );\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  confirmationModal(id: number): void {\r\n    const nzOnOk = () => {\r\n      this.reservationWorkplace(id).then((res) => {\r\n        if (res.success) {\r\n          this.$notifications.success('Успешно', res.data.RESULT_SUCCESS);\r\n          this.reload();\r\n        } else {\r\n          this.$notifications.error('Ошибка', res.error.message);\r\n        }\r\n      });\r\n    };\r\n    this.$modal.confirm(getDistanceCheckConfirmModal(nzOnOk));\r\n  }\r\n  private _markDistributionImage(\r\n    reservation: IWorkplaceReservation,\r\n    workplace: IWorkplace\r\n  ): string {\r\n    let img = workplace.imageFreeUrl;\r\n    if (workplace.disabled) {\r\n      img = workplace.imageDisabledUrl;\r\n    }\r\n    if (reservation) {\r\n      if (reservation.labelId === this.$user.info.id) {\r\n        img =\r\n          reservation.status === 'CONFIRMED'\r\n            ? workplace.imageReservedByMeUrl\r\n            : workplace.imageReservedByMeNotConfirmedUrl;\r\n      } else {\r\n        img = workplace.imageReservedByUserUrl;\r\n      }\r\n    }\r\n    return img || DEFAULT_MAP_POINT;\r\n  }\r\n  private _getApiDate(date: Date): string {\r\n    return this.datePipe.transform(\r\n      date,\r\n      this.$measurements.getMeasurementByName('filterDate')\r\n    );\r\n  }\r\n  dropdownSelect(\r\n    value: IDropdownSelectValue = { label: 0, value: 0 }\r\n  ): Record<string, any> {\r\n    return {\r\n      values: [],\r\n      value,\r\n    };\r\n  }\r\n  getImageBlob(url: string): Observable<SafeUrl> {\r\n    return this.$images.getImageBlob(url);\r\n  }\r\n  reservationParkingLot(id: number): Promise<any> {\r\n    const [startDate, endDate] = this.getFilterValue();\r\n    const params: Record<string, any> = {\r\n      parkingLotId: id,\r\n      labelId: this.$user.info.id,\r\n      dateTimeFrom: this._getApiDate(startDate),\r\n      dateTimeTo: this._getApiDate(endDate),\r\n      tokenUUID: this.$user.info.tokenUUID,\r\n    };\r\n    return this.$api.putParkingLotReservation(params).toPromise();\r\n  }\r\n  reservationWorkplace(id: number): Promise<any> {\r\n    const [startDate, endDate] = this.getFilterValue();\r\n    const params: Record<string, any> = {\r\n      workplaceId: id,\r\n      labelId: this.$user.info.id,\r\n      dateTimeFrom: this._getApiDate(startDate),\r\n      dateTimeTo: this._getApiDate(endDate),\r\n      tokenUUID: this.$user.info.tokenUUID,\r\n    };\r\n    return this.$api.putWorkplaceReservation(params).toPromise();\r\n  }\r\n  reservationRoom(id: number): Promise<any> {\r\n    const [startDate, endDate] = this.getFilterValue();\r\n    const reservations = [\r\n      {\r\n        appointmentRoomsList: [id],\r\n        appointmentDateFrom: this._getApiDate(startDate),\r\n        appointmentDateTo: this._getApiDate(endDate),\r\n        recordCode: 'main',\r\n        labelId: this.$user.info.id,\r\n      },\r\n    ];\r\n\r\n    let params = { appointments: reservations };\r\n\r\n    return this.$api.putReservationsByType('appointment', params).toPromise();\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IMultiSwitcherItem } from '@base/multi-switcher/multi-switcher.model';\r\n\r\n@Component({\r\n  selector: 'app-multi-switcher',\r\n  templateUrl: './multi-switcher.component.html',\r\n  styleUrls: ['./multi-switcher.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultiSwitcherComponent implements OnInit {\r\n  @Input() gutter: number = 0;\r\n  @Input() items: IMultiSwitcherItem[];\r\n  @Output() readonly valueChange: EventEmitter<string | number> = new EventEmitter<string | number>();\r\n  @Input() value: string;\r\n  constructor() {}\r\n  ngOnInit(): void {}\r\n  change(value: string | number): void {\r\n    this.valueChange.emit(value);\r\n  }\r\n}\r\n","<nz-radio-group\r\n  nzButtonStyle=\"solid\"\r\n  [ngModel]=\"value || 0\"\r\n  (ngModelChange)=\"change($event)\"\r\n  class=\"app-multi-switcher\">\r\n  <label\r\n    nz-radio-button\r\n    *ngFor=\"let item of items; index as i; last as last\"\r\n    [nzValue]=\"item.value || i\"\r\n    [style]=\"last ? null : {'margin-right': gutter + 'px'}\"\r\n    [nz-tooltip]=\"item.tooltip\"\r\n  >\r\n    {{ item.label }}\r\n    <i *ngIf=\"item.icon\" nz-icon [nzType]=\"item.icon\"></i>\r\n  </label>\r\n</nz-radio-group>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OfficesMapComponent } from './offices-map.component';\r\nimport { MapModule } from '@base/map/map.module';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { DropdownSelectModule } from '@base/dropdown-select/dropdown-select.module';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { WorkplaceCardModule } from '@composite/workplace-card/workplace-card.module';\r\nimport { FiltersModule } from '@base/filters/filters.module';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { MultiSwitcherModule } from '@base/multi-switcher/multi-switcher.module';\r\nimport { OfficesMapRoutingModule } from '@presentation/offices/offices-map/offices-map-routing.module';\r\nimport { ImagesModule } from '@shared/images/images.module';\r\n\r\n@NgModule({\r\n  declarations: [OfficesMapComponent],\r\n  exports: [OfficesMapComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MapModule,\r\n    NzGridModule,\r\n    NzMenuModule,\r\n    NzDropDownModule,\r\n    NzIconModule,\r\n    DropdownSelectModule,\r\n    NzDatePickerModule,\r\n    FormsModule,\r\n    NzSliderModule,\r\n    NzToolTipModule,\r\n    WorkplaceCardModule,\r\n    FiltersModule,\r\n    NzSelectModule,\r\n    NzInputModule,\r\n    NzButtonModule,\r\n    NzSpinModule,\r\n    MultiSwitcherModule,\r\n    ImagesModule,\r\n    OfficesMapRoutingModule,\r\n  ],\r\n})\r\nexport class OfficesMapModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OfficesMapComponent } from '@presentation/offices/offices-map/offices-map.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OfficesMapComponent,\r\n    data: {\r\n      title: 'Карта этажа офиса'\r\n    }\r\n  },\r\n  {\r\n    path: ':placeId',\r\n    component: OfficesMapComponent,\r\n    data: {\r\n      title: 'Карта этажа офиса, место'\r\n    }\r\n  }\r\n];\r\n@NgModule({\r\n  exports: [],\r\n  imports: [RouterModule.forChild(routes)]\r\n})\r\nexport class OfficesMapRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}