{"version":3,"sources":["./src/app/presentation/team/team-create/components/team-filters/create-filter.utils.ts","./src/app/presentation/team/team-create/components/team-filters/create-filters-workplace/create-filter-workplace.service.ts","./src/app/shared/common/utils/filter.util.ts","./src/app/presentation/team/team-create/components/team-filters/create-filters-workplace/create-filter-workplace.component.ts","./src/app/presentation/team/team-create/components/team-filters/create-filters-workplace/create-filter-workplace.component.html","./src/app/presentation/team/team-create/components/create/create.utils.ts","./src/app/presentation/team/team-create/components/floor/floor.component.ts","./src/app/presentation/team/team-create/components/floor/floor.component.html","./src/app/base/filters/filters/filter.service.ts","./src/app/presentation/team/team-create/components/team-filters/create-filter.service.ts","./src/app/presentation/team/team-create/components/create/create.service.ts","./src/app/presentation/reservations/components/list/list-filters/list-filter.utils.ts","./src/app/presentation/team/team-create/components/create/create.component.ts","./src/app/presentation/team/team-create/components/create/create.component.html","./src/app/presentation/team/team-create/components/floor/floor.service.ts","./src/app/presentation/team/team-create/team-create.module.ts","./src/app/presentation/team/team-create/team-create-routing.module.ts","./src/app/presentation/team/team-create/components/team-filters/create-filter.component.ts","./src/app/presentation/team/team-create/components/team-filters/create-filter.component.html"],"names":[],"mappings":"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","file":"team-create-team-create-module.js","sourcesContent":["import { IDictionary, IDictionaryItem } from '@shared/dictionaries/dictionaries.model';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\n\r\nconst listFilterFields: Record<ReservationType, Record<string, any>> = {\r\n  appointment: {\r\n    floorMapId: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  locker: {\r\n    floorMapId: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  parking: {\r\n    floorMapId: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  workplace: {\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null,\r\n    tags: [],\r\n    repeat: null,\r\n    group: null,\r\n    labels: [],\r\n    types: ['DEFAULT', 'COMPLEMENTARY'],\r\n    autoMode: true,\r\n  }\r\n};\r\n\r\nexport function getListFilterFieldsByType(type: ReservationType): Record<string, any> | null {\r\n  return listFilterFields[type] || null;\r\n}\r\n\r\nexport function mapCheckBoxOptions<T extends IDictionaryItem = IDictionaryItem>(\r\n  items: IDictionary<T>,\r\n  valueField: keyof T,\r\n  labelField: keyof T,\r\n  control: FormControl\r\n): IFilterCheckBoxOptions {\r\n  return items.map((item: T) => {\r\n    const value: any = item[valueField];\r\n    const label: any = item[labelField];\r\n\r\n    const checked: boolean = Boolean(control.value?.includes(value));\r\n\r\n    return { ...item, label, value, checked };\r\n  });\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { FilterService } from '@base/filters/filters/filter.service';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\nimport { IUser } from '@core/models/user.model';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { mapBuildingsOptions } from '@presentation/reservations/components/list/list-filters/list-filter.utils';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { IDictionaryBuildings } from '@shared/dictionaries/dictionaries.model';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { ILabelGroups } from '@shared/http/models/database.model';\r\nimport { UserOfficesService } from '@src/app/core/services/user-offices.service';\r\nimport { DisabledTimeFn } from 'ng-zorro-antd/date-picker';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class CreateFilterWorkplaceService extends FilterService {\r\n  user: IUser;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $dictionaries: DictionariesService,\r\n    private $userOffices: UserOfficesService,\r\n    private $measurements: MeasurementsService,\r\n    private _user: UserService,\r\n  ) {\r\n    super(injector);\r\n    this.user = this._user.info;\r\n  }\r\n\r\n  public get dateTimeFormat$(): Observable<string> {\r\n    return this.$measurements.getMeasurementByName$('shortDateTime');\r\n  }\r\n\r\n  get dateFormat$(): Observable<string> {\r\n    return this.$measurements.getMeasurementByName$('shortDate');\r\n  }\r\n\r\n  public get buildings$(): Observable<IFilterCheckBoxOptions> {\r\n    return this.$userOffices.getMyOrderedBuildings<IDictionaryBuildings>().pipe(\r\n      map((buildings) =>\r\n        mapBuildingsOptions(buildings, this.getFormControlByName('buildingId')))\r\n    );\r\n  }\r\n\r\n  get groups$(): Observable<ILabelGroups[]> {\r\n    return this.getDictionaryByName<ILabelGroups[]>('labelGroups').pipe(\r\n      map((groups) => groups.filter((group) => this.user.labelGroups.includes(group.id)))\r\n    );\r\n  }\r\n\r\n  get tags$(): Observable<any> {\r\n    return this.$dictionaries.getDictionary('tags');\r\n  }\r\n\r\n  getUserByGroupId(id: number): Observable<Record<string, any>> {\r\n    return this.$dictionaries.getDictionary('labels').pipe(\r\n      map((users) => users.filter((user) => user.labelGroups.includes(id)))\r\n    );\r\n  }\r\n\r\n  getDisabledTime(start: number, end: number): DisabledTimeFn {\r\n    return () => ({\r\n      nzDisabledHours: () => [...this._range(0, start), ...this._range(end, 24)],\r\n      nzDisabledMinutes: (hour) => {\r\n        if (hour === 18) {\r\n          return this._range(31, 60);\r\n        } else {\r\n          return [];\r\n        }\r\n      },\r\n      nzDisabledSeconds: () => []\r\n    });\r\n  }\r\n\r\n  private getDictionaryByName<T>(name: DictionaryName): Observable<T> {\r\n    return this.$dictionaries.getDictionary<T>(name);\r\n  }\r\n\r\n  private _range(start: number, end: number): number[] {\r\n    const result: number[] = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { IDictionary, IDictionaryItem } from '@shared/dictionaries/dictionaries.model';\r\nimport { FormControl } from '@angular/forms';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\n\r\nexport function mapCheckBoxOptions<T extends Record<string, any> = IDictionaryItem>(\r\n  items: IDictionary<T>,\r\n  valueField: keyof T,\r\n  labelField: keyof T,\r\n  control: FormControl\r\n): IFilterCheckBoxOptions {\r\n  return items.map((item: T) => {\r\n    const value: any = item[valueField];\r\n    const label: any = item[labelField];\r\n    const checked: boolean = Boolean(control?.value?.includes?.(value));\r\n\r\n    return { ...item, label, value, checked };\r\n  });\r\n}\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Injector, OnDestroy, OnInit} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { getInitDate } from '@presentation/offices/offices-map/offices-map.utils';\r\nimport { mapCheckBoxOptions } from '@presentation/team/team-create/components/team-filters/create-filter.utils';\r\nimport { IDictionary } from '@shared/dictionaries/dictionaries.model';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CreateFilterWorkplaceService } from './create-filter-workplace.service';\r\nimport { FilterComponent } from '@base/filters/filters/filter.component';\r\nimport { Subscribe } from '@core/decorators/subscribe.decorator';\r\nimport { ILabelGroups } from '@shared/http/models/database.model';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport {IFilterCheckBoxOptions} from '@base/filters/models/filter-checkbox.model';\r\n// @ts-ignore\r\nimport { WorkplaceTypesMap } from '@shared/common/utils/workplace.utils';\r\nimport { isSameDay, addDays } from 'date-fns';\r\n\r\n@Component({\r\n  selector: 'app-create-filters-workplace, [app-create-filters-workplace]',\r\n  templateUrl: './create-filter-workplace.component.html',\r\n  styleUrls: [ './create-filter-workplace.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.app-list-filter-workplace]': `true`\r\n  },\r\n  providers: [ CreateFilterWorkplaceService ]\r\n})\r\nexport class CreateFilterWorkplaceComponent extends FilterComponent implements OnInit, OnDestroy {\r\n  floorMapIdControl: FormControl;\r\n  dateTimeFromControl: FormControl;\r\n  dateTimeToControl: FormControl;\r\n  tagsControl: FormControl;\r\n  repeatControl: FormControl;\r\n  groupControl: FormControl;\r\n  labelsControl: FormControl;\r\n  typesControl: FormControl;\r\n  autoModeControl: FormControl;\r\n  allDay = false;\r\n  repeat = false;\r\n  repeatData = {\r\n    weekNum: 1,\r\n    days: [],\r\n    end: null\r\n  };\r\n  repeatDisable: boolean;\r\n  weekNums = [1, 2, 3, 4, 5];\r\n  daysNaming = [\r\n    { label: 'Days.1', value: 1 },\r\n    { label: 'Days.2', value: 2 },\r\n    { label: 'Days.3', value: 3 },\r\n    { label: 'Days.4', value: 4 },\r\n    { label: 'Days.5', value: 5 },\r\n    { label: 'Days.6', value: 6 },\r\n    { label: 'Days.0', value: 0 },\r\n  ];\r\n  workHours = [];\r\n  minDuration: number;\r\n  endMaxDate: Record<string, any> = {};\r\n\r\n  tagsStatus: Record<string, boolean> = {};\r\n  typesCheckBoxOptions: IFilterCheckBoxOptions;\r\n\r\n  @Subscribe<string>()\r\n  dateFormat;\r\n\r\n  @Subscribe<string>()\r\n  dateTimeFormat;\r\n\r\n  labelGroups: ILabelGroups[];\r\n\r\n  tags;\r\n\r\n  users: Record<string, any>;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $service: CreateFilterWorkplaceService,\r\n    private $settings: SettingsService,\r\n    private _localization: LocalizationService,\r\n    private _cdr: ChangeDetectorRef\r\n  ) {\r\n    super(injector);\r\n    const startHour = this.$settings.getSettingByName('workplaceReservationBeginHourDefault');\r\n    const endHour = this.$settings.getSettingByName('workplaceReservationEndHourDefault');\r\n\r\n    this.workHours = [startHour, endHour];\r\n    this.minDuration = this.$settings.getSettingByName('workplaceReservationDurationMinSeconds');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.$service.formGroup = this.formGroup;\r\n    this.assignControls();\r\n    this.getFieldOptions();\r\n    this.getWorkplaceTypes();\r\n    this._getExtraData();\r\n    this._setFullDay();\r\n    this._watchDateTimeFrom();\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  ngOnDestroy() {}\r\n\r\n  updateDateTime(dateTime: Date[]): void {\r\n    this.dateTimeFromControl.setValue(dateTime[0]);\r\n    this.dateTimeToControl.setValue(dateTime[1]);\r\n    this.repeatDisable = !isSameDay(dateTime[0], dateTime[1]);\r\n  }\r\n\r\n  updateAllDayDate(date: Date): void {\r\n    this._setFullDay();\r\n  }\r\n\r\n  updateTags(name: string): void {\r\n    this.tagsStatus[name] = !this.tagsStatus[name];\r\n    const tags = Object.entries(this.tagsStatus).filter(([_, status]) => status).map(([key]) => key);\r\n    this.tagsControl.setValue(tags);\r\n  }\r\n\r\n  repeatCheckboxChange(): void {\r\n    if (this.repeat) {\r\n      this.repeatControl.setValue(this.repeatData);\r\n    } else {\r\n      this.repeatControl.setValue(null);\r\n    }\r\n  }\r\n\r\n  chooseDays(event): void {\r\n    this.repeatData.days = event;\r\n    this.updateRepeatDays();\r\n  }\r\n\r\n  updateRepeatDays(): void {\r\n    const end = this.repeatData.end || '';\r\n    if (this.repeat) {\r\n      this.repeatControl.setValue({\r\n        ...this.repeatData,\r\n        end\r\n      });\r\n    } else {\r\n      this.repeatControl.setValue(null);\r\n    }\r\n  }\r\n\r\n  updateLabelControls(): void {\r\n    this.labelsControl.setValue(this.users.filter(u => u.checked).map(u => u.id));\r\n  }\r\n\r\n  getWorkplaceTypes(): void {\r\n    this.typesCheckBoxOptions = mapCheckBoxOptions(WorkplaceTypesMap, 'value', 'name', this.typesControl);\r\n  }\r\n\r\n  private getFieldOptions(): void {\r\n    this.dateFormat = this.$service.dateFormat$;\r\n    this.dateTimeFormat = this.$service.dateTimeFormat$;\r\n    this.$service.tags$.subscribe((tags) => {\r\n      this.tagsStatus = tags.reduce((acc, el) => ({...acc, [el.name]: false}), {});\r\n      this.tags = tags;\r\n      this._cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private _setFullDay(): void {\r\n    const minDuration = this.$settings.getSettingByName('workplaceReservationDurationMinSeconds') * 1000;\r\n    const [start, end] = getInitDate(this.workHours, minDuration);\r\n    this.dateTimeFromControl.setValue(start);\r\n    this.dateTimeToControl.setValue(end);\r\n  }\r\n\r\n  private _getExtraData(): void {\r\n    this.$service.groups$.subscribe((groups) => {\r\n      this.labelGroups = groups;\r\n      this.groupControl.setValue(groups[0].id);\r\n      this._cdr.markForCheck();\r\n    });\r\n    this.groupControl.valueChanges.pipe(\r\n      switchMap((groupId) => this.$service.getUserByGroupId(groupId))\r\n    ).subscribe((users) => {\r\n      this.labelsControl.setValue(users.map(u => u.id));\r\n      this.users = mapCheckBoxOptions(users as IDictionary<any>, 'id', 'name', this.labelsControl);\r\n      this._cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private _watchDateTimeFrom(): void {\r\n    this.dateTimeFromControl.valueChanges.subscribe((value) => {\r\n      const date = addDays(new Date(value), this.$settings.getSettingByName('workplaceReservationDurationMaxDays'));\r\n      this.repeatData.end = date;\r\n      this.endMaxDate = (_date: Date) => {\r\n        return _date > date;\r\n      };\r\n    });\r\n  }\r\n}\r\n","<nz-form-item class=\"app-list-filter-item\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'User group'}\"></ng-container>\r\n  <nz-select *ngIf=\"labelGroups?.length\" [formControl]=\"groupControl\">\r\n    <nz-option *ngFor=\"let group of labelGroups\" [nzValue]=\"group.id\" [nzLabel]=\"group.name\"></nz-option>\r\n  </nz-select>\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Users'}\"></ng-container>\r\n  <nz-form-control>\r\n    <app-filter-checkbox [formControl]=\"labelsControl\"\r\n                         [options]=\"users || []\"\r\n                         [maxHeight]=\"'320px'\"\r\n                         [allowSearch]=\"true\"\r\n                         [disabled]=\"labelsControl?.value === null\"\r\n                         [allowEmpty]=\"false\"\r\n                         [allowSelectAll]=\"true\"\r\n    >\r\n    </app-filter-checkbox>\r\n  </nz-form-control>\r\n  <nz-form-control class=\"mt-24\">\r\n    <label nz-checkbox\r\n           [formControl]=\"autoModeControl\">\r\n        {{'Auto choose places through one' | translate}}\r\n    </label>\r\n  </nz-form-control>\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Period'}\"></ng-container>\r\n\r\n  <app-filter-date [ngModel]=\"[dateTimeFromControl.value, dateTimeToControl.value]\"\r\n                   [layout]=\"'vertical'\"\r\n                   [format]=\"dateTimeFormat\"\r\n                   [workHours]=\"workHours\"\r\n                   [minDuration]=\"minDuration\"\r\n                   [allowAllDay]=\"true\"\r\n                   [autoUpdateDateTo]=\"true\"\r\n                   [autoUpdateDateToFullDay]=\"true\"\r\n                   (ngModelChange)=\"updateDateTime($event)\"\r\n  >\r\n  </app-filter-date>\r\n  <br />\r\n  <label nz-checkbox\r\n         [(ngModel)]=\"repeat\"\r\n         [nzDisabled]=\"repeatDisable\"\r\n         (nzCheckedChange)=\"updateRepeatDays()\">\r\n    <h6 class=\"app-list-filter-item__title checkbox-title\">\r\n      {{'Repeat' | translate}}\r\n    </h6>\r\n  </label>\r\n  <div class=\"app-list-filter-item__repeat\">\r\n    <nz-input-group class=\"week-num mb-25\"\r\n                    [nzAddOnBefore]=\"'Every' | translate\"\r\n                    [nzAddOnAfter]=\"'week' | translate\">\r\n      <nz-select [nzDisabled]=\"!repeat\"\r\n                 [(ngModel)]=\"repeatData.weekNum\"\r\n                 (ngModelChange)=\"updateRepeatDays()\"\r\n                 [style.width.%]=\"100\">\r\n        <nz-option *ngFor=\"let week of weekNums\" [nzValue]=\"week\" [nzLabel]=\"week.toString()\"></nz-option>\r\n      </nz-select>\r\n    </nz-input-group>\r\n    <nz-checkbox-wrapper class=\"mb-15\" style=\"width: 100%;\" (nzOnChange)=\"chooseDays($event)\">\r\n      <div nz-row>\r\n        <div class=\"mb-10\" nz-col nzSpan=\"6\" *ngFor=\"let day of daysNaming\">\r\n          <label nz-checkbox [nzDisabled]=\"!repeat\" [nzValue]=\"day.value\">{{ day.label | translate }}</label>\r\n        </div>\r\n      </div>\r\n    </nz-checkbox-wrapper>\r\n    <nz-input-group [nzAddOnBefore]=\"'End' | translate\">\r\n      <nz-date-picker [(ngModel)]=\"repeatData.end\"\r\n                      [nzFormat]=\"dateFormat\"\r\n                      [nzDisabled]=\"!repeat\"\r\n                      [nzDisabledDate]=\"endMaxDate\"\r\n                      (ngModelChange)=\"updateRepeatDays()\">\r\n      </nz-date-picker>\r\n    </nz-input-group>\r\n  </div>\r\n</nz-form-item>\r\n\r\n<nz-form-item class=\"app-reservations-filter-item\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Type'}\"></ng-container>\r\n  <nz-form-control>\r\n    <app-filter-checkbox [formControl]=\"typesControl\"\r\n                         [options]=\"typesCheckBoxOptions\"\r\n    >\r\n    </app-filter-checkbox>\r\n  </nz-form-control>\r\n</nz-form-item>\r\n\r\n<nz-form-item class=\"app-list-filter-item\" *ngIf=\"tags?.length\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Environment'}\"></ng-container>\r\n  <div *ngIf=\"tags\">\r\n    <nz-tag  *ngFor=\"let tag of tags\"\r\n             class=\"tag\"\r\n             [nzColor]=\"tagsStatus[tag.name] ? 'processing' : 'default'\"\r\n             (click)=\"updateTags(tag.name)\">\r\n      {{ tag.name }}\r\n    </nz-tag>\r\n  </div>\r\n\r\n</nz-form-item>\r\n\r\n<ng-template #titleTpl let-title>\r\n  <h6 class=\"app-list-filter-item__title\">\r\n    {{title | translate}}\r\n  </h6>\r\n</ng-template>\r\n","import { IOpenStreetMapOptions } from '@base/open-street-map/open-street-map.model';\r\nimport { IBookingItemAction } from '@base/booking-list/booking-item/booking-item.model';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { IDictionary, IDictionaryBuildings, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\n\r\nexport const OSM_OPTIONS: IOpenStreetMapOptions = {\r\n  x: 56.8587214,\r\n  y: 35.9175965,\r\n  zoom: 6,\r\n};\r\n\r\nexport function getBookingItemAction(id: number, handler: () => void): IBookingItemAction {\r\n  return {\r\n    id,\r\n    title: 'SelectOffice',\r\n    type: 'primary',\r\n    handler\r\n  };\r\n}\r\n\r\nexport function mapBuildingsToBookingItems(buildings: IDictionaryBuildings, handler: (id: number) => void\r\n): IBookingItems {\r\n  return buildings.map((building, index) => ({\r\n      ...building,\r\n      coordinates: {\r\n        x: building.latitude,\r\n        y: building.longitude\r\n      },\r\n      actions: [ getBookingItemAction(building.id, handler.bind(null, building.id)) ]\r\n    })\r\n  );\r\n}\r\n\r\nexport function mapBusyLiveData(\r\n  buildings: IDictionaryBuildings,\r\n  floors: IDictionaryFloorMaps,\r\n  workplaces: IDictionary,\r\n  busyLiveData: Record<string, any>\r\n): Record<string, any> {\r\n  return buildings.reduce((a, c) => {\r\n    const floorsIds = floors.filter(f => f.buildingId === c.id).map(f => f.id);\r\n    const buildPlaces = workplaces.filter(w => floorsIds.includes(w.floorMapId));\r\n    const buildIds = buildPlaces.map(build => build.id);\r\n    const busyWorkplaces = busyLiveData && busyLiveData.busyWorkplaces.map(w => w.id) || [];\r\n    const busyNum = new Set(busyWorkplaces.filter(id => buildIds.includes(id))).size;\r\n\r\n    return {\r\n      ...a, [c.id]: {\r\n        workplaces: {\r\n          free: buildPlaces.length - busyNum,\r\n          busy: busyNum,\r\n          freePercents: Math.trunc(100 * (buildPlaces.length - busyNum) / buildPlaces.length)\r\n        }\r\n      }\r\n    };\r\n  }, {});\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  TemplateRef,\r\n  ChangeDetectorRef,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { IBookingItemAction } from '@base/booking-list/booking-item/booking-item.model';\r\nimport {\r\n  IBookingItems,\r\n  TAutoMode,\r\n} from '@base/booking-list/booking-list.model';\r\nimport { BookingListService } from '@base/booking-list/booking-list.service';\r\nimport { IMarks, MarkItemLogicType } from '@base/map/map-mark/map-mark.model';\r\nimport { IMapSize } from '@base/map/map.model';\r\nimport { MapService } from '@base/map/map.service';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { MessagesService } from '@core/services/messages.service';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { FloorService } from './floor.service';\r\nimport {\r\n  IFloor,\r\n  IWorkplace,\r\n} from '@presentation/reservations/reservation-create/models';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\r\nimport {\r\n  checkNeighbors,\r\n  checkReservedNeighbors,\r\n  getDistanceCheckConfirmModal,\r\n} from '@presentation/reservations/utils/reservation';\r\nimport { IArea } from '@shared/http/models/database.model';\r\nimport { ReservationMarksService } from '@src/app/core/services/reservation-marks.service';\r\n\r\nconst HEIGHT_EXCEPT_MAP: number = 335;\r\n\r\n@Component({\r\n  selector: 'app-floor',\r\n  templateUrl: './floor.component.html',\r\n  styleUrls: ['./floor.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [ReservationMarksService, FloorService],\r\n})\r\nexport class FloorComponent implements AfterViewInit, OnDestroy {\r\n  areas: IArea[];\r\n  areasVisible: boolean = false;\r\n  activeMarkIndex = null;\r\n  allReservations: any[];\r\n  floorsList: IFloor[];\r\n  currentFloor: IFloor;\r\n  currentBuild: Record<string, any>;\r\n  image: string;\r\n  imageSize: IMapSize = { width: null, height: null };\r\n  marks: IMarks = [];\r\n  currentReservation: Record<string, string | number | Array<any>> = {};\r\n  select = { value: { label: '', value: null }, values: [] };\r\n  bookingItems: IBookingItems;\r\n  centeredItemId: number;\r\n  hiddenMarksTypes: MarkItemLogicType[] = [];\r\n  reservations: Record<string, Array<any>> = {\r\n    success: [],\r\n    errors: [],\r\n  };\r\n  shortDateTimeFormat =\r\n    this._measurements.getMeasurementByName('shortDateTime');\r\n  currentWorkplace$ = new BehaviorSubject<Record<string, any>>(null);\r\n  selected: Record<number, IWorkplace>;\r\n  labels: Record<number, any>;\r\n  @MarkForCheck\r\n  mapHeight: number = 0;\r\n  resize$: Observable<any> = fromEvent(window, 'resize');\r\n\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n\r\n  @ViewChild('modalTitleTpl') modalTitleTpl: TemplateRef<any>;\r\n  @ViewChild('modalContentTpl') modalContentTpl: TemplateRef<any>;\r\n  @ViewChild('reservationModalTpl') reservationModalTpl: TemplateRef<any>;\r\n  @ViewChild('popupTpl') popupTpl: TemplateRef<any>;\r\n  toggleAreasVisible(): void {\r\n    this.areasVisible = !this.areasVisible;\r\n  }\r\n\r\n  constructor(\r\n    private _service: FloorService,\r\n    private _cdr: ChangeDetectorRef,\r\n    private _messages: MessagesService,\r\n    private _modal: NzModalService,\r\n    private _translatePipe: TranslatePipe,\r\n    private _measurements: MeasurementsService,\r\n    private _map: MapService,\r\n    private _bookingList: BookingListService\r\n  ) {\r\n    this.sub = this._service.floors$.subscribe(\r\n      ({ currentFloor, floorsList, currentBuild }) => {\r\n        this.floorsList = floorsList;\r\n        this.currentFloor = currentFloor;\r\n        this.currentBuild = currentBuild;\r\n\r\n        this.select = {\r\n          value: { label: currentFloor.name, value: currentFloor },\r\n          values: this.floorsList.map((floor) => ({\r\n            label: floor.name,\r\n            value: floor,\r\n          })),\r\n        };\r\n        this._bookingList.clearSelectedPlaces();\r\n        this._cdr.markForCheck();\r\n      }\r\n    );\r\n    this.sub = this._service.floorImage$.subscribe(\r\n      ({ image, imageSize, areas }) => {\r\n        this.image = image;\r\n        this.imageSize = imageSize;\r\n        this.areas = areas;\r\n        this._cdr.markForCheck();\r\n      }\r\n    );\r\n    this.sub = this._service.mapMarks$.subscribe((marks) => {\r\n      this.marks = marks.map((mark) => ({\r\n        ...mark,\r\n        popup: this.popupTpl,\r\n        onClick: () => {\r\n          this.currentWorkplace$.next(mark.relativePlace);\r\n          this.activeMarkIndex = this.bookingItems.findIndex(\r\n            (i) => i.id === mark.id\r\n          );\r\n          this._cdr.markForCheck();\r\n        },\r\n      }));\r\n      this._cdr.markForCheck();\r\n    });\r\n    this.sub = this._service.labelsFilter$.subscribe((labels) => {\r\n      this.labels = labels.reduce(\r\n        (acc, label) => ({ ...acc, [label.id]: label }),\r\n        {}\r\n      );\r\n      this.bookingItems =\r\n        (labels &&\r\n          labels.map((label) => ({\r\n            id: label.id,\r\n            name: label.name,\r\n            select: true,\r\n          }))) ||\r\n        [];\r\n      this._cdr.markForCheck();\r\n    });\r\n    this.sub = this._service.notReservWorkplaces$.subscribe((places) => {\r\n      this._bookingList.setPlaces(places);\r\n    });\r\n    this.sub = this._bookingList.selectedPlaces$.subscribe((selected) => {\r\n      this.selected = selected;\r\n    });\r\n    this.sub = this.resize$.pipe(debounceTime(500)).subscribe((_e) => {\r\n      this.setMapHeight();\r\n    });\r\n    this.sub = this._service.groupDisabledPlaces$.subscribe((disabled) => {\r\n      this._bookingList.setDisabled(disabled);\r\n    });\r\n    this.sub = this._service.reservations$.subscribe((reservs) => {\r\n      this.allReservations = reservs;\r\n    });\r\n  }\r\n\r\n  get filterDates$(): Observable<Record<string, string>> {\r\n    return this._service.filterDates$;\r\n  }\r\n\r\n  get repeatFilter$(): Observable<any> {\r\n    return this._service.repeatFilter$;\r\n  }\r\n\r\n  get loading$(): Observable<boolean> {\r\n    return this._service.loading$;\r\n  }\r\n\r\n  get autoModeFilter$(): Observable<TAutoMode> {\r\n    return this._service.autoModeFilter$;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setMapHeight();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  setCurrentFloor(floor): void {\r\n    this._service.changeFloor(floor.id);\r\n  }\r\n\r\n  goBuildingSelect(): void {\r\n    this._service.backToSelectBuildings();\r\n  }\r\n\r\n  changeFilters(filters): void {\r\n    this._service.setFilters(filters);\r\n  }\r\n\r\n  centerPlace(id: number): void {\r\n    this.centeredItemId = id;\r\n    this.currentWorkplace$.next(this.bookingItems.find((p) => p.id === id));\r\n  }\r\n\r\n  reservationTeamPlaces(): void {\r\n    const places = Object.entries(this.selected).reduce((acc, [key, value]) => {\r\n      if (value) {\r\n        acc[key] = value;\r\n      }\r\n      return acc;\r\n    }, {});\r\n    if (!Object.keys(places).length) {\r\n      this._messages.error('Необходимо выбрать место');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.currentFloor.workplaceReservationSocialDistanceCheck ===\r\n      'CONFIRMATION'\r\n    ) {\r\n      const placesValues = Object.values(places);\r\n      const distanceCheck = placesValues.some((place) =>\r\n        checkReservedNeighbors(place, this.allReservations)\r\n      );\r\n      const placesCross = checkNeighbors(placesValues);\r\n      if (distanceCheck || placesCross) {\r\n        this._modal.confirm(\r\n          getDistanceCheckConfirmModal(() => {\r\n            this.reservationPlace(places);\r\n          })\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.reservationPlace(places);\r\n  }\r\n\r\n  reservationPlace(places): void {\r\n    const _places = Object.entries<IWorkplace>(places)\r\n      .filter(([labelId]) => Object.keys(this.labels).includes(labelId))\r\n      .reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {});\r\n\r\n    this.currentReservation.buildName = this.currentBuild.name;\r\n    this.currentReservation.floorNumber = this.currentFloor.floorNumber;\r\n    this.currentReservation.places = Object.entries<IWorkplace>(_places).map(\r\n      ([labelId, place]) => ({\r\n        label: this.labels[labelId].name,\r\n        place: place.name,\r\n      })\r\n    );\r\n    let loading = false;\r\n    this._modal.create({\r\n      nzTitle: this.modalTitleTpl,\r\n      nzContent: this.modalContentTpl,\r\n      nzFooter: [\r\n        {\r\n          label: 'Отмена',\r\n          onClick: () => {\r\n            this._modal.closeAll();\r\n          },\r\n        },\r\n        {\r\n          label: 'Подтверждаю',\r\n          type: 'primary',\r\n          loading,\r\n          onClick: () => {\r\n            loading = true;\r\n            this._service\r\n              .reservationPlace(_places)\r\n              .then(({ data, dates, filters }) => {\r\n                loading = false;\r\n                this._modal.closeAll();\r\n                this.reservations.success = data\r\n                  .filter((r) => r.meta.isOk)\r\n                  .map((r) => {\r\n                    const [labelId, index] = r.meta.recordCode.split('-');\r\n                    return {\r\n                      label: this.labels[labelId].name,\r\n                      place: places[labelId].name,\r\n                      dates: dates[index],\r\n                      message: r.meta.message,\r\n                    };\r\n                  });\r\n                this.reservations.errors = data\r\n                  .filter((r) => !r.meta.isOk)\r\n                  .map((r) => {\r\n                    const [labelId, index] = r.meta.recordCode.split('-');\r\n                    return {\r\n                      label: this.labels[labelId].name,\r\n                      place: places[labelId].name,\r\n                      dates: dates[index],\r\n                      message: r.meta.message,\r\n                    };\r\n                  });\r\n                this._modal.create({\r\n                  nzTitle: 'Информация о бронирование',\r\n                  nzContent: this.reservationModalTpl,\r\n                  nzWidth: 1000,\r\n                  nzFooter: [\r\n                    {\r\n                      label: 'Ок',\r\n                      type: 'primary',\r\n                      onClick: () => {\r\n                        this._modal.closeAll();\r\n                      },\r\n                    },\r\n                  ],\r\n                });\r\n                this._service.reloadReservations();\r\n                this._bookingList.clearSelectedPlaces();\r\n              });\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  getAction(place: IWorkplace): IBookingItemAction {\r\n    return {\r\n      id: place.id,\r\n      title: 'Забронировать место',\r\n      type: 'primary',\r\n      handler: () => {\r\n        this.reservationPlace(place);\r\n      },\r\n    };\r\n  }\r\n\r\n  getDays(days: number[]): string {\r\n    return days\r\n      .map((day) => this._translatePipe.transform(`Days.${day}`))\r\n      .join(', ');\r\n  }\r\n\r\n  handleReservation(): void {\r\n    const place = this.currentWorkplace$.getValue();\r\n    if (\r\n      this.currentFloor.workplaceReservationSocialDistanceCheck ===\r\n      'CONFIRMATION'\r\n    ) {\r\n      const distanceCheck = checkReservedNeighbors(place, this.allReservations);\r\n      if (distanceCheck) {\r\n        this._modal.confirm(\r\n          getDistanceCheckConfirmModal(() => {\r\n            this.reservationPlace(place);\r\n          })\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.reservationPlace(place);\r\n  }\r\n\r\n  onAreaVisibilityChange(visible: boolean) {\r\n    this.areasVisible = visible;\r\n  }\r\n\r\n  onHiddenMarksChange(hiddenMarksTypes: MarkItemLogicType[]) {\r\n    this.hiddenMarksTypes = hiddenMarksTypes;\r\n  }\r\n\r\n  setMapHeight(): void {\r\n    const body = document.querySelector('body').offsetHeight;\r\n    this.mapHeight = body - HEIGHT_EXCEPT_MAP;\r\n  }\r\n}\r\n","<section class=\"workspace\">\r\n  <div class=\"workspace-wrapper\">\r\n    <ng-container>\r\n      <div>\r\n        <div class=\"workspace__top-controls\">\r\n          <a\r\n            class=\"workspace__top-controls-link\"\r\n            nz-button\r\n            nzType=\"link\"\r\n            (click)=\"goBuildingSelect()\"\r\n            >{{ \"Reservations.Back to building selection\" | translate }}</a\r\n          >\r\n          <app-dropdown-select\r\n            class=\"workspace__top-controls-dropdown-select\"\r\n            [values]=\"select.values\"\r\n            [value]=\"select.value\"\r\n            (valueChange)=\"setCurrentFloor($event.value)\"\r\n          ></app-dropdown-select>\r\n        </div>\r\n        <app-map\r\n          class=\"workspace__map\"\r\n          [img]=\"image\"\r\n          [marks]=\"marks\"\r\n          [size]=\"imageSize\"\r\n          [height]=\"mapHeight\"\r\n          [centeredMarkId]=\"centeredItemId\"\r\n          [loading]=\"loading$ | async\"\r\n          [areas]=\"areas\"\r\n          [areasVisible]=\"areasVisible\"\r\n          [hiddenMarksTypes]=\"hiddenMarksTypes\"\r\n          (hiddenMarksChange)=\"onHiddenMarksChange($event)\"\r\n          (areaVisibilityChange)=\"onAreaVisibilityChange($event)\"\r\n        >\r\n        </app-map>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div class=\"workspace__actions\">\r\n      <div class=\"workspace__button\">\r\n        <button nz-button nzType=\"primary\" (click)=\"reservationTeamPlaces()\">\r\n          'Забронировать'\r\n        </button>\r\n      </div>\r\n      <app-book-list\r\n        appScroll\r\n        [items]=\"bookingItems\"\r\n        [activeIndex]=\"activeMarkIndex\"\r\n        [emptyText]=\"'No available users'\"\r\n        [autoMode]=\"autoModeFilter$ | async\"\r\n        (activeItemId)=\"centerPlace($event)\"\r\n      >\r\n      </app-book-list>\r\n    </div>\r\n    <div\r\n      app-create-filters\r\n      [type]=\"'workplace'\"\r\n      (valuesChange)=\"changeFilters($event)\"\r\n      class=\"app-list__filters workspace__actions workspace__filters\"\r\n    ></div>\r\n  </div>\r\n</section>\r\n\r\n<ng-template #modalTitleTpl>\r\n  <span class=\"modal-title\">\r\n    <i nz-icon nzType=\"check-circle\"></i>Подтверждение брони\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #modalContentTpl>\r\n  <div class=\"modal-content\">\r\n    <span class=\"modal-content__name\">Здание: </span>\r\n    <span>БЦ {{ currentReservation.buildName }}</span>\r\n  </div>\r\n  <div class=\"modal-content\">\r\n    <span class=\"modal-content__name\">Этаж: </span>\r\n    <span>{{ currentReservation.floorNumber }}</span>\r\n  </div>\r\n  <div class=\"modal-content\" *ngIf=\"filterDates$ | async as dates\">\r\n    <span class=\"modal-content__name\">Дата: </span>\r\n    <span>с {{ dates.dateTimeFrom }} по {{ dates.dateTimeTo }}</span>\r\n  </div>\r\n  <div class=\"modal-content\" *ngIf=\"repeatFilter$ | async as repeat\">\r\n    <span class=\"modal-content__name\">Повторять: </span>\r\n    <span>кажд. {{ repeat.weekNum }} нед. {{ getDays(repeat.days) }}</span>\r\n  </div>\r\n  <div class=\"modal-content\" *ngIf=\"repeatFilter$ | async as repeat\">\r\n    <span class=\"modal-content__name\">Завершение повторений: </span>\r\n    <span>{{ repeat.end }}</span>\r\n  </div>\r\n  <div class=\"modal-content\">\r\n    <div *ngFor=\"let place of currentReservation.places\">\r\n      <span class=\"modal-content__name\"> {{ place.label }}: </span>\r\n      <span>{{ place.place }}</span>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #reservationModalTpl>\r\n  <div [style.max-height.px]=\"400\" appScroll>\r\n    <div *ngIf=\"reservations.success.length\" class=\"mb-25\">\r\n      <div>\r\n        <span class=\"modal-title\">\r\n          <i nz-icon nzType=\"check-circle\"></i>Успешно забронировано\r\n        </span>\r\n      </div>\r\n      <div class=\"modal-content\" *ngFor=\"let item of reservations.success\">\r\n        <span class=\"modal-content__name\"\r\n          >{{ item.label }}, {{ item.place }},\r\n          {{ item.dates[0] | date: shortDateTimeFormat }} -\r\n          {{ item.dates[1] | date: shortDateTimeFormat }}:\r\n        </span>\r\n        <span>{{ item.message }}</span>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"reservations.errors.length\">\r\n      <div>\r\n        <span class=\"modal-title\">\r\n          <i nz-icon nzType=\"close-circle\" class=\"error\"></i>Не удалось\r\n          забронировать\r\n        </span>\r\n      </div>\r\n      <div class=\"modal-content\" *ngFor=\"let err of reservations.errors\">\r\n        <span class=\"modal-content__name\"\r\n          >{{ err.label }}, {{ err.place }},\r\n          {{ err.dates[0] | date: shortDateTimeFormat }} -\r\n          {{ err.dates[1] | date: shortDateTimeFormat }}:\r\n        </span>\r\n        <span>{{ err.message }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #popupTpl>\r\n  <app-workplace-card\r\n    *ngIf=\"currentWorkplace$ | async as place\"\r\n    [showPermanentAssignment]=\"true\"\r\n    [disabled]=\"place?.disabled\"\r\n    [workplaceId]=\"place?.id\"\r\n    [hideReserveBtn]=\"true\"\r\n    (reservation)=\"handleReservation()\"\r\n  >\r\n  </app-workplace-card>\r\n</ng-template>\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n  protected _formGroup: FormGroup = new FormGroup({});\r\n\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n  }\r\n\r\n  public set formGroup(formGroup: FormGroup) {\r\n    this._formGroup = formGroup;\r\n  }\r\n\r\n  public getFormControlByName(name: string): FormControl {\r\n    return this._formGroup.controls[name] as FormControl;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { getListFilterFieldsByType } from './create-filter.utils';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\n\r\n@Injectable()\r\nexport class CreateFilterService {\r\n  private _formGroup: FormGroup = new FormGroup({});\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n  }\r\n\r\n  public get formGroup(): FormGroup {\r\n    return this._formGroup;\r\n  }\r\n\r\n  public createFormGroup(type: ReservationType): void {\r\n    this.clearFormGroup();\r\n    this.addFormGroupControls(type);\r\n  }\r\n\r\n  public clear(formGroup: FormGroup): void {\r\n    Object.values(this.formGroup.controls).forEach((control) => {\r\n      if (control.value instanceof Array) {\r\n        control.setValue([]);\r\n        return;\r\n      }\r\n\r\n      control.setValue(null);\r\n    })\r\n  }\r\n\r\n  private clearFormGroup(): void {\r\n    Object.keys(this._formGroup.controls)\r\n      .forEach(key => this._formGroup.removeControl(key));\r\n  }\r\n\r\n  private addFormGroupControls(type: ReservationType): void {\r\n    if (!type) {\r\n      this._formGroup = new FormGroup({});\r\n      return;\r\n    }\r\n\r\n    Object.entries(getListFilterFieldsByType(type))\r\n      .forEach(([ name, state ]) =>\r\n        this._formGroup.addControl(\r\n          name,\r\n          this.formBuilder.control(state)\r\n        )\r\n      )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport { UserOfficesService } from '@src/app/core/services/user-offices.service';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { map, pluck } from 'rxjs/operators';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { mapBuildingsToBookingItems, mapBusyLiveData } from '@presentation/team/team-create/components/create/create.utils';\r\nimport { IDictionaryBuildings, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\n\r\n@Injectable()\r\nexport class CreateService {\r\n  constructor(\r\n    private _dicts: DictionariesService,\r\n    private $reservationsApi: ReservationsApiService,\r\n    private $userOffices: UserOfficesService,\r\n    private $buildings: BuildingsService,\r\n    private $floorMaps: FloorMapsService,\r\n    private $router: Router,\r\n    private $route: ActivatedRoute,\r\n  ) {\r\n  }\r\n\r\n  get buildingsList$(): Observable<IBookingItems> {\r\n    return this.buildings$.pipe(\r\n      map((buildings) =>\r\n        mapBuildingsToBookingItems(\r\n          buildings,\r\n          buildingId => this.goToCreateOnFloor(buildingId)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get busyInfo$(): Observable<Record<string, any>> {\r\n    return combineLatest([\r\n      this.buildings$,\r\n      this.floors$,\r\n      this._dicts.getDictionary('workplaces'),\r\n      this.busyLiveData$\r\n    ]).pipe(\r\n      map(([ buildings, floors, workplaces, busyLiveData ]) =>\r\n        mapBusyLiveData(buildings, floors, workplaces, busyLiveData)\r\n      )\r\n    );\r\n  }\r\n\r\n  public goToCreateOnFloor(buildingId: number): void {\r\n    this.$floorMaps\r\n      .getFloorMaps$('workplaces', buildingId)\r\n      .subscribe(([ { id } ]) =>\r\n        this.$router.navigate([ /*buildingId,*/ id ], { relativeTo: this.$route })\r\n      );\r\n  }\r\n\r\n  private get buildings$(): Observable<IDictionaryBuildings> {\r\n    return this.$buildings.getBuildingsByPlaceType$('workplaces');\r\n  }\r\n\r\n  private get floors$(): Observable<IDictionaryFloorMaps> {\r\n    return this.$floorMaps.getFloorMaps$('workplaces');\r\n  }\r\n\r\n  private get busyLiveData$(): Observable<any> {\r\n    return this.$reservationsApi\r\n      .getLiveData('busyWorkplaces')\r\n      .pipe(pluck('data'));\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\nimport { IFilterCheckboxGroups, IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\nimport { mapCheckBoxOptions } from '@shared/common/utils/filter.util';\r\nimport { IDictionary, IDictionaryBuildings, IDictionaryFloorMaps, IDictionaryItem, IDictionaryRooms } from '@shared/dictionaries/dictionaries.model';\r\nimport { IStatuses } from '@shared/dictionaries/models/statuses.model';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { sortByFactory } from '@core/utils/sort.util';\r\n\r\nconst listFilterFields: Record<ReservationType, Record<string, any>> = {\r\n  appointment: {\r\n    requestAppointmentLabelIds: [],\r\n    requestAppointmentRoomIds: []\r\n  },\r\n  locker: {\r\n    floorMapIds: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  parking: {\r\n    floorMapIds: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  workplace: {\r\n    floorMapIds: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  }\r\n};\r\n\r\nexport const TIME_PICKER_OPTIONS: Record<string, any> = {\r\n  nzDefaultOpenValue: new Date(),\r\n  nzFormat: 'HH:mm',\r\n  nzMinuteStep: 5,\r\n  nzOpen: true\r\n};\r\n\r\nexport function getListFilterFieldsByType(type: ReservationType): Record<string, any> | null {\r\n  return listFilterFields[type] || null;\r\n}\r\n\r\nexport function mapBuildingsOptions(\r\n  buildings: IDictionaryBuildings,\r\n  buildingIdControl: FormControl\r\n): IFilterCheckBoxOptions {\r\n  return mapCheckBoxOptions(buildings, 'id', 'name', buildingIdControl);\r\n}\r\n\r\nexport function mapFloorMapsOptions(\r\n  floorMaps: IDictionaryFloorMaps,\r\n  buildings: IDictionaryBuildings,\r\n  floorMapIdsControl: FormControl\r\n): IFilterCheckboxGroups {\r\n  floorMaps.sort(sortByFactory<IDictionaryItem>('floorNumber'));\r\n\r\n  return buildings\r\n    .map(({ name: label, id: value }) => {\r\n      const options: IFilterCheckBoxOptions = mapCheckBoxOptions(\r\n        floorMaps.filter(({ buildingId }) => buildingId === value),\r\n        'id',\r\n        'name',\r\n        floorMapIdsControl\r\n      );\r\n      const checked: boolean = isCheckedGroup(options);\r\n      const indeterminate: boolean = isIndeterminateGroup(checked, options);\r\n      return { label, value, checked, indeterminate, options };\r\n    })\r\n    .filter(group => !!group.options.length);\r\n}\r\n\r\nexport function mapRoomsOptions(rooms: IDictionaryRooms, floorMapIds: number[], roomsIdControl: FormControl): IFilterCheckBoxOptions {\r\n  if (floorMapIds?.length > 0) {\r\n    rooms = rooms.filter(({ floorMapId }) => floorMapIds.includes(floorMapId));\r\n  }\r\n\r\n  return mapCheckBoxOptions(rooms, 'id', 'name', roomsIdControl);\r\n}\r\n\r\nexport function mapStatusesOptions(statuses: IStatuses, excludeStatuses: string[], statusesControl: FormControl): IFilterCheckBoxOptions {\r\n  if (excludeStatuses.length) {\r\n    statuses = statuses.filter(({ code }) => !excludeStatuses.includes(code));\r\n  }\r\n\r\n  return mapCheckBoxOptions(statuses, 'code', 'name', statusesControl);\r\n}\r\n\r\nexport function mapRoomGroups(\r\n  buildings: IDictionaryBuildings,\r\n  floorMaps: IDictionaryFloorMaps,\r\n  rooms: IDictionaryRooms,\r\n  roomsIdControl: FormControl\r\n): IFilterCheckboxGroups {\r\n  return buildings\r\n    .map(({ name: label, id: value }) => {\r\n      const _floorMaps: IDictionaryFloorMaps = floorMaps.filter(({ buildingId }) => buildingId === value);\r\n      const _rooms: IDictionaryBuildings = rooms.filter(({ floorMapId }) =>\r\n        _floorMaps.some(({ id }) => id === floorMapId)\r\n      );\r\n      const options: IFilterCheckBoxOptions = mapCheckBoxOptions(_rooms, 'id', 'name', roomsIdControl);\r\n      const checked: boolean = isCheckedGroup(options);\r\n      const indeterminate: boolean = isIndeterminateGroup(checked, options);\r\n\r\n      return { label, value, checked, indeterminate, options };\r\n    })\r\n    .filter(group => !!group.options.length);\r\n}\r\n\r\nexport function mapLabelsOptions(labels: IDictionary, labelsIdsControl: FormControl): IFilterCheckBoxOptions {\r\n  return mapCheckBoxOptions(labels, 'mail', 'name', labelsIdsControl);\r\n}\r\n\r\nfunction isCheckedGroup(options: IFilterCheckBoxOptions): boolean {\r\n  return options.every(({ checked }) => checked);\r\n}\r\n\r\nfunction isIndeterminateGroup(checkedGroup: boolean, options: IFilterCheckBoxOptions): boolean {\r\n  return !checkedGroup && options.some(({ checked }) => checked);\r\n}\r\n\r\n","import { AfterViewInit, ChangeDetectorRef, Component, HostListener, TemplateRef, ViewChild } from '@angular/core';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { IMarks } from '@base/map/map-mark/map-mark.model';\r\nimport { IOpenStreetMapMark, IOpenStreetMapOptions } from '@base/open-street-map/open-street-map.model';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { CreateService } from './create.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Debounce } from '@core/decorators/debounce.decorator';\r\nimport { OSM_OPTIONS } from '@presentation/team/team-create/components/create/create.utils';\r\n\r\nconst HEIGHT_EXCEPT_MAP: number = 233;\r\n\r\n@Component({\r\n  selector: 'app-team-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: [ './create.component.less' ],\r\n  providers: [ CreateService ]\r\n})\r\nexport class CreateComponent implements AfterViewInit {\r\n  activeMarkIndex = null;\r\n  buildingList: IBookingItems;\r\n  marks: IMarks;\r\n  osmOptions: IOpenStreetMapOptions = OSM_OPTIONS;\r\n  osmMarks: IOpenStreetMapMark[];\r\n\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n\r\n  @MarkForCheck\r\n  mapHeight: number = 0;\r\n\r\n  @ViewChild('bookListContentTpl')\r\n  bookListContentTpl: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private _service: CreateService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    this.sub = _service.buildingsList$.subscribe((buildingsList) => {\r\n      this.buildingList = buildingsList;\r\n      this.osmMarks = buildingsList\r\n        .filter((building) => building.coordinates)\r\n        .map(({ id, coordinates: { x, y } }) => ({ id, x, y }));\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  handleMarkClicked(id: number): void {\r\n    this.activeMarkIndex = this.buildingList.findIndex((i) => i.id === id);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setMapHeight();\r\n    this.sub = this._service.busyInfo$\r\n      .pipe(tap(console.log))\r\n      .subscribe((res) => {\r\n        this.buildingList = this.buildingList.map((build) => ({\r\n          ...build,\r\n          content: this.bookListContentTpl,\r\n          contentContext: res[build.id],\r\n        }));\r\n        this.cdr.markForCheck();\r\n      });\r\n  }\r\n\r\n  @HostListener('window:resize', [ '$event' ])\r\n  @Debounce(250)\r\n  private setMapHeight(): void {\r\n    const body = document.querySelector('body').offsetHeight;\r\n    this.mapHeight = body - HEIGHT_EXCEPT_MAP;\r\n  }\r\n}\r\n","<section class=\"workspace\">\r\n  <div class=\"workspace-wrapper\" [style.height.px]=\"mapHeight\">\r\n    <app-open-street-map *ngIf=\"buildingList?.length\"\r\n                         class=\"workspace__map\"\r\n                         [height]=\"mapHeight\"\r\n                         [style.height.px]=\"mapHeight\"\r\n                         [options]=\"osmOptions\"\r\n                         [marks]=\"osmMarks\"\r\n                         (markClicked)=\"handleMarkClicked($event)\">\r\n    </app-open-street-map>\r\n    <div appScroll class=\"workspace__actions\">\r\n      <app-book-list [items]=\"buildingList\"\r\n                     [activeIndex]=\"activeMarkIndex\">\r\n      </app-book-list>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<ng-template #bookListContentTpl let-workplaces=\"workplaces\" let-rooms=\"rooms\">\r\n  <div>\r\n    {{ 'Offices.Workplaces' | translate }}:\r\n    <span class=\"free\">{{ workplaces.free }}</span> |\r\n    <span class=\"busy\">{{ workplaces.busy }}</span> |\r\n    {{ workplaces.freePercents }}%\r\n  </div>\r\n</ng-template>\r\n","import { formatDate } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TAutoMode } from '@base/booking-list/booking-list.model';\r\nimport {\r\n  IFloor,\r\n  IFloorsInfo,\r\n  IWorkplace,\r\n} from '@presentation/reservations/reservation-create/models';\r\nimport {\r\n  checkReservedNeighbors,\r\n  filterFloors,\r\n} from '@presentation/reservations/utils/reservation';\r\nimport { IDictionary } from '@shared/dictionaries/dictionaries.model';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { IArea } from '@shared/http/models/database.model';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\n// @ts-ignore\r\nimport {\r\n  addWeeks,\r\n  areIntervalsOverlapping,\r\n  getDay,\r\n  getHours,\r\n  isAfter,\r\n  isSameDay,\r\n  setHours,\r\n} from 'date-fns';\r\n// @ts-ignore\r\nimport nextDay from 'date-fns/nextDay';\r\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map,\r\n  pluck,\r\n  shareReplay,\r\n  switchMap,\r\n  take,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ImageBlobService } from '@shared/images/services/image-blob.service';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\nimport { ReservationMarksService } from '@src/app/core/services/reservation-marks.service';\r\n\r\n@Injectable()\r\nexport class FloorService {\r\n  private readonly _workplaces$: Observable<IWorkplace[]>;\r\n  private readonly _floors$: Observable<IFloorsInfo>;\r\n  private readonly _filters$ = new BehaviorSubject<Record<string, any>>({});\r\n  private readonly _reload$ = new BehaviorSubject<null>(null);\r\n  private readonly _loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(\r\n    private $dicts: DictionariesService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _measurements: MeasurementsService,\r\n    private _img: ImageBlobService,\r\n    private _api: ReservationsApiService,\r\n    private $floorMaps: FloorMapsService,\r\n    private $buildings: BuildingsService,\r\n    private $reservationMarks: ReservationMarksService\r\n  ) {\r\n    this._workplaces$ = forkJoin({\r\n      places: this.$dicts.getDictionary('workplaces'),\r\n      tags: this.$dicts.getDictionary('tags'),\r\n      disabled: this._api.getWorkplacesDisabled$,\r\n    }).pipe(\r\n      map(({ places, tags, disabled }) => {\r\n        return places.map((place) => ({\r\n          ...place,\r\n          tags: place.tags.map(\r\n            (tagId) => tags.find((t) => t.id === tagId).name\r\n          ),\r\n          disabled: disabled.includes(place.id),\r\n        })) as IWorkplace[];\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this._floors$ = this._route.params.pipe(\r\n      // tap(() => this.changeLoader(true)),\r\n      switchMap((params) =>\r\n        combineLatest([\r\n          this.$floorMaps.getFloorMaps$('workplaces'),\r\n          this.$buildings.getBuildingsByPlaceType$('workplaces'),\r\n          of(+params?.floorId),\r\n        ])\r\n      ),\r\n      map(([floors, builds, floorId]) => {\r\n        const currentFloor = floors.find(\r\n          (floor) => floor.id === floorId\r\n        ) as IFloor;\r\n        const floorsList = filterFloors(floors, currentFloor.buildingId);\r\n        const currentBuild = builds.find(\r\n          (build) => build.id === currentFloor.buildingId\r\n        );\r\n\r\n        return { currentFloor, floorsList, currentBuild };\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  get areas$(): Observable<IArea[]> {\r\n    return this.currentFloor$.pipe(\r\n      switchMap((floor) =>\r\n        this.$dicts\r\n          .getDictionary<IArea[]>('areas')\r\n          .pipe(map((areas) => areas.filter((a) => a.floorMapId === floor.id)))\r\n      )\r\n    );\r\n  }\r\n\r\n  get floors$(): Observable<IFloorsInfo> {\r\n    return this._floors$;\r\n  }\r\n\r\n  get currentFloor$(): Observable<IFloor> {\r\n    return this._floors$.pipe(map(({ currentFloor }) => currentFloor));\r\n  }\r\n\r\n  get floorImage$(): Observable<any> {\r\n    return this._floors$.pipe(\r\n      switchMap(({ currentFloor }) =>\r\n        combineLatest([\r\n          this._img.getImageBlob(currentFloor.mapImageUrl),\r\n          this.areas$,\r\n        ]).pipe(\r\n          map(([image, areas]) => ({\r\n            image,\r\n            imageSize: {\r\n              width: currentFloor.mapWidth,\r\n              height: currentFloor.mapHeight,\r\n            },\r\n            areas,\r\n          }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get loading$(): Observable<boolean> {\r\n    return this._loading$;\r\n  }\r\n\r\n  get currentWorkplaces$(): Observable<IWorkplace[]> {\r\n    return combineLatest([\r\n      this._workplaces$,\r\n      this.currentFloor$,\r\n      this.reservations$,\r\n    ]).pipe(\r\n      map(([workplaces, floor, reservations]) => {\r\n        let places = workplaces.filter(\r\n          (place) => place.floorMapId === floor.id\r\n        );\r\n        places = places.map((place) => {\r\n          if (floor.workplaceReservationSocialDistanceCheck === 'FORBIDDEN') {\r\n            return {\r\n              ...place,\r\n              disabled: !place.disabled\r\n                ? checkReservedNeighbors(place, reservations)\r\n                : place.disabled,\r\n            };\r\n          } else {\r\n            return place;\r\n          }\r\n        });\r\n        return places;\r\n      })\r\n    );\r\n  }\r\n\r\n  get notReservWorkplaces$(): Observable<IWorkplace[]> {\r\n    return combineLatest([\r\n      this.floorItems$,\r\n      this.tagsFilter$,\r\n      this.repeatRange$,\r\n      this.typesFilter$,\r\n    ]).pipe(\r\n      map(([{ places, reservs }, tags, repeat, types]) => {\r\n        return this._checkFilters(places, reservs, tags, repeat, types).filter(\r\n          (p) => !p.disabled\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  get floorItems$(): Observable<any> {\r\n    return this.currentWorkplaces$.pipe(\r\n      switchMap((places) =>\r\n        this.reservations$.pipe(map((reservs) => ({ places, reservs })))\r\n      )\r\n    );\r\n  }\r\n\r\n  get reservations$(): Observable<Record<string, any>[]> {\r\n    return combineLatest([\r\n      this.currentFloor$,\r\n      this.datesFilter$,\r\n      this._reload$,\r\n    ]).pipe(\r\n      tap(() => this.changeLoader(true)),\r\n      switchMap(([{ id }, { dateTimeFrom, dateTimeTo }]) =>\r\n        this._api.getWorkplaceReservations({\r\n          floorMapId: id,\r\n          dateTimeFrom: this._getApiDate(dateTimeFrom),\r\n          dateTimeTo: this._getApiDate(dateTimeTo),\r\n        })\r\n      )\r\n    );\r\n  }\r\n\r\n  get mapMarks$(): Observable<any> {\r\n    return combineLatest([\r\n      this.floorItems$,\r\n      this.tagsFilter$,\r\n      this.repeatRange$,\r\n      this.typesFilter$,\r\n      this.$reservationMarks.mapMarks$,\r\n    ]).pipe(\r\n      tap(() => this.changeLoader(true)),\r\n      switchMap(\r\n        ([{ places, reservs }, tags, repeat, types, reservationMarks]) => {\r\n          places = this._checkFilters(places, reservs, tags, repeat, types);\r\n\r\n          const images = places\r\n            .map((place) => [place.id, this._img.getImageBlob(place.img)])\r\n            .reduce(\r\n              (acc, [id, _img]) => ({ ...acc, [id as number]: _img }),\r\n              {}\r\n            );\r\n          return forkJoin(images).pipe(\r\n            map((imgs) => ({ places, images: imgs, reservationMarks }))\r\n          );\r\n        }\r\n      ),\r\n      map(({ places, images, reservationMarks }) => {\r\n        const localMarks = places.map((place) => {\r\n          return {\r\n            id: place.id,\r\n            img: images[place.id],\r\n            disabled: place.disabled,\r\n            relativePlace: place,\r\n            tooltip: place.name,\r\n            coordinates: {\r\n              x: place.x,\r\n              y: place.y,\r\n              size: place.width,\r\n            },\r\n          };\r\n        });\r\n        return [\r\n          ...localMarks,\r\n          ...reservationMarks.filter(\r\n            (reservationMark) => reservationMark.logicType !== 'Workplace'\r\n          ),\r\n        ];\r\n      }),\r\n      tap(() => this.changeLoader(false))\r\n    );\r\n  }\r\n\r\n  get filterDates$(): Observable<Record<string, string>> {\r\n    return this._filters$.pipe(\r\n      switchMap((filters) =>\r\n        this._measurements.getMeasurementByName$('shortDateTime').pipe(\r\n          map((dateFormat) => ({\r\n            dateTimeFrom: formatDate(filters.dateTimeFrom, dateFormat, 'ru'),\r\n            dateTimeTo: formatDate(filters.dateTimeTo, dateFormat, 'ru'),\r\n          }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get datesFilter$(): Observable<Record<string, Date>> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged(\r\n        (p, q) =>\r\n          p.dateTimeFrom === q.dateTimeFrom && p.dateTimeTo === q.dateTimeTo\r\n      ),\r\n      map(({ dateTimeFrom, dateTimeTo }) => ({ dateTimeFrom, dateTimeTo })),\r\n      debounceTime(1000)\r\n    );\r\n  }\r\n\r\n  get tagsFilter$(): Observable<string[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged((p, q) => p.tags?.length === q.tags?.length),\r\n      map(({ tags }) => tags)\r\n    );\r\n  }\r\n\r\n  get repeatFilter$(): Observable<Record<string, any>> {\r\n    return this._filters$.pipe(\r\n      switchMap((filters) =>\r\n        this._measurements.getMeasurementByName$('shortDate').pipe(\r\n          map((dateFormat) => {\r\n            if (filters.repeat) {\r\n              return {\r\n                ...filters.repeat,\r\n                end: formatDate(filters.repeat.end, dateFormat, 'ru'),\r\n              };\r\n            } else {\r\n              return filters.repeat;\r\n            }\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get labelsFilter$(): Observable<Record<string, any>[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged((p, q) => p.labels?.length === q.labels?.length),\r\n      switchMap((filters) =>\r\n        this.$dicts\r\n          .getDictionary('labels')\r\n          .pipe(map((labels) => ({ labels, labelIds: filters.labels })))\r\n      ),\r\n      map(({ labels, labelIds }) =>\r\n        labels.filter(({ id }) => labelIds.includes(id))\r\n      )\r\n    );\r\n  }\r\n\r\n  get groupFilter$(): Observable<number> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged((p, q) => p.group === q.group),\r\n      map(({ group }) => group)\r\n    );\r\n  }\r\n\r\n  get groupDisabledPlaces$(): Observable<Record<string, number[] | number>> {\r\n    return this.groupFilter$.pipe(\r\n      switchMap((group) =>\r\n        this._api.getWorkplacesDisabledExpanded({ labelGroupId: group })\r\n      ),\r\n      pluck('data')\r\n    );\r\n  }\r\n\r\n  get typesFilter$(): Observable<string[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged((p, q) => p.types?.length === q.types?.length),\r\n      map(({ types }) => types)\r\n    );\r\n  }\r\n\r\n  get autoModeFilter$(): Observable<TAutoMode> {\r\n    return this._filters$.pipe(\r\n      pluck('autoMode'),\r\n      distinctUntilChanged(),\r\n      map((autoMode: boolean) => (autoMode ? 'throughOne' : 'oneByOne'))\r\n    );\r\n  }\r\n\r\n  get repeatRange$(): Observable<any[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged(\r\n        (p, q) =>\r\n          p.repeat?.end === q.repeat?.end &&\r\n          p.repeat?.days.length === q.repeat?.days.length &&\r\n          p.repeat?.weekNum === q.repeat?.weekNum\r\n      ),\r\n      switchMap(({ repeat, dateTimeFrom, dateTimeTo }) => {\r\n        if (repeat) {\r\n          return this.currentFloor$.pipe(\r\n            switchMap(({ id }) => {\r\n              return this._api\r\n                .getWorkplaceReservations({\r\n                  floorMapId: id,\r\n                  dateTimeFrom,\r\n                  dateTimeTo: repeat.end,\r\n                })\r\n                .pipe(\r\n                  map((reservations) => [\r\n                    repeat,\r\n                    { dateTimeFrom, dateTimeTo },\r\n                    reservations,\r\n                  ])\r\n                );\r\n            })\r\n          );\r\n        } else {\r\n          return of(repeat);\r\n        }\r\n      }),\r\n      map((repeat) => {\r\n        if (repeat) {\r\n          const [r, dates, _reservations] = repeat;\r\n          return [\r\n            this._createRepeatsDates(dates, r.weekNum, r.days, r.end),\r\n            _reservations,\r\n          ];\r\n        } else {\r\n          return repeat;\r\n        }\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  changeLoader(state: boolean): void {\r\n    this._loading$.next(state);\r\n  }\r\n\r\n  changeFloor(id: number): void {\r\n    this._router.navigate(['../', id], { relativeTo: this._route });\r\n  }\r\n\r\n  backToSelectBuildings(): void {\r\n    this._router.navigate(['../'], { relativeTo: this._route });\r\n  }\r\n\r\n  setFilters(filters: Record<string, any>): void {\r\n    this._filters$.next(filters);\r\n  }\r\n\r\n  reloadReservations(): void {\r\n    this._reload$.next(null);\r\n  }\r\n\r\n  reservationPlace(selected: Record<number, IWorkplace>): Promise<any> {\r\n    return this._filters$\r\n      .pipe(\r\n        switchMap((filters) =>\r\n          this.repeatRange$.pipe(map((repeat) => [filters, repeat]))\r\n        ),\r\n        switchMap(([filters, repeat]) => {\r\n          const reservations = Object.entries(selected).reduce(\r\n            (acc, [userId, place]) => {\r\n              const arr = [\r\n                this._setWorkplacesReservation(\r\n                  place.id,\r\n                  [filters.dateTimeFrom, filters.dateTimeTo],\r\n                  `${userId}-${0}`,\r\n                  userId\r\n                ),\r\n              ];\r\n              if (repeat && repeat[0] && repeat[0].length) {\r\n                repeat[0].forEach((_dates, index) => {\r\n                  arr.push(\r\n                    this._setWorkplacesReservation(\r\n                      place.id,\r\n                      [_dates[0], _dates[1]],\r\n                      `${userId}-${index + 1}`,\r\n                      userId\r\n                    )\r\n                  );\r\n                });\r\n              }\r\n              return [...acc, ...arr];\r\n            },\r\n            []\r\n          );\r\n\r\n          return this._api\r\n            .putWorkplaceReservations({\r\n              reservations,\r\n            })\r\n            .pipe(\r\n              map(({ data }) => {\r\n                let dates = [[filters.dateTimeFrom, filters.dateTimeTo]];\r\n                if (repeat && repeat[0]) {\r\n                  dates = [...dates, ...repeat[0]];\r\n                }\r\n\r\n                return {\r\n                  data,\r\n                  dates,\r\n                  filters,\r\n                };\r\n              })\r\n            );\r\n        }),\r\n        take(1)\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  private _getApiDate(date: Date): string {\r\n    return formatDate(\r\n      date,\r\n      this._measurements.getMeasurementByName('filterDate'),\r\n      'ru'\r\n    );\r\n  }\r\n\r\n  private _checkFilters(\r\n    places,\r\n    reservations,\r\n    tags,\r\n    repeat,\r\n    types\r\n  ): IWorkplace[] {\r\n    let filteredPlaces = [...places];\r\n    filteredPlaces = filteredPlaces.map((place) => {\r\n      const newPlace = { ...place };\r\n      const reservation = reservations.find((r) => r.workplaceId === place.id);\r\n      newPlace.img = newPlace.imageFreeUrl;\r\n\r\n      if (newPlace.disabled) {\r\n        newPlace.img = newPlace.imageDisabledUrl || newPlace.img;\r\n      }\r\n\r\n      if (reservation) {\r\n        newPlace.disabled = true;\r\n        newPlace.img = newPlace.imageReservedByUserUrl;\r\n      }\r\n\r\n      if (repeat) {\r\n        const [repeatDates, repeatReservations] = repeat;\r\n        const _reservations = repeatReservations.filter(\r\n          (r) => r.workplaceId === place.id\r\n        );\r\n        let overlap: any = false;\r\n        for (const rv of _reservations) {\r\n          for (const _date of repeatDates) {\r\n            overlap = areIntervalsOverlapping(\r\n              { start: _date[0], end: _date[1] },\r\n              { start: new Date(rv.dateTimeFrom), end: new Date(rv.dateTimeTo) }\r\n            )\r\n              ? rv\r\n              : false;\r\n            if (overlap) break;\r\n          }\r\n          if (overlap) break;\r\n        }\r\n        if (overlap) {\r\n          newPlace.disabled = true;\r\n          newPlace.img = newPlace.imageReservedByUserUrl;\r\n        }\r\n      }\r\n\r\n      if (tags && tags.length) {\r\n        if (!tags.every((tag) => place.tags.includes(tag))) {\r\n          newPlace.disabled = true;\r\n          newPlace.img = newPlace.imageDisabledUrl || newPlace.img;\r\n        }\r\n      }\r\n\r\n      if (types && Array.isArray(types)) {\r\n        if (!types.includes(newPlace.type)) {\r\n          newPlace.disabled = true;\r\n          newPlace.img = newPlace.imageDisabledUrl || newPlace.img;\r\n        }\r\n      }\r\n\r\n      return newPlace;\r\n    });\r\n\r\n    return filteredPlaces;\r\n  }\r\n\r\n  private _createRepeatsDates(\r\n    { dateTimeFrom, dateTimeTo },\r\n    weekNum,\r\n    days,\r\n    end\r\n  ): Date[][] {\r\n    const result = [];\r\n    let lastDay = dateTimeFrom;\r\n\r\n    if (!days.length) return result;\r\n\r\n    const weekDayHandler = (day) => {\r\n      lastDay = nextDay(lastDay, day);\r\n      if (isAfter(end, lastDay) || isSameDay(end, lastDay)) {\r\n        result.push([\r\n          setHours(lastDay, getHours(dateTimeFrom)),\r\n          setHours(lastDay, getHours(dateTimeTo)),\r\n        ]);\r\n      }\r\n    };\r\n\r\n    const sameWeek = days.filter((day) => (day || 7) > getDay(dateTimeFrom));\r\n    sameWeek.forEach(weekDayHandler);\r\n\r\n    while (isAfter(end, lastDay) || isSameDay(end, lastDay)) {\r\n      lastDay = addWeeks(lastDay, weekNum - 1);\r\n      days.forEach(weekDayHandler);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _setWorkplacesReservation(\r\n    id,\r\n    dates,\r\n    recordCode,\r\n    labelId\r\n  ): Record<string, any> {\r\n    return {\r\n      recordCode: `${recordCode}`,\r\n      workplaceId: id,\r\n      labelId,\r\n      dateTimeFrom: this._getApiDate(dates[0]),\r\n      dateTimeTo: this._getApiDate(dates[1]),\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BookingListModule } from '@base/booking-list/booking-list.module';\r\nimport { DropdownSelectModule } from '@base/dropdown-select/dropdown-select.module';\r\nimport { FiltersModule } from '@base/filters/filters.module';\r\nimport { MapModule } from '@base/map/map.module';\r\nimport { OpenStreetMapModule } from '@base/open-street-map/open-street-map.module';\r\nimport { WorkplaceCardModule } from '@composite/workplace-card/workplace-card.module';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\nimport { CreateComponent } from '@presentation/team/team-create/components/create/create.component';\r\nimport { CreateFilterWorkplaceComponent } from './components/team-filters/create-filters-workplace/create-filter-workplace.component';\r\nimport { FloorComponent } from '@presentation/team/team-create/components/floor/floor.component';\r\nimport { CreateFilterComponent } from '@presentation/team/team-create/components/team-filters/create-filter.component';\r\nimport { TeamCreateRoutingModule } from '@presentation/team/team-create/team-create-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FloorComponent,\r\n    CreateFilterComponent,\r\n    CreateFilterWorkplaceComponent,\r\n    CreateComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BookingListModule,\r\n    CoreModule,\r\n    MapModule,\r\n    DropdownSelectModule,\r\n    WorkplaceCardModule,\r\n    TeamCreateRoutingModule,\r\n    FiltersModule,\r\n    ReactiveFormsModule,\r\n    OpenStreetMapModule,\r\n  ],\r\n  providers: [DatePipe, TranslatePipe],\r\n})\r\nexport class TeamCreateModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateComponent } from '@presentation/team/team-create/components/create/create.component';\r\nimport { FloorComponent } from '@presentation/team/team-create/components/floor/floor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreateComponent,\r\n    data: {\r\n      title: 'Создание новой брони'\r\n    }\r\n  },\r\n  {\r\n    path: ':floorId',\r\n    component: FloorComponent,\r\n    data: {\r\n      title: 'Создание новой брони'\r\n    },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class TeamCreateRoutingModule {\r\n}\r\n","import { ChangeDetectionStrategy, Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IFilterValues } from '@base/filters/filters.model';\r\nimport { FilterComponent } from '@base/filters/filters/filter.component';\r\nimport { CreateFilterService } from './create-filter.service';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\n\r\n@Component({\r\n  selector: 'app-create-filters, [app-create-filters]',\r\n  templateUrl: './create-filter.component.html',\r\n  styleUrls: [ './create-filter.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'app-reservations-create-filter',\r\n  },\r\n  providers: [ CreateFilterService ]\r\n})\r\nexport class CreateFilterComponent extends FilterComponent implements OnInit {\r\n  public type: ReservationType;\r\n  public formGroup: FormGroup = this.$service.formGroup;\r\n\r\n  @Input('type')\r\n  public set inputType(type: ReservationType) {\r\n    if (!type) return;\r\n\r\n    this.$service.createFormGroup(type);\r\n    this.type = type;\r\n  }\r\n\r\n  @Input('values')\r\n  public set inputValues(values: IFilterValues) {\r\n    if (!values) return;\r\n    this.formGroup.patchValue(values, { emitEvent: false });\r\n  }\r\n\r\n  constructor(\r\n    private $service: CreateFilterService,\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.$service.clear(this.formGroup);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","<div nz-row\r\n     [nzGutter]=\"12\"\r\n     class=\"app-list-filters__header\"\r\n>\r\n  <div nz-col [nzXs]=\"8\"\r\n       [nzLg]=\"0\"\r\n       class=\"app-list-filters__header-action\"\r\n  >\r\n    <button nz-button\r\n            [nzType]=\"'link'\"\r\n    >\r\n      {{'Close' | translate}}\r\n    </button>\r\n  </div >\r\n\r\n  <h3 nz-col\r\n      [nzXs]=\"8\"\r\n      [nzLg]=\"12\"\r\n      class=\"app-list-filters__header-title\"\r\n  >\r\n    {{'Filters' | translate}}\r\n  </h3>\r\n\r\n  <div nz-col\r\n       [nzXs]=\"8\"\r\n       [nzLg]=\"12\"\r\n       class=\"app-list-filters__header-action _right\"\r\n  >\r\n    <button nz-button\r\n            [nzType]=\"'link'\"\r\n            (click)=\"clear()\"\r\n    >\r\n      {{'Clear' | translate}}\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<form nz-form\r\n      [nzLayout]=\"'vertical'\"\r\n      [formGroup]=\"formGroup\"\r\n      [ngSwitch]=\"type\"\r\n      class=\"app-list-filters__form\"\r\n>\r\n  <perfect-scrollbar [config]=\"{suppressScrollX: true}\"\r\n                     class=\"app-list-filters__form-scroll\"\r\n  >\r\n    <div *ngSwitchDefault\r\n         app-create-filters-workplace\r\n         [formGroup]=\"formGroup\"\r\n    >\r\n    </div>\r\n  </perfect-scrollbar>\r\n</form>\r\n\r\n"],"sourceRoot":"webpack:///"}