{"version":3,"sources":["./node_modules/ng-sortgrid/__ivy_ngcc__/fesm2015/ng-sortgrid.js","./src/app/presentation/offices/offices-routing.module.ts","./src/app/presentation/offices/offices.guard.ts","./src/app/base/office-card/office-card.component.ts","./src/app/base/office-card/office-card.component.html","./src/app/base/office-card/office-card.utils.ts","./src/app/presentation/offices/offices.service.ts","./src/app/base/office-card/office-card.module.ts","./src/app/presentation/offices/offices.component.ts","./src/app/presentation/offices/offices.component.html","./src/app/presentation/offices/offices.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6J;AACrG;AAC2C;AACxD;;AAE3C;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,yBAAyB;AACzB,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8CAA8C;AAC9C,mBAAmB,EAAE;AACrB;AACA;AACA,kCAAkC,qEAAqE;AACvG;AACA;AACA;AACA,kCAAkC,mEAAmE;AACrG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,sDAAe,CAAC,wDAAQ,GAAG;AACtI;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,+CAA+C,wEAAkB,EAAE,kDAAkD,gCAAgC,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,kDAAkD;AAC7N,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,4CAA4C,wEAAkB,EAAE,+CAA+C,+BAA+B,EAAE,+CAA+C;AAC/L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6CAA6C;AAC7C,+BAA+B,gDAAgD;AAC/E;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,4CAA4C,wEAAkB,EAAE,+CAA+C,+BAA+B,EAAE,+CAA+C;AAC/L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C,mBAAmB,EAAE;AACrB;AACA;AACA,kBAAkB,qEAAc;AAChC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,sDAAS,yBAAyB,6DAAM;AAC5E,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+GAA+G,4DAAK;AACpH,mBAAmB,EAAE;AACrB,sBAAsB,sDAAS,uBAAuB,4DAAK;AAC3D,eAAe,kDAAK;AACpB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sEAAsE,wCAAwC,sDAAe,oBAAoB,sDAAe,oBAAoB;AACpL;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK;AACL;AACA,gDAAgD,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,oBAAoB,8DAAQ,oBAAoB,EAAE,mDAAmD;AACrQ,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,yBAAyB,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;AAClG,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA,gEAAgE,uCAAuC;AACvG,6CAA6C,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AACnM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,sDAAe,oBAAoB;AAC3I;AACA;AACA,KAAK;AACL;AACA,8CAA8C,wEAAkB,EAAE,iDAAiD,+BAA+B,8DAAQ,oBAAoB,EAAE,iDAAiD;AACjO,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,yBAAyB,EAAE,EAAE,QAAQ,EAAE;AACtE,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8DAA8D,EAAE;AAChE,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAK;AACb,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,sDAAe,oBAAoB,sDAAe,oBAAoB;AACrK;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK;AACL;AACA,2CAA2C,wEAAkB,EAAE,8CAA8C,4BAA4B,8DAAQ,oBAAoB,8DAAQ,oBAAoB,EAAE,8CAA8C;AACjP,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,yBAAyB,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;AAClG,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,4CAA4C,gEAAS;AACrD,oBAAoB;AACpB;AACA;AACA,QAAQ,sDAAS,qCAAqC,mEAAY,MAAM,gEAAS,iBAAiB,gEAAS;AAC3G,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,mBAAmB,+DAAwB,wBAAwB,+DAAwB,sBAAsB,+DAAwB,oBAAoB,+DAAwB,qBAAqB,+DAAwB,uBAAuB;AACna,yBAAyB,+DAAwB,EAAE,mIAAmI;AACtL,QAAQ,wDAAiB,+EAA+E,8BAA8B,EAAE,0EAA0E,wBAAwB,EAAE,8EAA8E,6BAA6B,EAAE,sEAAsE,mBAAmB,EAAE,kEAAkE,sBAAsB,EAAE;AAC9gB,KAAK,EAAE,WAAW,yMAAyM,YAAY,mBAAmB,aAAa,kEAA2B,GAAG;AACrS;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,wBAAwB;AAC7B,KAAK,6BAA6B;AAClC,KAAK,2BAA2B;AAC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","file":"offices-offices-module.js","sourcesContent":["import { Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, fromEvent, merge, timer } from 'rxjs';\nimport { withLatestFrom, filter, mapTo, takeUntil, throttleTime, takeWhile } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/helpers/element/ngsg-elements.helper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass NgsgElementsHelper {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    static findIndex(element) {\n        /** @type {?} */\n        const allElements = element.parentNode.children;\n        return Array.prototype.indexOf.call(allElements, element);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/helpers/scroll/scroll-helper.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ScrollPoints() { }\nif (false) {\n    /** @type {?|undefined} */\n    ScrollPoints.prototype.top;\n    /** @type {?|undefined} */\n    ScrollPoints.prototype.bottom;\n}\nclass ScrollHelperService {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        this.document = document;\n        this.DEFAULT_SCROLLSPEED = 50;\n        this.SCROLL_BUFFER = 50;\n        this.window = document.defaultView;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} scrollPoints\n     * @param {?=} scrollSpeed\n     * @return {?}\n     */\n    scrollIfNecessary(event, scrollPoints = {}, scrollSpeed) {\n        /** @type {?} */\n        const currentPosition = event.pageY - this.window.scrollY;\n        if (this.isTopScrollNeeded(currentPosition, scrollPoints.top)) {\n            this.window.scrollBy({ top: -scrollSpeed || -this.DEFAULT_SCROLLSPEED, behavior: 'smooth' });\n            return;\n        }\n        if (this.isBottomScrollNeeded(currentPosition, scrollPoints.bottom)) {\n            this.window.scrollBy({ top: scrollSpeed || this.DEFAULT_SCROLLSPEED, behavior: 'smooth' });\n        }\n    }\n    /**\n     * @private\n     * @param {?} currentPosition\n     * @param {?} scrollPointTop\n     * @return {?}\n     */\n    isTopScrollNeeded(currentPosition, scrollPointTop) {\n        return scrollPointTop ? currentPosition < scrollPointTop :\n            currentPosition < this.SCROLL_BUFFER;\n    }\n    /**\n     * @private\n     * @param {?} currentPosition\n     * @param {?} scrollPointBottom\n     * @return {?}\n     */\n    isBottomScrollNeeded(currentPosition, scrollPointBottom) {\n        return scrollPointBottom ? currentPosition > scrollPointBottom :\n            currentPosition > this.window.innerHeight - this.SCROLL_BUFFER;\n    }\n}\nScrollHelperService.ɵfac = function ScrollHelperService_Factory(t) { return new (t || ScrollHelperService)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollHelperService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollHelperService.ɵprov = ɵɵdefineInjectable({ factory: function ScrollHelperService_Factory() { return new ScrollHelperService(ɵɵinject(DOCUMENT)); }, token: ScrollHelperService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollHelperService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollHelperService.prototype.window;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollHelperService.prototype.DEFAULT_SCROLLSPEED;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollHelperService.prototype.SCROLL_BUFFER;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollHelperService.prototype.document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/helpers/class/ngsg-class.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgsgClassService {\n    constructor() {\n        this.SELECTED_DEFAULT_CLASS = 'ng-sg-selected';\n        this.PLACEHOLDER_DEFAULT_CLASS = 'ng-sg-placeholder';\n        this.DROPPED_DEFAULT_CLASS = 'ng-sg-dropped';\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    addPlaceHolderClass(element) {\n        element.classList.add(this.PLACEHOLDER_DEFAULT_CLASS);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    removePlaceHolderClass(element) {\n        element.classList.remove(this.PLACEHOLDER_DEFAULT_CLASS);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    addDroppedClass(element) {\n        element.classList.add(this.DROPPED_DEFAULT_CLASS);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    removeDroppedClass(element) {\n        element.classList.remove(this.DROPPED_DEFAULT_CLASS);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    addSelectedClass(element) {\n        element.classList.add(this.SELECTED_DEFAULT_CLASS);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    removeSelectedClass(element) {\n        element.classList.remove(this.SELECTED_DEFAULT_CLASS);\n    }\n}\nNgsgClassService.ɵfac = function NgsgClassService_Factory(t) { return new (t || NgsgClassService)(); };\n/** @nocollapse */ NgsgClassService.ɵprov = ɵɵdefineInjectable({ factory: function NgsgClassService_Factory() { return new NgsgClassService(); }, token: NgsgClassService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgClassService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgClassService.prototype.SELECTED_DEFAULT_CLASS;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgClassService.prototype.PLACEHOLDER_DEFAULT_CLASS;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgClassService.prototype.DROPPED_DEFAULT_CLASS;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/store/ngsg-store.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction NgsgState() { }\nif (false) {\n    /** @type {?} */\n    NgsgState.prototype.items;\n    /** @type {?} */\n    NgsgState.prototype.classes;\n    /** @type {?} */\n    NgsgState.prototype.selectedItems;\n}\nclass NgsgStoreService {\n    constructor() {\n        this.state = new Map();\n    }\n    /**\n     * @param {?} group\n     * @param {?=} items\n     * @param {?=} classes\n     * @return {?}\n     */\n    initState(group, items = [], classes = {}) {\n        this.state.set(group, { items: [...items], classes, selectedItems: [] });\n    }\n    /**\n     * @param {?} group\n     * @param {?} dragElement\n     * @return {?}\n     */\n    addSelectedItem(group, dragElement) {\n        this.state.get(group).selectedItems.push(dragElement);\n    }\n    /**\n     * @param {?} group\n     * @param {?} item\n     * @return {?}\n     */\n    removeSelectedItem(group, item) {\n        /** @type {?} */\n        const updatedItems = this.state.get(group).selectedItems\n            .filter((/**\n         * @param {?} dragElement\n         * @return {?}\n         */\n        (dragElement) => dragElement.node !== item));\n        this.setSelectedItems(group, updatedItems);\n    }\n    /**\n     * @param {?} group\n     * @param {?} items\n     * @return {?}\n     */\n    setItems(group, items) {\n        this.state.get(group).items = [...items];\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    getItems(group) {\n        return this.state.get(group).items;\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    hasItems(group) {\n        return this.getItems(group).length > 0;\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    hasGroup(group) {\n        return this.state.has(group);\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    getSelectedItems(group) {\n        return this.state.get(group).selectedItems;\n    }\n    /**\n     * @param {?} group\n     * @param {?} selectedItems\n     * @return {?}\n     */\n    setSelectedItems(group, selectedItems) {\n        this.state.get(group).selectedItems = [...selectedItems];\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    getFirstSelectItem(group) {\n        return this.state.get(group).selectedItems[0];\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    hasSelectedItems(group) {\n        return this.getSelectedItems(group).length > 0;\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    resetSelectedItems(group) {\n        this.setSelectedItems(group, []);\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    getClasses(group) {\n        return this.state.get(group).classes;\n    }\n}\nNgsgStoreService.ɵfac = function NgsgStoreService_Factory(t) { return new (t || NgsgStoreService)(); };\n/** @nocollapse */ NgsgStoreService.ɵprov = ɵɵdefineInjectable({ factory: function NgsgStoreService_Factory() { return new NgsgStoreService(); }, token: NgsgStoreService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgStoreService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgStoreService.prototype.state;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/mutliselect/ngsg-selection.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst ChangeAction = {\n    ADD: 0,\n    REMOVE: 1,\n};\nChangeAction[ChangeAction.ADD] = 'ADD';\nChangeAction[ChangeAction.REMOVE] = 'REMOVE';\n/**\n * @record\n */\nfunction SelectionChange() { }\nif (false) {\n    /** @type {?} */\n    SelectionChange.prototype.key;\n    /** @type {?} */\n    SelectionChange.prototype.item;\n    /** @type {?} */\n    SelectionChange.prototype.action;\n}\nclass NgsgSelectionService {\n    /**\n     * @param {?} classService\n     * @param {?} ngsgStore\n     */\n    constructor(classService, ngsgStore) {\n        this.classService = classService;\n        this.ngsgStore = ngsgStore;\n        this.COMMAND_KEY = 'Meta';\n        this.CONTROL_KEY = 'Control';\n        this.selectionChange$ = new Subject();\n        /** @type {?} */\n        const selectionKeyPressed$ = this.selectionKeyPressed();\n        this.selectionChange$\n            .pipe(withLatestFrom(selectionKeyPressed$))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([selectionChange, selectionKeyPressed]) => {\n            selectionKeyPressed\n                ? this.handleSelectionChange(selectionChange)\n                : this.resetSelectedItems(selectionChange.key);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} group\n     * @return {?}\n     */\n    resetSelectedItems(group) {\n        this.ngsgStore.getSelectedItems(group).forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => this.classService.removeSelectedClass(item.node)));\n        this.ngsgStore.resetSelectedItems(group);\n    }\n    /**\n     * @private\n     * @param {?} selectionChange\n     * @return {?}\n     */\n    handleSelectionChange(selectionChange) {\n        if (selectionChange.action === ChangeAction.ADD) {\n            this.classService.addSelectedClass(selectionChange.item);\n            this.ngsgStore.addSelectedItem(selectionChange.key, {\n                node: selectionChange.item,\n                originalIndex: NgsgElementsHelper.findIndex(selectionChange.item)\n            });\n        }\n        if (selectionChange.action === ChangeAction.REMOVE) {\n            this.classService.removeSelectedClass(selectionChange.item);\n            this.ngsgStore.removeSelectedItem(selectionChange.key, selectionChange.item);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    selectionKeyPressed() {\n        /** @type {?} */\n        const selectionKeyPressed = fromEvent(window, 'keydown').pipe(filter((/**\n         * @param {?} keyboardEvent\n         * @return {?}\n         */\n        (keyboardEvent) => keyboardEvent.key === this.COMMAND_KEY || keyboardEvent.key === this.CONTROL_KEY)), mapTo(true));\n        /** @type {?} */\n        const keyup = fromEvent(window, 'keyup').pipe(mapTo(false));\n        return merge(selectionKeyPressed, keyup);\n    }\n    /**\n     * @param {?} group\n     * @param {?} dragedElement\n     * @return {?}\n     */\n    selectElementIfNoSelection(group, dragedElement) {\n        if (this.ngsgStore.hasSelectedItems(group)) {\n            return;\n        }\n        this.ngsgStore.addSelectedItem(group, {\n            node: dragedElement,\n            originalIndex: NgsgElementsHelper.findIndex(dragedElement)\n        });\n    }\n    /**\n     * @param {?} key\n     * @param {?} item\n     * @param {?} selected\n     * @return {?}\n     */\n    updateSelectedDragItem(key, item, selected) {\n        this.selectionChange$.next({\n            key,\n            item,\n            action: selected ? ChangeAction.ADD : ChangeAction.REMOVE\n        });\n    }\n}\nNgsgSelectionService.ɵfac = function NgsgSelectionService_Factory(t) { return new (t || NgsgSelectionService)(ɵngcc0.ɵɵinject(NgsgClassService), ɵngcc0.ɵɵinject(NgsgStoreService)); };\n/** @nocollapse */\nNgsgSelectionService.ctorParameters = () => [\n    { type: NgsgClassService },\n    { type: NgsgStoreService }\n];\n/** @nocollapse */ NgsgSelectionService.ɵprov = ɵɵdefineInjectable({ factory: function NgsgSelectionService_Factory() { return new NgsgSelectionService(ɵɵinject(NgsgClassService), ɵɵinject(NgsgStoreService)); }, token: NgsgSelectionService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgSelectionService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: NgsgClassService }, { type: NgsgStoreService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSelectionService.prototype.COMMAND_KEY;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSelectionService.prototype.CONTROL_KEY;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSelectionService.prototype.selectionChange$;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSelectionService.prototype.classService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSelectionService.prototype.ngsgStore;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/shared/ngsg-events.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgsgEventsService {\n    constructor() {\n        this.dropped$ = new Subject();\n    }\n}\nNgsgEventsService.ɵfac = function NgsgEventsService_Factory(t) { return new (t || NgsgEventsService)(); };\n/** @nocollapse */ NgsgEventsService.ɵprov = ɵɵdefineInjectable({ factory: function NgsgEventsService_Factory() { return new NgsgEventsService(); }, token: NgsgEventsService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgEventsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    NgsgEventsService.prototype.dropped$;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sort/reflection/ngsg-reflect.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgsgReflectService {\n    /**\n     * @param {?} ngsgStore\n     */\n    constructor(ngsgStore) {\n        this.ngsgStore = ngsgStore;\n    }\n    /**\n     * @param {?} key\n     * @param {?} element\n     * @return {?}\n     */\n    reflectChanges(key, element) {\n        /** @type {?} */\n        const items = this.ngsgStore.getItems(key);\n        /** @type {?} */\n        const selectedElements = this.ngsgStore.getSelectedItems(key);\n        /** @type {?} */\n        const selectedElementIndices = this.getSelectedElementsIndices(selectedElements);\n        /** @type {?} */\n        const selectedItems = this.getSelectedItems(items, selectedElementIndices);\n        /** @type {?} */\n        const sortedIndices = selectedElementIndices.sort();\n        /** @type {?} */\n        const dropIndex = this.findDropIndex(selectedElements, element);\n        while (sortedIndices.length > 0) {\n            items.splice(sortedIndices.pop(), 1);\n        }\n        /** @type {?} */\n        const result = this.getReflectedItems(items, selectedItems, dropIndex);\n        this.ngsgStore.setItems(key, result);\n        return result;\n    }\n    /**\n     * @private\n     * @param {?} items\n     * @param {?} selectedItems\n     * @param {?} dropIndex\n     * @return {?}\n     */\n    getReflectedItems(items, selectedItems, dropIndex) {\n        /** @type {?} */\n        const beforeSelection = items.slice(0, dropIndex);\n        /** @type {?} */\n        const afterSelection = items.slice(dropIndex, items.length);\n        return [...beforeSelection, ...selectedItems, ...afterSelection];\n    }\n    /**\n     * @private\n     * @param {?} items\n     * @param {?} selectedElementIndexes\n     * @return {?}\n     */\n    getSelectedItems(items, selectedElementIndexes) {\n        /** @type {?} */\n        const selectedItems = [];\n        selectedElementIndexes.forEach((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            selectedItems.push(items[index]);\n        }));\n        return selectedItems;\n    }\n    /**\n     * @private\n     * @param {?} selectedElements\n     * @return {?}\n     */\n    getSelectedElementsIndices(selectedElements) {\n        return selectedElements.map((/**\n         * @param {?} selectedElement\n         * @return {?}\n         */\n        (selectedElement) => selectedElement.originalIndex));\n    }\n    /**\n     * @private\n     * @param {?} selectedElements\n     * @param {?} element\n     * @return {?}\n     */\n    findDropIndex(selectedElements, element) {\n        if (this.isDropInSelection(selectedElements, element)) {\n            return NgsgElementsHelper.findIndex(selectedElements[0].node);\n        }\n        return NgsgElementsHelper.findIndex(element);\n    }\n    /**\n     * @private\n     * @param {?} collection\n     * @param {?} dropElement\n     * @return {?}\n     */\n    isDropInSelection(collection, dropElement) {\n        return !!collection.find((/**\n         * @param {?} dragElment\n         * @return {?}\n         */\n        (dragElment) => dragElment.node === dropElement));\n    }\n}\nNgsgReflectService.ɵfac = function NgsgReflectService_Factory(t) { return new (t || NgsgReflectService)(ɵngcc0.ɵɵinject(NgsgStoreService)); };\n/** @nocollapse */\nNgsgReflectService.ctorParameters = () => [\n    { type: NgsgStoreService }\n];\n/** @nocollapse */ NgsgReflectService.ɵprov = ɵɵdefineInjectable({ factory: function NgsgReflectService_Factory() { return new NgsgReflectService(ɵɵinject(NgsgStoreService)); }, token: NgsgReflectService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgReflectService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: NgsgStoreService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgReflectService.prototype.ngsgStore;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sort/sort/ngsg-sort.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgsgSortService {\n    /**\n     * @param {?} classService\n     * @param {?} ngsgStore\n     */\n    constructor(classService, ngsgStore) {\n        this.classService = classService;\n        this.ngsgStore = ngsgStore;\n    }\n    /**\n     * @param {?} group\n     * @return {?}\n     */\n    initSort(group) {\n        this.dragIndex = this.ngsgStore.getFirstSelectItem(group).originalIndex;\n        this.dragElements = this.ngsgStore.getSelectedItems(group);\n    }\n    /**\n     * @param {?} dropElement\n     * @return {?}\n     */\n    sort(dropElement) {\n        /** @type {?} */\n        const hoverIndex = NgsgElementsHelper.findIndex(dropElement);\n        /** @type {?} */\n        const el = this.getSibling(dropElement, this.dragIndex, hoverIndex);\n        if (this.isDropInSelection(el)) {\n            return;\n        }\n        this.dragElements.forEach((/**\n         * @param {?} dragElement\n         * @return {?}\n         */\n        (dragElement) => {\n            /** @type {?} */\n            const insertedNode = dropElement.parentNode.insertBefore(dragElement.node, el.node);\n            this.classService.addPlaceHolderClass((/** @type {?} */ (insertedNode)));\n        }));\n        this.dragIndex = NgsgElementsHelper.findIndex(this.dragElements[0].node);\n    }\n    /**\n     * @return {?}\n     */\n    endSort() {\n        this.dragElements.forEach((/**\n         * @param {?} dragElement\n         * @return {?}\n         */\n        (dragElement) => {\n            this.updateDropedItem(dragElement.node);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} dropElement\n     * @param {?} dragIndex\n     * @param {?} hoverIndex\n     * @return {?}\n     */\n    getSibling(dropElement, dragIndex, hoverIndex) {\n        if (dragIndex < hoverIndex) {\n            return { node: dropElement.nextSibling, originalIndex: hoverIndex + 1 };\n        }\n        return { node: dropElement, originalIndex: hoverIndex };\n    }\n    /**\n     * @private\n     * @param {?} dropElement\n     * @return {?}\n     */\n    isDropInSelection(dropElement) {\n        return !!this.dragElements.find((/**\n         * @param {?} dragElment\n         * @return {?}\n         */\n        (dragElment) => dragElment.node === dropElement.node));\n    }\n    /**\n     * @private\n     * @param {?} item\n     * @return {?}\n     */\n    updateDropedItem(item) {\n        this.classService.removePlaceHolderClass(item);\n        this.classService.addDroppedClass(item);\n        this.classService.removeSelectedClass(item);\n        timer(500).subscribe((/**\n         * @return {?}\n         */\n        () => this.classService.removeDroppedClass(item)));\n    }\n}\nNgsgSortService.ɵfac = function NgsgSortService_Factory(t) { return new (t || NgsgSortService)(ɵngcc0.ɵɵinject(NgsgClassService), ɵngcc0.ɵɵinject(NgsgStoreService)); };\n/** @nocollapse */\nNgsgSortService.ctorParameters = () => [\n    { type: NgsgClassService },\n    { type: NgsgStoreService }\n];\n/** @nocollapse */ NgsgSortService.ɵprov = ɵɵdefineInjectable({ factory: function NgsgSortService_Factory() { return new NgsgSortService(ɵɵinject(NgsgClassService), ɵɵinject(NgsgStoreService)); }, token: NgsgSortService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgSortService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: NgsgClassService }, { type: NgsgStoreService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSortService.prototype.dragIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSortService.prototype.dragElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSortService.prototype.classService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgSortService.prototype.ngsgStore;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngsg-item.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst selector = '[ngSortgridItem]';\nclass NgsgItemDirective {\n    /**\n     * @param {?} el\n     * @param {?} sortService\n     * @param {?} selectionService\n     * @param {?} reflectService\n     * @param {?} ngsgStore\n     * @param {?} ngsgEventService\n     * @param {?} scrollHelperService\n     */\n    constructor(el, sortService, selectionService, reflectService, ngsgStore, ngsgEventService, scrollHelperService) {\n        this.el = el;\n        this.sortService = sortService;\n        this.selectionService = selectionService;\n        this.reflectService = reflectService;\n        this.ngsgStore = ngsgStore;\n        this.ngsgEventService = ngsgEventService;\n        this.scrollHelperService = scrollHelperService;\n        this.ngSortGridGroup = 'defaultGroup';\n        this.autoScroll = false;\n        this.sorted = new EventEmitter();\n        this.selected = false;\n        this.destroy$ = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ngsgEventService.dropped$.pipe(takeUntil(this.destroy$)).subscribe((/**\n         * @return {?}\n         */\n        () => this.selected = false));\n        fromEvent(this.el.nativeElement, 'drag').pipe(throttleTime(20), takeUntil(this.destroy$), takeWhile((/**\n         * @return {?}\n         */\n        () => this.autoScroll))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.scrollHelperService.scrollIfNecessary(event, {\n                top: this.scrollPointTop,\n                bottom: this.scrollPointBottom\n            }, this.scrollSpeed);\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const sortGridItemChanges = changes.ngSortGridItems;\n        /** @type {?} */\n        const sortGridItems = sortGridItemChanges.currentValue ? sortGridItemChanges.currentValue : [];\n        if (!this.ngsgStore.hasGroup(this.ngSortGridGroup)) {\n            this.ngsgStore.initState(this.ngSortGridGroup, sortGridItems);\n            return;\n        }\n        this.ngsgStore.setItems(this.ngSortGridGroup, sortGridItems);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.el.nativeElement.draggable = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragStart(event) {\n        if (!this.occuredOnHost(event)) {\n            return;\n        }\n        this.selectionService.selectElementIfNoSelection(this.ngSortGridGroup, event.target);\n        this.sortService.initSort(this.ngSortGridGroup);\n    }\n    /**\n     * @return {?}\n     */\n    dragEnter() {\n        if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n            return;\n        }\n        this.sortService.sort(this.el.nativeElement);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragOver(event) {\n        if (event.preventDefault) {\n            // Necessary. Allows us to drop.\n            event.preventDefault();\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    drop() {\n        if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n            return;\n        }\n        if (!this.ngsgStore.hasItems(this.ngSortGridGroup)) {\n            console.warn(`Ng-sortgrid: No items provided - please use [sortGridItems] to pass in an array of items -\n      otherwhise the ordered items can not be emitted in the (sorted) event`);\n            return;\n        }\n        /** @type {?} */\n        const previousOrder = [...this.ngsgStore.getItems(this.ngSortGridGroup)];\n        this.sortService.endSort();\n        /** @type {?} */\n        const currentOrder = this.reflectService.reflectChanges(this.ngSortGridGroup, this.el.nativeElement);\n        this.sorted.next({ previousOrder, currentOrder });\n        this.ngsgStore.resetSelectedItems(this.ngSortGridGroup);\n        this.ngsgEventService.dropped$.next();\n    }\n    /**\n     * @return {?}\n     */\n    clicked() {\n        this.selected = !this.isItemCurrentlySelected();\n        this.selectionService.updateSelectedDragItem(this.ngSortGridGroup, this.el.nativeElement, this.selected);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    isItemCurrentlySelected() {\n        /** @type {?} */\n        const index = NgsgElementsHelper.findIndex(this.el.nativeElement);\n        return !!this.ngsgStore.getSelectedItems(this.ngSortGridGroup)\n            .find((/**\n         * @param {?} element\n         * @return {?}\n         */\n        element => element.originalIndex === index));\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    occuredOnHost(event) {\n        return event.target.matches(selector);\n    }\n}\nNgsgItemDirective.ɵfac = function NgsgItemDirective_Factory(t) { return new (t || NgsgItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgsgSortService), ɵngcc0.ɵɵdirectiveInject(NgsgSelectionService), ɵngcc0.ɵɵdirectiveInject(NgsgReflectService), ɵngcc0.ɵɵdirectiveInject(NgsgStoreService), ɵngcc0.ɵɵdirectiveInject(NgsgEventsService), ɵngcc0.ɵɵdirectiveInject(ScrollHelperService)); };\nNgsgItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgsgItemDirective, selectors: [[\"\", \"ngSortgridItem\", \"\"]], hostBindings: function NgsgItemDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"dragstart\", function NgsgItemDirective_dragstart_HostBindingHandler($event) { return ctx.dragStart($event); })(\"dragenter\", function NgsgItemDirective_dragenter_HostBindingHandler() { return ctx.dragEnter(); })(\"dragover\", function NgsgItemDirective_dragover_HostBindingHandler($event) { return ctx.dragOver($event); })(\"dragend\", function NgsgItemDirective_dragend_HostBindingHandler() { return ctx.drop(); })(\"click\", function NgsgItemDirective_click_HostBindingHandler() { return ctx.clicked(); });\n    } }, inputs: { ngSortGridGroup: \"ngSortGridGroup\", autoScroll: \"autoScroll\", ngSortGridItems: \"ngSortGridItems\", scrollPointTop: \"scrollPointTop\", scrollPointBottom: \"scrollPointBottom\", scrollSpeed: \"scrollSpeed\" }, outputs: { sorted: \"sorted\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgsgItemDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgsgSortService },\n    { type: NgsgSelectionService },\n    { type: NgsgReflectService },\n    { type: NgsgStoreService },\n    { type: NgsgEventsService },\n    { type: ScrollHelperService }\n];\nNgsgItemDirective.propDecorators = {\n    ngSortGridGroup: [{ type: Input }],\n    ngSortGridItems: [{ type: Input }],\n    scrollPointTop: [{ type: Input }],\n    scrollPointBottom: [{ type: Input }],\n    scrollSpeed: [{ type: Input }],\n    autoScroll: [{ type: Input }],\n    sorted: [{ type: Output }],\n    dragStart: [{ type: HostListener, args: ['dragstart', ['$event'],] }],\n    dragEnter: [{ type: HostListener, args: ['dragenter',] }],\n    dragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    drop: [{ type: HostListener, args: ['dragend',] }],\n    clicked: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgItemDirective, [{\n        type: Directive,\n        args: [{ selector }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: NgsgSortService }, { type: NgsgSelectionService }, { type: NgsgReflectService }, { type: NgsgStoreService }, { type: NgsgEventsService }, { type: ScrollHelperService }]; }, { ngSortGridGroup: [{\n            type: Input\n        }], autoScroll: [{\n            type: Input\n        }], sorted: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragStart: [{\n            type: HostListener,\n            args: ['dragstart', ['$event']]\n        }], \n    /**\n     * @return {?}\n     */\n    dragEnter: [{\n            type: HostListener,\n            args: ['dragenter']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    dragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @return {?}\n     */\n    drop: [{\n            type: HostListener,\n            args: ['dragend']\n        }], \n    /**\n     * @return {?}\n     */\n    clicked: [{\n            type: HostListener,\n            args: ['click']\n        }], ngSortGridItems: [{\n            type: Input\n        }], scrollPointTop: [{\n            type: Input\n        }], scrollPointBottom: [{\n            type: Input\n        }], scrollSpeed: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    NgsgItemDirective.prototype.ngSortGridGroup;\n    /** @type {?} */\n    NgsgItemDirective.prototype.ngSortGridItems;\n    /** @type {?} */\n    NgsgItemDirective.prototype.scrollPointTop;\n    /** @type {?} */\n    NgsgItemDirective.prototype.scrollPointBottom;\n    /** @type {?} */\n    NgsgItemDirective.prototype.scrollSpeed;\n    /** @type {?} */\n    NgsgItemDirective.prototype.autoScroll;\n    /** @type {?} */\n    NgsgItemDirective.prototype.sorted;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.destroy$;\n    /** @type {?} */\n    NgsgItemDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.sortService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.selectionService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.reflectService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.ngsgStore;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.ngsgEventService;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgsgItemDirective.prototype.scrollHelperService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngsg.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgsgModule {\n}\nNgsgModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgsgModule });\nNgsgModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgsgModule_Factory(t) { return new (t || NgsgModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgsgModule, { declarations: [NgsgItemDirective], exports: [NgsgItemDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgsgModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgsgItemDirective],\n                exports: [NgsgItemDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/shared/ngsg-order-change.model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction NgsgOrderChange() { }\nif (false) {\n    /** @type {?} */\n    NgsgOrderChange.prototype.previousOrder;\n    /** @type {?} */\n    NgsgOrderChange.prototype.currentOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-sortgrid.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgsgItemDirective, NgsgModule, NgsgSortService as ɵa, NgsgClassService as ɵb, NgsgStoreService as ɵc, NgsgSelectionService as ɵd, NgsgReflectService as ɵe, NgsgEventsService as ɵf, ScrollHelperService as ɵg };\n\n//# sourceMappingURL=ng-sortgrid.js.map","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OfficesComponent } from '@presentation/offices/offices.component';\r\nimport { OfficesGuard } from '@presentation/offices/offices.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OfficesComponent,\r\n    data: {\r\n      title: 'Список офисов'\r\n    }\r\n  },\r\n  {\r\n    path: ':floorId',\r\n    loadChildren: () => import('./offices-map/offices-map.module').then(({ OfficesMapModule }) => OfficesMapModule),\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [OfficesGuard]\r\n})\r\nexport class OfficesRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfficesGuard implements CanActivate {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { IOfficeCardPlaces } from '@base/office-card/office-card.model';\r\nimport { PLACES_INFO } from '@base/office-card/office-card.utils';\r\n\r\n@Component({\r\n  selector: 'app-office-card',\r\n  templateUrl: './office-card.component.html',\r\n  styleUrls: ['./office-card.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OfficeCardComponent {\r\n  PLACES_INFO = PLACES_INFO;\r\n  @Input() places: IOfficeCardPlaces = [\r\n    {\r\n      type: 'conversation',\r\n      freePlaceAmount: 5,\r\n      availablePlaceAmount: 5,\r\n      busyPlaceAmount: 55,\r\n    },\r\n    {\r\n      type: 'workplaces',\r\n      freePlaceAmount: 1,\r\n      availablePlaceAmount: 1,\r\n      busyPlaceAmount: 14,\r\n    },\r\n    {\r\n      type: 'wardrobes',\r\n      freePlaceAmount: 2,\r\n      availablePlaceAmount: 2,\r\n      busyPlaceAmount: 18,\r\n    },\r\n    {\r\n      type: 'parkinglots',\r\n      freePlaceAmount: 0,\r\n      availablePlaceAmount: 0,\r\n      busyPlaceAmount: 0,\r\n    },\r\n  ];\r\n  @Input() title: string = 'Default title';\r\n  @Input() floor: number = 0;\r\n  get workload(): number {\r\n    const total: number = this.places.reduce(\r\n      (acc, val) => (acc += val.busyPlaceAmount + val.freePlaceAmount),\r\n      0\r\n    );\r\n    const use: number = this.places.reduce(\r\n      (acc, val) => (acc += val.busyPlaceAmount),\r\n      0\r\n    );\r\n    return (use / total) * 100 || 0;\r\n  }\r\n  get headerClass(): object {\r\n    return {\r\n      _green: this.workload <= 50,\r\n      _red: this.workload >= 80,\r\n      _yellow: this.workload >= 51 && this.workload <= 79,\r\n    };\r\n  }\r\n}\r\n","<div class=\"office-card ant-card-hoverable\">\r\n  <div class=\"office-card__header border-bottom\" [ngClass]=\"headerClass\">\r\n    <div class=\"office-card__header-icon\">\r\n      <i nz-icon nzType=\"icons:office-building\"></i>\r\n    </div>\r\n    <div class=\"office-card__header-title\">\r\n      <h4 class=\"office-card__title\">{{ title }}</h4>\r\n      <span class=\"office-card__floor\"\r\n        >{{ \"Offices.Floor\" | translate }} {{ floor }}</span\r\n      >\r\n    </div>\r\n    <div class=\"office-card__header-workload\">\r\n      <p class=\"office-card__workload\">\r\n        {{ \"Offices.Workload\" | translate }}:\r\n        <i>{{ workload | number: \"1.0-0\" }}%</i>\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div class=\"office-card__places\">\r\n    <ng-container *ngFor=\"let place of places\">\r\n      <div\r\n        class=\"office-card__place\"\r\n        *ngIf=\"\r\n          place.availablePlaceAmount ||\r\n          place.freePlaceAmount ||\r\n          place.busyPlaceAmount\r\n        \"\r\n      >\r\n        <div class=\"office-card__place-icon\">\r\n          <i nz-icon [nzType]=\"PLACES_INFO[place.type].icon\"></i>\r\n        </div>\r\n        <h5 class=\"office-card__place-title\">\r\n          {{ PLACES_INFO[place.type].title | translate }}\r\n        </h5>\r\n        <span class=\"office-card__place-free\"\r\n          >{{ \"Offices.Free\" | translate }}:\r\n          <i>{{ place.freePlaceAmount }}</i></span\r\n        >\r\n        <span class=\"office-card__place-busy\"\r\n          >{{ \"Offices.Available\" | translate }}:\r\n          <i>{{ place.availablePlaceAmount }}</i></span\r\n        >\r\n        <span class=\"office-card__place-busy\"\r\n          >{{ \"Offices.Busy\" | translate }}:\r\n          <i>{{ place.busyPlaceAmount }}</i></span\r\n        >\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","export const PLACES_INFO = {\r\n  conversation: {\r\n    title: 'Offices.Negotiations',\r\n    icon: 'icons:dialog',\r\n  },\r\n  workplaces: {\r\n    title: 'Offices.Workplaces',\r\n    icon: 'icons:workplace',\r\n  },\r\n  wardrobes: {\r\n    title: 'Offices.Cabinets',\r\n    icon: 'icons:wardrobes',\r\n  },\r\n  parkinglots: {\r\n    title: 'Offices.Parkinglots',\r\n    icon: 'icons:parkinglots',\r\n  },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { IOfficeCardPlaces } from '@base/office-card/office-card.model';\r\nimport { dayRange } from '@presentation/offices/offices-map/offices-map.utils';\r\nimport {\r\n  IOfficesSequences,\r\n  IOfficesTab,\r\n} from '@presentation/offices/offices.model';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport { UserOfficesService } from '@src/app/core/services/user-offices.service';\r\nimport { IRoom, IWorkplace } from '@src/app/shared/http/models/database.model';\r\nimport { combineLatest, forkJoin, Observable, of } from 'rxjs';\r\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\r\nimport { UserApiService } from '@shared/http/services/user-api.service';\r\nimport { IDictionaryLabelsItem } from '@shared/dictionaries/dictionaries.model';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\n\r\n@Injectable()\r\nexport class OfficesService {\r\n  constructor(\r\n    private $dictionary: DictionariesService,\r\n    private $userApi: UserApiService,\r\n    private $reservationsApi: ReservationsApiService,\r\n    private $measurements: MeasurementsService,\r\n    private $user: UserService,\r\n    private $userOffices: UserOfficesService,\r\n    private $buildings: BuildingsService\r\n  ) {}\r\n\r\n  get filter(): Record<string, any> {\r\n    return {\r\n      date: {\r\n        value: [new Date(), new Date()],\r\n        time: true,\r\n        format: this.$measurements.getMeasurementByName('dateTime'),\r\n      },\r\n      checkboxGroup: [\r\n        {\r\n          label: 'Весь день',\r\n          value: 'allDay',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  get tabs$(): Observable<IOfficesTab[]> {\r\n    return combineLatest([\r\n      combineLatest([\r\n        this.$userOffices.getUserWorkplaceGroups(),\r\n        this.$buildings.allBuildingsWithFloorMaps$,\r\n        this.$dictionary.getDictionary<IWorkplace[]>('workplaces'),\r\n        this.$reservationsApi.getLiveData('busyWorkplaces'),\r\n        this.$dictionary.getDictionary<IRoom[]>('rooms'),\r\n        this.$reservationsApi.getLiveData('busyRooms'),\r\n      ]),\r\n      combineLatest([\r\n        this.$dictionary.getDictionary<IWorkplace[]>('parkingLots'),\r\n        this.$reservationsApi.getCommonLiveData$,\r\n      ]),\r\n    ]).pipe(\r\n      debounceTime(50),\r\n      map(\r\n        ([\r\n          [\r\n            userWorkplaceGroup,\r\n            [builds, floors],\r\n            workplaces,\r\n            liveData,\r\n            rooms,\r\n            liveDataRooms,\r\n          ],\r\n          [parkingLots, liveDataParkingLots],\r\n        ]) => {\r\n          const tabs: IOfficesTab[] = builds.map((build) => ({\r\n            buildId: build.id,\r\n            name: build.name,\r\n          }));\r\n          const allBusyWorkplaceIds: any[] = liveData.data.busyWorkplaces.map(\r\n            (place) => place.id\r\n          );\r\n          const allBusyParkingLotsIds: any[] =\r\n            liveDataParkingLots.arrayLiveDataReservedParkingLots.map(\r\n              (place) => place.id\r\n            );\r\n          const allBusyRoomIds: any[] = liveDataRooms.data.busyRooms.map(\r\n            (room) => room.id\r\n          );\r\n          return tabs.map((tab) => {\r\n            tab.items = floors\r\n              .filter((floor) => floor.buildingId === tab.buildId)\r\n              .map((floor) => {\r\n                const allFloorRooms = rooms.filter(\r\n                  (w) => w.floorMapId === floor.id\r\n                );\r\n\r\n                const allFloorWorkplaces = workplaces.filter(\r\n                  (w) => w.floorMapId === floor.id\r\n                );\r\n                const allFloorParkingLots = parkingLots.filter(\r\n                  (w) => w.floorMapId === floor.id\r\n                );\r\n                const busyWorkplace: IWorkplace[] = [];\r\n                const freeWorkplace: IWorkplace[] = [];\r\n                const busyRoom: IRoom[] = [];\r\n                const freeRoom: IRoom[] = [];\r\n                const busyParkingLots: IWorkplace[] = [];\r\n                const freeParkingLots: IWorkplace[] = [];\r\n\r\n                allFloorWorkplaces.forEach((place) => {\r\n                  if (allBusyWorkplaceIds.includes(place.id)) {\r\n                    busyWorkplace.push(place);\r\n                  } else {\r\n                    freeWorkplace.push(place);\r\n                  }\r\n                });\r\n                allFloorRooms.forEach((place) => {\r\n                  if (allBusyRoomIds.includes(place.id)) {\r\n                    busyRoom.push(place);\r\n                  } else {\r\n                    freeRoom.push(place);\r\n                  }\r\n                });\r\n                allFloorParkingLots.forEach((place) => {\r\n                  if (allBusyParkingLotsIds.includes(place.id)) {\r\n                    busyParkingLots.push(place);\r\n                  } else {\r\n                    freeParkingLots.push(place);\r\n                  }\r\n                });\r\n\r\n                const availableWorkplace: IWorkplace[] = [];\r\n\r\n                freeWorkplace.forEach((place) => {\r\n                  for (const group of place.workplaceGroups) {\r\n                    if (userWorkplaceGroup.includes(group)) {\r\n                      availableWorkplace.push(place);\r\n                      break;\r\n                    }\r\n                  }\r\n                });\r\n\r\n                return {\r\n                  floorId: floor.id,\r\n                  title: floor.name,\r\n                  floor: floor.floorNumber,\r\n                  places: [\r\n                    {\r\n                      type: 'conversation',\r\n                      freePlaceAmount: freeRoom.length,\r\n                      availablePlaceAmount: busyRoom.length + freeRoom.length,\r\n                      busyPlaceAmount: busyRoom.length,\r\n                    },\r\n                    {\r\n                      type: 'workplaces',\r\n                      freePlaceAmount: freeWorkplace.length,\r\n                      availablePlaceAmount: availableWorkplace.length,\r\n                      busyPlaceAmount: busyWorkplace.length,\r\n                    },\r\n                    {\r\n                      type: 'wardrobes',\r\n                      freePlaceAmount: 0,\r\n                      availablePlaceAmount: 0,\r\n                      busyPlaceAmount: 0,\r\n                    },\r\n                    {\r\n                      type: 'parkinglots',\r\n                      freePlaceAmount: freeParkingLots.length,\r\n                      availablePlaceAmount: allFloorParkingLots.length,\r\n                      busyPlaceAmount: busyParkingLots.length,\r\n                    },\r\n                  ],\r\n                };\r\n              });\r\n            return tab;\r\n          });\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  public nowDayRange(): [Date, Date] {\r\n    return dayRange(new Date());\r\n  }\r\n\r\n  public applyOrders(sequences: IOfficesSequences): Observable<any> {\r\n    return forkJoin([\r\n      this.setLabelBuildingsSequence(sequences.buildingsSequence),\r\n      this.setLabelFloorMapsSequence(sequences.floorMapsSequence),\r\n    ]).pipe(\r\n      tap(([{ success }, { success: success2 }]) => {\r\n        if (!success) delete sequences.buildingsSequence;\r\n        if (!success2) delete sequences.floorMapsSequence;\r\n      }),\r\n      switchMap(() => this.updateLabelSequences(sequences))\r\n    );\r\n  }\r\n\r\n  public setLabelBuildingsSequence(\r\n    sequence: number[] | undefined\r\n  ): Observable<any> {\r\n    return !sequence\r\n      ? of({ success: false })\r\n      : this.$userApi.setLabelBuildingsSequence({ sequence });\r\n  }\r\n\r\n  public setLabelFloorMapsSequence(sequence: number[]): Observable<any> {\r\n    return !sequence\r\n      ? of({ success: false })\r\n      : this.$userApi.setLabelFloorMapsSequence({ sequence });\r\n  }\r\n\r\n  public updateLabelSequences(sequences: IOfficesSequences): Observable<any> {\r\n    return this.$dictionary\r\n      .updateDictionaryItem<IDictionaryLabelsItem>(\r\n        'labels',\r\n        Object.assign(this.$user.label, sequences)\r\n      )\r\n      .pipe(tap(() => this.$user.updateUser$()));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OfficeCardComponent } from './office-card.component';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [OfficeCardComponent],\r\n  exports: [OfficeCardComponent],\r\n    imports: [CommonModule, NzIconModule, TranslateModule]\r\n})\r\nexport class OfficeCardModule {}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, } from '@angular/core';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { IOfficesSequences, IOfficesTab } from '@presentation/offices/offices.model';\r\nimport { OfficesService } from '@presentation/offices/offices.service';\r\nimport { IOfficeCard } from '@src/app/base/office-card/office-card.model';\r\nimport { NgsgOrderChange } from 'ng-sortgrid';\r\nimport { NzCheckBoxOptionInterface } from 'ng-zorro-antd/checkbox';\r\nimport { BehaviorSubject, forkJoin, Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-offices',\r\n  templateUrl: './offices.component.html',\r\n  styleUrls: [ './offices.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OfficesComponent implements OnInit, OnDestroy {\r\n\r\n  public filter: Record<string, any> = this.$service.filter;\r\n  public tabs: IOfficesTab[] = [];\r\n  public initialTabs: IOfficesTab[] = [];\r\n  public loading: boolean = null;\r\n  public isDragable: boolean = false;\r\n  public loadingChanges = new BehaviorSubject<boolean>(false);\r\n  private isBuildingOrderChanged: boolean = false;\r\n  private isFloorOrderChanged: boolean = false;\r\n\r\n  @Subscriptions()\r\n  private _subs: Subscription;\r\n\r\n  constructor(\r\n    private $service: OfficesService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  get buildingIds(): number[] {\r\n    return this.tabs.map((tab) => tab.buildId);\r\n  }\r\n\r\n  get floorIds(): number[] {\r\n    let ids = [];\r\n    this.tabs.forEach(\r\n      (tab) => (ids = ids.concat(tab.items.map((item) => item.floorId)))\r\n    );\r\n    return ids;\r\n  }\r\n\r\n\r\n  public allDayHandler(checkboxGroupValue: NzCheckBoxOptionInterface[]): void {\r\n    if (checkboxGroupValue[0].checked) {\r\n      this.filter.date.value = this.$service.nowDayRange();\r\n    }\r\n  }\r\n\r\n  public dateRangeHandler([ date1, date2 ]: [ Date, Date ]): void {\r\n    const [ now1, now2 ] = this.$service.nowDayRange();\r\n    if (\r\n      date1?.getTime() !== now1.getTime() ||\r\n      date2?.getTime() !== now2.getTime()\r\n    ) {\r\n      this.filter.checkboxGroup = [\r\n        { ...this.filter.checkboxGroup[0], checked: false },\r\n      ];\r\n    }\r\n  }\r\n\r\n  public amountSkeleton(amount: number): string[] {\r\n    return '1'.repeat(amount).split('');\r\n  }\r\n\r\n  public enableDragAndDrop(): void {\r\n    this.isDragable = true;\r\n    this.initialTabs = this.tabs.slice();\r\n  }\r\n\r\n  public dropOffice(event: CdkDragDrop<IOfficesTab[]>): void {\r\n    moveItemInArray(this.tabs, event.previousIndex, event.currentIndex);\r\n    this.isBuildingOrderChanged = true;\r\n  }\r\n\r\n  public dropFloors(\r\n    orderChange: NgsgOrderChange<IOfficeCard>,\r\n    tab: IOfficesTab\r\n  ): void {\r\n    tab.items = orderChange.currentOrder;\r\n    this.isFloorOrderChanged = true;\r\n  }\r\n\r\n  public applyOrders(): void {\r\n    const sequences: IOfficesSequences = {};\r\n    this.isDragable = false;\r\n    this.loadingChanges.next(true);\r\n\r\n    if (this.isBuildingOrderChanged) {\r\n      sequences.buildingsSequence = this.buildingIds;\r\n    }\r\n\r\n    if (this.isFloorOrderChanged) {\r\n      sequences.floorMapsSequence = this.floorIds;\r\n    }\r\n\r\n    this.isBuildingOrderChanged = false;\r\n    this.isFloorOrderChanged = false;\r\n\r\n    this.$service\r\n      .applyOrders(sequences)\r\n      .subscribe(() => {\r\n        this.loadingChanges.next(false);\r\n      });\r\n  }\r\n\r\n  public cancelChanges(): void {\r\n    this.isDragable = false;\r\n    this.loadingChanges.next(false);\r\n    this.tabs = this.initialTabs.slice();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loading = true;\r\n    this._subs = this.$service.tabs$.subscribe((tabs) => {\r\n      this.tabs = tabs;\r\n      this.loading = false;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n  }\r\n}\r\n","<ng-container *ngTemplateOutlet=\"loading ? loadingTpl : mainTpl\"></ng-container>\r\n\r\n<ng-template #mainTpl>\r\n  <section class=\"offices\">\r\n    <nz-tabset\r\n      [nzTabBarExtraContent]=\"actionTemplate\"\r\n      class=\"offices__tabs\"\r\n      [ngClass]=\"{ dragable: isDragable }\"\r\n      cdkDropList\r\n      cdkDropListOrientation=\"horizontal\"\r\n      (cdkDropListDropped)=\"dropOffice($event)\"\r\n      [cdkDropListDisabled]=\"!isDragable\"\r\n    >\r\n      <nz-tab [nzTitle]=\"titleTemplate\" *ngFor=\"let tab of tabs\">\r\n        <ng-template #titleTemplate class=\"offices__tabs__header\">\r\n          <div cdkDrag>\r\n            {{ tab.name }}\r\n          </div>\r\n        </ng-template>\r\n        <div class=\"offices__tabs__items\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"isDragable ? dragableCards : cards\"\r\n          ></ng-container>\r\n          <ng-template #dragableCards>\r\n            <a\r\n              *ngFor=\"let card of tab.items\"\r\n              [routerLink]=\"[card.floorId]\"\r\n              class=\"link-reset dragable\"\r\n              ngSortgridItem\r\n              autoScroll=\"true\"\r\n              [scrollPointTop]=\"100\"\r\n              [ngSortGridGroup]=\"'tab-' + tab.buildId\"\r\n              [ngSortGridItems]=\"tab.items\"\r\n              (sorted)=\"dropFloors($event, tab)\"\r\n            >\r\n              <app-office-card\r\n                [title]=\"card.title\"\r\n                [floor]=\"card.floor\"\r\n                [places]=\"card.places\"\r\n              ></app-office-card>\r\n            </a>\r\n          </ng-template>\r\n\r\n          <ng-template #cards>\r\n            <a\r\n              *ngFor=\"let card of tab.items\"\r\n              [routerLink]=\"[card.floorId]\"\r\n              class=\"link-reset\"\r\n            >\r\n              <app-office-card\r\n                [title]=\"card.title\"\r\n                [floor]=\"card.floor\"\r\n                [places]=\"card.places\"\r\n              ></app-office-card>\r\n            </a>\r\n          </ng-template>\r\n        </div>\r\n      </nz-tab>\r\n    </nz-tabset>\r\n    <ng-template #actionTemplate>\r\n      <button\r\n        *ngIf=\"!isDragable && !(loadingChanges | async)\"\r\n        nz-button\r\n        nzType=\"link\"\r\n        (click)=\"enableDragAndDrop()\"\r\n      >\r\n        Изменить порядок\r\n      </button>\r\n      <nz-space *ngIf=\"isDragable || (loadingChanges | async)\">\r\n        <button\r\n          *nzSpaceItem\r\n          nz-button\r\n          nzType=\"primary\"\r\n          [nzLoading]=\"loadingChanges | async\"\r\n          (click)=\"applyOrders()\"\r\n        >\r\n          Применить порядок\r\n        </button>\r\n        <button\r\n          *nzSpaceItem\r\n          nz-button\r\n          nzType=\"default\"\r\n          [nzLoading]=\"loadingChanges | async\"\r\n          (click)=\"cancelChanges()\"\r\n        >\r\n          Отменить\r\n        </button>\r\n      </nz-space>\r\n    </ng-template>\r\n  </section>\r\n</ng-template>\r\n\r\n<ng-template #mainFilter>\r\n  <app-simple-filter [tpl]=\"filterHeader\" class=\"mb-24\"></app-simple-filter>\r\n</ng-template>\r\n<ng-template #filterHeader>\r\n  <nz-range-picker\r\n    [(ngModel)]=\"filter.date.value\"\r\n    (ngModelChange)=\"dateRangeHandler($event)\"\r\n    [nzShowTime]=\"filter.date.time\"\r\n    [nzFormat]=\"filter.date.format\"\r\n    class=\"mr-24\"\r\n  ></nz-range-picker>\r\n  <nz-checkbox-group\r\n    [(ngModel)]=\"filter.checkboxGroup\"\r\n    (ngModelChange)=\"allDayHandler($event)\"\r\n  ></nz-checkbox-group>\r\n</ng-template>\r\n\r\n<ng-template #loadingTpl>\r\n  <section class=\"skeleton\">\r\n    <nz-row [nzGutter]=\"24\">\r\n      <nz-col\r\n        [nzXs]=\"24\"\r\n        [nzMd]=\"8\"\r\n        *ngFor=\"let skeleton of amountSkeleton(12)\"\r\n      >\r\n        <nz-skeleton [nzActive]=\"true\"></nz-skeleton>\r\n      </nz-col>\r\n    </nz-row>\r\n  </section>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { OfficesComponent } from './offices.component';\r\nimport { OfficesRoutingModule } from '@presentation/offices/offices-routing.module';\r\nimport { SimpleFilterModule } from '@base/simple-filter/simple-filter.module';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { OfficeCardModule } from '@base/office-card/office-card.module';\r\nimport { OfficesService } from '@presentation/offices/offices.service';\r\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzSpaceModule } from 'ng-zorro-antd/space';\r\nimport { NgsgModule } from 'ng-sortgrid';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [OfficesComponent],\r\n  providers: [OfficesService, DatePipe],\r\n  imports: [\r\n      CommonModule,\r\n      OfficesRoutingModule,\r\n      SimpleFilterModule,\r\n      NzDatePickerModule,\r\n      NzCheckboxModule,\r\n      NzInputModule,\r\n      FormsModule,\r\n      NzTabsModule,\r\n      NzGridModule,\r\n      NzButtonModule,\r\n      NzSpaceModule,\r\n      OfficeCardModule,\r\n      NzSkeletonModule,\r\n      DragDropModule,\r\n      NgsgModule\r\n  ]\r\n})\r\nexport class OfficesModule { }\r\n"],"sourceRoot":"webpack:///"}