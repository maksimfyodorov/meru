{"version":3,"sources":["./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filters-workplace/create-filter-workplace.service.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filters-workplace/create-filter-workplace.component.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filters-workplace/create-filter-workplace.component.html","./src/app/presentation/reservations/reservation-create/utils/common.util.ts","./src/app/presentation/reservations/reservation-create/reservation-create.module.ts","./src/app/presentation/reservations/reservation-create/components/floor/floor.service.ts","./src/app/presentation/reservations/reservation-create/components/create/create.service.ts","./src/app/presentation/reservations/reservation-create/reservation-create-routing.module.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filter.service.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filters-appointment/create-filter-appointment.component.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filters-appointment/create-filter-appointment.component.html","./src/app/presentation/reservations/reservation-create/components/floor/floor.component.ts","./src/app/presentation/reservations/reservation-create/components/floor/floor.component.html","./src/app/presentation/reservations/reservation-create/components/floor/floors.utils.ts","./src/app/presentation/reservations/reservation-create/components/create/create.component.ts","./src/app/presentation/reservations/reservation-create/components/create/create.component.html","./src/app/presentation/reservations/resolvers/title-create.resolver.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filter.component.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filter.component.html","./src/app/presentation/reservations/reservation-create/components/create/create.utils.ts","./src/app/presentation/reservations/reservation-create/components/create/create-filters/create-filter.utils.ts"],"names":[],"mappings":"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","file":"reservation-create-reservation-create-module.js","sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport { FilterService } from '@base/filters/filters/filter.service';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { ITag } from '@src/app/shared/http/models/database.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CreateFilterWorkplaceService extends FilterService {\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $dictionaries: DictionariesService,\r\n    private $measurements: MeasurementsService,\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  public get dateTimeFormat$(): Observable<string> {\r\n    return this.$measurements.getMeasurementByName$('shortDateTime');\r\n  }\r\n\r\n  get dateFormat$(): Observable<string> {\r\n    return this.$measurements.getMeasurementByName$('shortDate');\r\n  }\r\n\r\n  get tags$(): Observable<ITag[]> {\r\n    return this.$dictionaries.getDictionary('tags');\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Injector, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { FilterComponent } from '@base/filters/filters/filter.component';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\nimport { Subscribe } from '@core/decorators/subscribe.decorator';\r\nimport { getInitDate } from '@presentation/offices/offices-map/offices-map.utils';\r\nimport { CreateFilterWorkplaceService } from '@presentation/reservations/reservation-create/components/create/create-filters/create-filters-workplace/create-filter-workplace.service';\r\nimport { mapCheckBoxOptions } from '@shared/common/utils/filter.util';\r\nimport { WorkplaceTypesMap } from '@shared/common/utils/workplace.utils';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport { ITagObjectType } from '@src/app/shared/http/models/database.model';\r\nimport { addDays, isSameDay } from 'date-fns';\r\n\r\n@Component({\r\n  selector: 'app-create-filters-workplace, [app-create-filters-workplace]',\r\n  templateUrl: './create-filter-workplace.component.html',\r\n  styleUrls: [ './create-filter-workplace.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.app-list-filter-workplace]': `true`\r\n  },\r\n  providers: [ CreateFilterWorkplaceService ]\r\n})\r\nexport class CreateFilterWorkplaceComponent extends FilterComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  public tagObjectType: ITagObjectType | null = null;\r\n\r\n  floorMapIdControl: FormControl;\r\n  dateTimeFromControl: FormControl;\r\n  dateTimeToControl: FormControl;\r\n  tagsControl: FormControl;\r\n  repeatControl: FormControl;\r\n  typesControl: FormControl;\r\n  allDay = false;\r\n  repeat = false;\r\n  repeatData = {\r\n    weekNum: 1,\r\n    days: [],\r\n    end: null\r\n  };\r\n  repeatDisable: boolean;\r\n  weekNums = [ 1, 2, 3, 4, 5 ];\r\n  daysNaming = [\r\n    { label: 'Days.1', value: 1 },\r\n    { label: 'Days.2', value: 2 },\r\n    { label: 'Days.3', value: 3 },\r\n    { label: 'Days.4', value: 4 },\r\n    { label: 'Days.5', value: 5 },\r\n    { label: 'Days.6', value: 6 },\r\n    { label: 'Days.0', value: 0 },\r\n  ];\r\n  workHours = [];\r\n  minDuration: number;\r\n\r\n  tagsStatus: Record<string, boolean> = {};\r\n  typesCheckBoxOptions: IFilterCheckBoxOptions;\r\n\r\n  @Subscribe<string>()\r\n  dateFormat;\r\n\r\n  @Subscribe<string>()\r\n  dateTimeFormat;\r\n\r\n  tags;\r\n  endMaxDate: (date: Date) => boolean = () => true;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $service: CreateFilterWorkplaceService,\r\n    private $settings: SettingsService,\r\n    private _cdr: ChangeDetectorRef,\r\n  ) {\r\n    super(injector);\r\n    const startHour = this.$settings.getSettingByName('workplaceReservationBeginHourDefault');\r\n    const endHour = this.$settings.getSettingByName('workplaceReservationEndHourDefault');\r\n\r\n    this.workHours = [ startHour, endHour ];\r\n    this.minDuration = this.$settings.getSettingByName('workplaceReservationDurationMinSeconds') * 1000;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.$service.formGroup = this.formGroup;\r\n    this.assignControls();\r\n    this.getFieldOptions();\r\n    this.getWorkplaceTypes();\r\n    this._setFullDay();\r\n    this._watchDateTimeFrom();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  updateDateTime(dateTime: Date[]): void {\r\n    this.dateTimeFromControl.setValue(dateTime[0]);\r\n    this.dateTimeToControl.setValue(dateTime[1]);\r\n    this.repeatDisable = !isSameDay(dateTime[0], dateTime[1]);\r\n  }\r\n\r\n  updateTags(name: string): void {\r\n    this.tagsStatus[name] = !this.tagsStatus[name];\r\n    const tags = Object.entries(this.tagsStatus).filter(([ _, status ]) => status).map(([ key ]) => key);\r\n    this.tagsControl.setValue(tags);\r\n  }\r\n\r\n  chooseDays(event): void {\r\n    this.repeatData.days = event;\r\n    this.updateRepeatDays();\r\n  }\r\n\r\n  updateRepeatDays(): void {\r\n    const end = this.repeatData.end || '';\r\n    if (this.repeat) {\r\n      this.repeatControl.setValue({\r\n        ...this.repeatData,\r\n        end\r\n      });\r\n    } else {\r\n      this.repeatControl.setValue(null);\r\n    }\r\n  }\r\n\r\n  getWorkplaceTypes(): void {\r\n    this.typesCheckBoxOptions = mapCheckBoxOptions(WorkplaceTypesMap, 'value', 'name', this.typesControl);\r\n  }\r\n\r\n  private getFieldOptions(): void {\r\n    this.dateFormat = this.$service.dateFormat$;\r\n    this.dateTimeFormat = this.$service.dateTimeFormat$;\r\n    this.$service.tags$.subscribe((tags) => {\r\n      tags = this.tagObjectType ? tags.filter(tag=>tag.objectType === this.tagObjectType) : tags;\r\n      this.tagsStatus = tags.reduce((acc, el) => ({ ...acc, [el.name]: false }), {});\r\n      this.tags = tags;\r\n      this._cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private _setFullDay(): void {\r\n    const [ start, end ] = getInitDate(this.workHours, this.minDuration);\r\n    this.dateTimeFromControl.setValue(start);\r\n    this.dateTimeToControl.setValue(end);\r\n  }\r\n\r\n  private _watchDateTimeFrom(): void {\r\n    this._subscriptions = this.dateTimeFromControl.valueChanges.subscribe((value) => {\r\n      const date = addDays(new Date(value), this.$settings.getSettingByName('workplaceReservationDurationMaxDays'));\r\n      this.repeatData.end = date;\r\n      this.endMaxDate = (_date: Date) => {\r\n        return _date > date;\r\n      };\r\n    });\r\n  }\r\n}\r\n","<nz-form-item class=\"app-list-filter-item\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Period'}\"></ng-container>\r\n\r\n  <app-filter-date [ngModel]=\"[dateTimeFromControl.value, dateTimeToControl.value]\"\r\n                   [layout]=\"'vertical'\"\r\n                   [format]=\"dateTimeFormat\"\r\n                   [workHours]=\"workHours\"\r\n                   [minDuration]=\"minDuration\"\r\n                   [allowAllDay]=\"true\"\r\n                   [autoUpdateDateTo]=\"true\"\r\n                   [autoUpdateDateToFullDay]=\"true\"\r\n                   (ngModelChange)=\"updateDateTime($event)\"\r\n  >\r\n  </app-filter-date>\r\n  <br />\r\n  <label nz-checkbox\r\n         [(ngModel)]=\"repeat\"\r\n         [nzDisabled]=\"repeatDisable\"\r\n         (nzCheckedChange)=\"updateRepeatDays()\">\r\n    <h6 class=\"app-list-filter-item__title checkbox-title\">\r\n      {{'Repeat' | dictionary | translate}}\r\n    </h6>\r\n  </label>\r\n  <div class=\"app-list-filter-item__repeat\">\r\n    <nz-input-group class=\"week-num mb-25\"\r\n                    [nzAddOnBefore]=\"'Every' | dictionary | translate\"\r\n                    [nzAddOnAfter]=\"'week' | dictionary | translate\">\r\n      <nz-select [nzDisabled]=\"!repeat\"\r\n                 [(ngModel)]=\"repeatData.weekNum\"\r\n                 (ngModelChange)=\"updateRepeatDays()\"\r\n                 [style.width.%]=\"100\">\r\n        <nz-option *ngFor=\"let week of weekNums\" [nzValue]=\"week\" [nzLabel]=\"week.toString()\"></nz-option>\r\n      </nz-select>\r\n    </nz-input-group>\r\n    <nz-checkbox-wrapper class=\"mb-15\" style=\"width: 100%;\" (nzOnChange)=\"chooseDays($event)\">\r\n      <div nz-row>\r\n        <div class=\"mb-10\" nz-col nzSpan=\"6\" *ngFor=\"let day of daysNaming\">\r\n          <label nz-checkbox [nzDisabled]=\"!repeat\" [nzValue]=\"day.value\">{{ day.label | dictionary | translate }}</label>\r\n        </div>\r\n      </div>\r\n    </nz-checkbox-wrapper>\r\n    <nz-input-group [nzAddOnBefore]=\"'End' | dictionary | translate\">\r\n      <nz-date-picker [(ngModel)]=\"repeatData.end\"\r\n                      [nzFormat]=\"dateFormat\"\r\n                      [nzDisabled]=\"!repeat\"\r\n                      [nzDisabledDate]=\"endMaxDate\"\r\n                      (ngModelChange)=\"updateRepeatDays()\">\r\n      </nz-date-picker>\r\n    </nz-input-group>\r\n  </div>\r\n</nz-form-item>\r\n<nz-form-item class=\"app-reservations-filter-item\" *ngIf=\"typesControl\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Type'}\"></ng-container>\r\n  <nz-form-control>\r\n    <app-filter-checkbox [formControl]=\"typesControl\"\r\n                         [options]=\"typesCheckBoxOptions\"\r\n    >\r\n    </app-filter-checkbox>\r\n  </nz-form-control>\r\n</nz-form-item>\r\n\r\n<nz-form-item class=\"app-list-filter-item\" *ngIf=\"tags?.length\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Environment'}\"></ng-container>\r\n  <div *ngIf=\"tags\">\r\n    <nz-tag  *ngFor=\"let tag of tags\"\r\n             class=\"tag\"\r\n             [nzColor]=\"tagsStatus[tag.name] ? 'processing' : 'default'\"\r\n             (click)=\"updateTags(tag.name)\">\r\n      {{ tag.name }}\r\n    </nz-tag>\r\n  </div>\r\n\r\n</nz-form-item>\r\n\r\n<ng-template #titleTpl let-title>\r\n  <h6 class=\"app-list-filter-item__title\">\r\n    {{title | dictionary | translate}}\r\n  </h6>\r\n</ng-template>\r\n","import { ReservationType } from '@shared/http/models/meta.model';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\n\r\nexport function getPlaceTypeByReserveType(type: ReservationType | string): DictionaryName | string {\r\n  switch (type) {\r\n    case 'appointment':\r\n      return 'rooms';\r\n\r\n    case 'parking':\r\n      return 'parkingLots';\r\n\r\n    case 'workplace':\r\n      return 'workplaces';\r\n\r\n    default:\r\n      return type;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BookingListModule } from '@base/booking-list/booking-list.module';\r\nimport { DropdownSelectModule } from '@base/dropdown-select/dropdown-select.module';\r\nimport { FiltersModule } from '@base/filters/filters.module';\r\nimport { MapModule } from '@base/map/map.module';\r\nimport { OpenStreetMapModule } from '@base/open-street-map/open-street-map.module';\r\nimport { RendererModule } from '@base/renderer/renderer.module';\r\nimport { WorkplaceCardModule } from '@composite/workplace-card/workplace-card.module';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\nimport { CreateFilterComponent } from '@presentation/reservations/reservation-create/components/create/create-filters/create-filter.component';\r\nimport { CreateFilterWorkplaceComponent } from '@presentation/reservations/reservation-create/components/create/create-filters/create-filters-workplace/create-filter-workplace.component';\r\nimport { CreateComponent } from '@presentation/reservations/reservation-create/components/create/create.component';\r\nimport { ReservationCreateRoutingModule } from '@presentation/reservations/reservation-create/reservation-create-routing.module';\r\nimport { FloorComponent } from './components/floor/floor.component';\r\nimport { CreateFilterAppointmentComponent } from '@presentation/reservations/reservation-create/components/create/create-filters/create-filters-appointment/create-filter-appointment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateComponent,\r\n    CreateFilterComponent,\r\n    CreateFilterWorkplaceComponent,\r\n    CreateFilterAppointmentComponent,\r\n    FloorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReservationCreateRoutingModule,\r\n    OpenStreetMapModule,\r\n    DropdownSelectModule,\r\n    BookingListModule,\r\n    MapModule,\r\n    CoreModule,\r\n    FiltersModule,\r\n    RendererModule,\r\n    ReactiveFormsModule,\r\n    WorkplaceCardModule,\r\n  ],\r\n  providers: [DatePipe, TranslatePipe],\r\n})\r\nexport class ReservationCreateModule {}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UserService } from '@core/services/user.service';\r\nimport {\r\n  IFloor,\r\n  IFloorsInfo,\r\n  IWorkplace,\r\n} from '@presentation/reservations/reservation-create/models';\r\nimport {\r\n  checkReservedNeighbors,\r\n  disablePlace,\r\n  filterFloors,\r\n} from '@presentation/reservations/utils/reservation';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { IArea } from '@shared/http/models/database.model';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport {\r\n  MAP_POINT_BUSY_SVG,\r\n  MAP_POINT_DISABLED_SVG,\r\n  MAP_POINT_SVG,\r\n  ROOM_DISABLED_COLOR,\r\n} from '@shared/http/utils/images.const';\r\n// @ts-ignore\r\nimport {\r\n  addWeeks,\r\n  areIntervalsOverlapping,\r\n  getDay,\r\n  getHours,\r\n  isAfter,\r\n  isSameDay,\r\n  setHours,\r\n} from 'date-fns';\r\n// @ts-ignore\r\nimport nextDay from 'date-fns/nextDay';\r\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map,\r\n  shareReplay,\r\n  switchMap,\r\n  take,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ImageBlobService } from '@shared/images/services/image-blob.service';\r\nimport { mapPlacesToMArks } from '@presentation/reservations/reservation-create/components/floor/floors.utils';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { getPlaceTypeByReserveType } from '@presentation/reservations/reservation-create/utils/common.util';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\nimport { IMarks } from '@base/map/map-mark/map-mark.model';\r\nimport { ReservationMarksService } from '@src/app/core/services/reservation-marks.service';\r\n\r\n@Injectable()\r\nexport class FloorService {\r\n  private readonly _workplaces$: Observable<IWorkplace[]>;\r\n  private readonly _rooms$: Observable<any[]>;\r\n  private readonly _parkings$: Observable<any[]>;\r\n  private readonly _floors$: Observable<IFloorsInfo>;\r\n  private readonly _filters$ = new BehaviorSubject<Record<string, any>>({});\r\n  private readonly _reload$ = new BehaviorSubject<null>(null);\r\n  private readonly _loading$ = new BehaviorSubject<boolean>(false);\r\n  private readonly _type: ReservationType = 'workplace';\r\n  private _floorId: number;\r\n\r\n  reservations$: Observable<Record<string, any>[]>;\r\n\r\n  constructor(\r\n    private $dicts: DictionariesService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _measurements: MeasurementsService,\r\n    private _img: ImageBlobService,\r\n    private _api: ReservationsApiService,\r\n    private _user: UserService,\r\n    private datePipe: DatePipe,\r\n    private $floorMaps: FloorMapsService,\r\n    private $buildings: BuildingsService,\r\n    private $reservationMarks: ReservationMarksService\r\n  ) {\r\n    this._type = this._route.snapshot.params.type;\r\n    this._floorId = this._route.snapshot.params.floorId;\r\n    this._workplaces$ = forkJoin({\r\n      places: this.$dicts.getDictionary('workplaces'),\r\n      tags: this.$dicts.getDictionary('tags'),\r\n      disabled: this._api.getWorkplacesDisabled$,\r\n    }).pipe(\r\n      map(({ places, tags, disabled }) => {\r\n        return places.map((place) => ({\r\n          ...place,\r\n          tags: place.tags.map(\r\n            (tagId) => tags.find((t) => t.id === tagId).name\r\n          ),\r\n          disabled: disabled.includes(place.id),\r\n        })) as IWorkplace[];\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this._rooms$ = forkJoin({\r\n      rooms: this.$dicts.getDictionary('rooms'),\r\n      tags: this.$dicts.getDictionary('tags'),\r\n    }).pipe(\r\n      map(({ rooms, tags }) =>\r\n        rooms.map((room) => ({\r\n          ...room,\r\n          disabled: !Boolean((room.isBookingAllowed ?? true) && room.ewsMail),\r\n          tags: room.tags.map((tagId) => tags.find((t) => t.id === tagId).name),\r\n        }))\r\n      ),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this._parkings$ = forkJoin({\r\n      places: this.$dicts.getDictionary('parkingLots'),\r\n      tags: this.$dicts.getDictionary('tags'),\r\n      disabled: this._api.getReservationsByType('parking', {\r\n        isFirstPerson: true,\r\n      }),\r\n    }).pipe(\r\n      map(({ places, tags, disabled }) => {\r\n        return places.map((place) => ({\r\n          ...place,\r\n          tags: place.tags.map(\r\n            (tagId) => tags.find((t) => t.id === tagId).name\r\n          ),\r\n          disabled: disabled.includes(place.id),\r\n        })) as IWorkplace[];\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this._floors$ = this._route.params.pipe(\r\n      // tap(() => this.changeLoader(true)),\r\n      switchMap((params) => {\r\n        const itemType: DictionaryName | string = getPlaceTypeByReserveType(\r\n          params.type\r\n        );\r\n\r\n        return combineLatest([\r\n          this.$floorMaps.getFloorMaps$(itemType),\r\n          this.$buildings.getBuildingsByPlaceType$(itemType),\r\n          of(+params?.floorId),\r\n        ]);\r\n      }),\r\n      map(([floors, builds, floorId]) => {\r\n        const currentFloor = floors.find(\r\n          (floor) => floor.id === floorId\r\n        ) as IFloor;\r\n        const floorsList = filterFloors(floors, currentFloor.buildingId);\r\n        const currentBuild = builds.find(\r\n          (build) => build.id === currentFloor.buildingId\r\n        );\r\n\r\n        return { currentFloor, floorsList, currentBuild };\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.reservations$ = combineLatest([\r\n      this.currentFloor$,\r\n      this.datesFilter$,\r\n      this.currentItems$,\r\n      this._reload$,\r\n    ]).pipe(\r\n      tap(() => this.changeLoader(true)),\r\n      switchMap(([{ id }, { dateTimeFrom, dateTimeTo }, items]) => {\r\n        let params: Record<string, any>;\r\n\r\n        switch (this._type) {\r\n          case 'appointment':\r\n            params = {\r\n              requestAppointmentRoomIds: items\r\n                .filter((i) => !i.disabled)\r\n                .map((i) => i.id),\r\n              requestAppointmentDateFrom: this._getApiDate(dateTimeFrom),\r\n              requestAppointmentDateTo: this._getApiDate(dateTimeTo),\r\n            };\r\n            break;\r\n          case 'workplace':\r\n          default:\r\n            params = {\r\n              floorMapId: id,\r\n              dateTimeFrom: this._getApiDate(dateTimeFrom),\r\n              dateTimeTo: this._getApiDate(dateTimeTo),\r\n            };\r\n        }\r\n\r\n        return this._api.getMapReservationsByType(this._type, params);\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  get floors$(): Observable<IFloorsInfo> {\r\n    return this._floors$;\r\n  }\r\n\r\n  get areas$(): Observable<IArea[]> {\r\n    return this.currentFloor$.pipe(\r\n      switchMap((floor) =>\r\n        this.$dicts\r\n          .getDictionary<IArea[]>('areas')\r\n          .pipe(map((areas) => areas.filter((a) => a.floorMapId === floor.id)))\r\n      )\r\n    );\r\n  }\r\n\r\n  get currentFloor$(): Observable<IFloor> {\r\n    return this._floors$.pipe(map(({ currentFloor }) => currentFloor));\r\n  }\r\n\r\n  get floorImage$(): Observable<any> {\r\n    return this._floors$.pipe(\r\n      switchMap(({ currentFloor }) =>\r\n        combineLatest([\r\n          this._img.getImageBlob(currentFloor.mapImageUrl),\r\n          this.areas$,\r\n        ]).pipe(\r\n          map(([image, areas]) => ({\r\n            image,\r\n            imageSize: {\r\n              width: currentFloor.mapWidth,\r\n              height: currentFloor.mapHeight,\r\n            },\r\n            areas,\r\n          }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get loading$(): Observable<boolean> {\r\n    return this._loading$;\r\n  }\r\n\r\n  get currentItems$(): Observable<IWorkplace[]> {\r\n    let source: Observable<any>;\r\n    switch (this._type) {\r\n      case 'appointment':\r\n        source = this._rooms$;\r\n        break;\r\n\r\n      case 'parking':\r\n        source = this._parkings$;\r\n        break;\r\n\r\n      case 'workplace':\r\n      default:\r\n        source = this._workplaces$;\r\n    }\r\n\r\n    return source.pipe(\r\n      switchMap((places) =>\r\n        this.currentFloor$.pipe(\r\n          map((floor) =>\r\n            places.filter((place) => place.floorMapId === floor.id)\r\n          )\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get itemsWithFilters$() {\r\n    return combineLatest([\r\n      this.currentItems$,\r\n      this.reservations$,\r\n      this.tagsFilter$,\r\n      this.repeatRange$,\r\n      this.typesFilter$,\r\n      this.seatCountFilter$,\r\n      this.currentFloor$,\r\n      this.$reservationMarks.mapMarks$,\r\n    ]);\r\n  }\r\n\r\n  get notReservWorkplaces$(): Observable<IWorkplace[]> {\r\n    return this.itemsWithFilters$.pipe(\r\n      map(([places, reservs, tags, repeat, types, seatCount]) => {\r\n        return this._checkFilters(\r\n          places,\r\n          reservs,\r\n          tags,\r\n          repeat,\r\n          types,\r\n          seatCount\r\n        ).filter((p) => !p.disabled);\r\n      })\r\n    );\r\n  }\r\n\r\n  get mapMarks$(): Observable<IMarks> {\r\n    return this.itemsWithFilters$.pipe(\r\n      tap(() => this.changeLoader(true)),\r\n      switchMap(\r\n        ([\r\n          places,\r\n          reservs,\r\n          tags,\r\n          repeat,\r\n          types,\r\n          seatCount,\r\n          floor,\r\n          reservationMarks,\r\n        ]) => {\r\n          let images: Record<string, Observable<any>>;\r\n          if (floor.workplaceReservationSocialDistanceCheck === 'FORBIDDEN') {\r\n            places = places.map((place) => ({\r\n              ...place,\r\n              disabled: !place.disabled\r\n                ? checkReservedNeighbors(place, reservs)\r\n                : place.disabled,\r\n            }));\r\n          }\r\n\r\n          places = this._checkFilters(\r\n            places,\r\n            reservs,\r\n            tags,\r\n            repeat,\r\n            types,\r\n            seatCount\r\n          );\r\n\r\n          images = places\r\n            .map((place) => [place.id, this._img.getImageBlob(place.img)])\r\n            .reduce(\r\n              (acc, [id, _img]) => ({ ...acc, [id as number]: _img }),\r\n              {}\r\n            );\r\n\r\n          return forkJoin(images).pipe(\r\n            map((imgs) => ({ places, images: imgs, reservationMarks }))\r\n          );\r\n        }\r\n      ),\r\n      map(({ places, images, reservationMarks }) => [\r\n        ...mapPlacesToMArks(places, images, this._type),\r\n        ...reservationMarks.filter(\r\n          (reservationMark) =>\r\n            reservationMark.logicType !== 'Workplace' &&\r\n            reservationMark.logicType !== 'Room'\r\n        ),\r\n      ]),\r\n      tap(() => this.changeLoader(false))\r\n    );\r\n  }\r\n\r\n  get filterDates$(): Observable<Record<string, string>> {\r\n    return this._filters$.pipe(\r\n      switchMap((filters) =>\r\n        this._measurements.getMeasurementByName$('shortDateTime').pipe(\r\n          map((dateFormat) => ({\r\n            dateTimeFrom: this.datePipe.transform(\r\n              filters.dateTimeFrom,\r\n              dateFormat\r\n            ),\r\n            dateTimeTo: this.datePipe.transform(filters.dateTimeTo, dateFormat),\r\n          }))\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get datesFilter$(): Observable<Record<string, Date>> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged(\r\n        (p, q) =>\r\n          p.dateTimeFrom === q.dateTimeFrom && p.dateTimeTo === q.dateTimeTo\r\n      ),\r\n      map(({ dateTimeFrom, dateTimeTo }) => ({ dateTimeFrom, dateTimeTo })),\r\n      debounceTime(1000)\r\n    );\r\n  }\r\n\r\n  get tagsFilter$(): Observable<string[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged((p, q) => p.tags?.length === q.tags?.length),\r\n      map(({ tags }) => tags)\r\n    );\r\n  }\r\n\r\n  get typesFilter$(): Observable<string[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged((p, q) => p.types?.length === q.types?.length),\r\n      map(({ types }) => types)\r\n    );\r\n  }\r\n\r\n  get repeatFilter$(): Observable<Record<string, any>> {\r\n    return this._filters$.pipe(\r\n      switchMap((filters) =>\r\n        this._measurements.getMeasurementByName$('shortDate').pipe(\r\n          map((dateFormat) => {\r\n            if (filters.repeat) {\r\n              return {\r\n                ...filters.repeat,\r\n                end: this.datePipe.transform(filters.repeat.end, dateFormat),\r\n              };\r\n            } else {\r\n              return filters.repeat;\r\n            }\r\n          })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  get repeatRange$(): Observable<any[]> {\r\n    return this._filters$.pipe(\r\n      distinctUntilChanged(\r\n        (p, q) =>\r\n          p.repeat?.end === q.repeat?.end &&\r\n          p.repeat?.days.length === q.repeat?.days.length &&\r\n          p.repeat?.weekNum === q.repeat?.weekNum\r\n      ),\r\n      switchMap(({ repeat, dateTimeFrom, dateTimeTo }) => {\r\n        if (repeat) {\r\n          return this.currentFloor$.pipe(\r\n            switchMap(({ id }) => {\r\n              return this._api\r\n                .getReservationsByType(this._type, {\r\n                  floorMapId: id,\r\n                  dateTimeFrom,\r\n                  dateTimeTo: repeat.end,\r\n                })\r\n                .pipe(\r\n                  map((reservations) => [\r\n                    repeat,\r\n                    { dateTimeFrom, dateTimeTo },\r\n                    reservations,\r\n                  ])\r\n                );\r\n            })\r\n          );\r\n        } else {\r\n          return of(repeat);\r\n        }\r\n      }),\r\n      map((repeat) => {\r\n        if (repeat) {\r\n          const [r, dates, _reservations] = repeat;\r\n          return [\r\n            this._createRepeatsDates(dates, r.weekNum, r.days, r.end),\r\n            _reservations,\r\n          ];\r\n        } else {\r\n          return repeat;\r\n        }\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  get seatCountFilter$(): Observable<any> {\r\n    return this._filters$.pipe(\r\n      map(({ seatCount }) => seatCount),\r\n      distinctUntilChanged(),\r\n      debounceTime(400)\r\n    );\r\n  }\r\n\r\n  changeLoader(state: boolean): void {\r\n    this._loading$.next(state);\r\n  }\r\n\r\n  changeFloor(id: number): void {\r\n    this._router.navigate(['../', id], { relativeTo: this._route });\r\n  }\r\n\r\n  backToSelectBuildings(): void {\r\n    this._router.navigate(['../'], { relativeTo: this._route });\r\n  }\r\n\r\n  setFilters(filters: Record<string, any>): void {\r\n    this._filters$.next(filters);\r\n  }\r\n\r\n  reloadReservations(): void {\r\n    this._reload$.next(null);\r\n  }\r\n\r\n  reservationPlace(id: number): Promise<any> {\r\n    return this._filters$\r\n      .pipe(\r\n        switchMap((filters) =>\r\n          this.repeatRange$.pipe(map((repeat) => [filters, repeat]))\r\n        ),\r\n        switchMap(([filters, repeat]) => {\r\n          const reservations = [\r\n            this._setReservationByType(this._type, 'main', {\r\n              id,\r\n              dates: [filters.dateTimeFrom, filters.dateTimeTo],\r\n            }),\r\n          ];\r\n          if (repeat && repeat[0] && repeat[0].length) {\r\n            repeat[0].forEach((_dates, index) => {\r\n              reservations.push(\r\n                this._setReservationByType(this._type, index, {\r\n                  id,\r\n                  dates: [_dates[0], _dates[1]],\r\n                })\r\n              );\r\n            });\r\n          }\r\n\r\n          let params: any;\r\n          switch (this._type) {\r\n            case 'appointment':\r\n              params = { appointments: reservations };\r\n              break;\r\n            case 'parking':\r\n              params = { reservations };\r\n              break;\r\n            default:\r\n              params = { reservations };\r\n              break;\r\n          }\r\n\r\n          return this._api.putReservationsByType(this._type, params).pipe(\r\n            map(({ data, error }) => {\r\n              return {\r\n                data,\r\n                dates: repeat && repeat[0],\r\n                filters,\r\n                error,\r\n              };\r\n            })\r\n          );\r\n        }),\r\n        take(1)\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  private _getApiDate(date: Date): string {\r\n    return this.datePipe.transform(\r\n      date,\r\n      this._measurements.getMeasurementByName('filterDate')\r\n    );\r\n  }\r\n\r\n  private _checkFilters(\r\n    places,\r\n    reservations,\r\n    tags,\r\n    repeat,\r\n    types,\r\n    seatCount\r\n  ): IWorkplace[] {\r\n    let filteredPlaces = [...places];\r\n    filteredPlaces = filteredPlaces.map((place) => {\r\n      let newPlace = { ...place };\r\n      newPlace.img = newPlace.imageFreeUrl || MAP_POINT_SVG;\r\n\r\n      if (newPlace.disabled) {\r\n        newPlace.img = newPlace.imageDisabledUrl || MAP_POINT_DISABLED_SVG;\r\n      }\r\n\r\n      if (\r\n        reservations?.length &&\r\n        (this._type === 'workplace' || this._type === 'parking')\r\n      ) {\r\n        const reservation =\r\n          this._type === 'parking'\r\n            ? reservations?.find((r) => r.parkingLotId === place.id)\r\n            : reservations?.find((r) => r.workplaceId === place.id);\r\n        if (reservation) {\r\n          newPlace.disabled = true;\r\n          if (reservation.labelId === this._user.info.id) {\r\n            newPlace.img =\r\n              reservation.status === 'CONFIRMED'\r\n                ? newPlace.imageReservedByMeUrl\r\n                : newPlace.imageReservedByMeNotConfirmedUrl;\r\n          } else {\r\n            newPlace.img = newPlace.imageReservedByUserUrl;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this._type === 'appointment') {\r\n        const isBusy: boolean = reservations?.some(\r\n          (r) => r.roomId === place.id\r\n        );\r\n        newPlace.disabled = newPlace.disabled || isBusy;\r\n\r\n        if (newPlace.disabled && !isBusy) {\r\n          newPlace.color = ROOM_DISABLED_COLOR;\r\n        } else if (isBusy) {\r\n          newPlace.color = newPlace.roomTabletColorBusyUI;\r\n        } else {\r\n          newPlace.color = newPlace.roomTabletColorFreeUI;\r\n        }\r\n      }\r\n\r\n      if (reservations?.length && this._type === 'appointment') {\r\n        const reservation = reservations?.find((r) => r.roomId === place.id);\r\n        if (reservation) {\r\n          newPlace.disabled = true;\r\n          newPlace.img = MAP_POINT_BUSY_SVG;\r\n        }\r\n      }\r\n\r\n      if (repeat) {\r\n        const [repeatDates, repeatReservations] = repeat;\r\n        const _reservations =\r\n          this._type === 'parking'\r\n            ? repeatReservations.filter((r) => r.parkingLotId === place.id)\r\n            : repeatReservations.filter((r) => r.workplaceId === place.id);\r\n        let overlap: any = false;\r\n        for (const rv of _reservations) {\r\n          for (const _date of repeatDates) {\r\n            overlap = areIntervalsOverlapping(\r\n              { start: _date[0], end: _date[1] },\r\n              { start: new Date(rv.dateTimeFrom), end: new Date(rv.dateTimeTo) }\r\n            )\r\n              ? rv\r\n              : false;\r\n            if (overlap) break;\r\n          }\r\n          if (overlap) break;\r\n        }\r\n        if (overlap) {\r\n          newPlace.disabled = true;\r\n          newPlace.img =\r\n            overlap.labelId === this._user.info.id\r\n              ? newPlace.imageReservedByMeUrl\r\n              : newPlace.imageReservedByUserUrl;\r\n        }\r\n      }\r\n\r\n      if (tags && tags.length) {\r\n        if (!tags.every((tag) => place.tags.includes(tag))) {\r\n          newPlace = disablePlace(newPlace);\r\n        }\r\n      }\r\n\r\n      if (types && Array.isArray(types)) {\r\n        if (!types.includes(newPlace.type)) {\r\n          newPlace = disablePlace(newPlace);\r\n        }\r\n      }\r\n\r\n      if (seatCount && Number.isInteger(seatCount)) {\r\n        if (newPlace.seatCount < seatCount) {\r\n          newPlace = disablePlace(newPlace);\r\n        }\r\n      }\r\n\r\n      return newPlace;\r\n    });\r\n\r\n    return filteredPlaces;\r\n  }\r\n\r\n  private _createRepeatsDates(\r\n    { dateTimeFrom, dateTimeTo },\r\n    weekNum,\r\n    days,\r\n    end\r\n  ): Date[][] {\r\n    const result = [];\r\n    let lastDay = dateTimeFrom;\r\n\r\n    if (!days.length) return result;\r\n\r\n    const weekDayHandler = (day) => {\r\n      lastDay = nextDay(lastDay, day);\r\n      if (isAfter(end, lastDay) || isSameDay(end, lastDay)) {\r\n        result.push([\r\n          setHours(lastDay, getHours(dateTimeFrom)),\r\n          setHours(lastDay, getHours(dateTimeTo)),\r\n        ]);\r\n      }\r\n    };\r\n\r\n    const sameWeek = days.filter((day) => (day || 7) > getDay(dateTimeFrom));\r\n    sameWeek.forEach(weekDayHandler);\r\n\r\n    while (isAfter(end, lastDay) || isSameDay(end, lastDay)) {\r\n      lastDay = addWeeks(lastDay, weekNum - 1);\r\n      days.forEach(weekDayHandler);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private _setReservationByType(\r\n    type: ReservationType,\r\n    recordCode: string,\r\n    data\r\n  ): Record<string, any> {\r\n    return {\r\n      recordCode: `${recordCode}`,\r\n      ...((type === 'workplace' && {\r\n        workplaceId: data.id,\r\n        labelId: this._user.info.id,\r\n        dateTimeFrom: this._getApiDate(data.dates[0]),\r\n        dateTimeTo: this._getApiDate(data.dates[1]),\r\n      }) ||\r\n        {}),\r\n      ...((type === 'parking' && {\r\n        parkingLotId: data.id,\r\n        labelId: this._user.info.id,\r\n        dateTimeFrom: this._getApiDate(data.dates[0]),\r\n        dateTimeTo: this._getApiDate(data.dates[1]),\r\n      }) ||\r\n        {}),\r\n      ...((type === 'appointment' && {\r\n        appointmentRoomsList: [data.id],\r\n        appointmentDateFrom: this._getApiDate(data.dates[0]),\r\n        appointmentDateTo: this._getApiDate(data.dates[1]),\r\n      }) ||\r\n        {}),\r\n    };\r\n  }\r\n\r\n  get type() {\r\n    return this._type;\r\n  }\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport { UserOfficesService } from '@src/app/core/services/user-offices.service';\r\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\r\nimport { catchError, map, pluck, switchMap, tap } from 'rxjs/operators';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { getBusyType, mapBuildingListData } from '@presentation/reservations/reservation-create/components/create/create.utils';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\nimport { IDictionary, IDictionaryBuildings, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\nimport { getPlaceTypeByReserveType } from '@presentation/reservations/reservation-create/utils/common.util';\r\nimport { LiveDataApiService } from '@shared/http/services/live-data-api.service';\r\nimport { ILiveDataBusyRooms, ILiveDataBusyWorkplaces, LiveDataKey } from '@shared/http/models/live-data.model';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { BuildingsListData } from '@presentation/reservations/reservation-create/models';\r\n\r\n@Injectable()\r\nexport class CreateService {\r\n  private _bookListContentTpl: TemplateRef<unknown>;\r\n  private _loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(\r\n    private _dicts: DictionariesService,\r\n    private $reservationsApi: ReservationsApiService,\r\n    private $userOffices: UserOfficesService,\r\n    private $buildings: BuildingsService,\r\n    private $floorMaps: FloorMapsService,\r\n    private $router: Router,\r\n    private $route: ActivatedRoute,\r\n    private $liveDataApi: LiveDataApiService\r\n  ) {\r\n  }\r\n\r\n  get loading$(): Observable<boolean> {\r\n    return this._loading$.asObservable();\r\n  }\r\n\r\n  public get placeType$(): Observable<DictionaryName | string> {\r\n    return this.$route.params.pipe(\r\n      pluck('type'),\r\n      map(getPlaceTypeByReserveType)\r\n    );\r\n  }\r\n\r\n  public goToCreateOnFloor(buildingId: number): void {\r\n    this.$floorMaps\r\n      .getFloorMaps$(this.placeType, buildingId)\r\n      .subscribe(([ { id } ]) =>\r\n        this.$router.navigate([ /*buildingId,*/ id ], { relativeTo: this.$route })\r\n      );\r\n  }\r\n\r\n  private get type(): ReservationType | string {\r\n    return this.$route.snapshot.params.type;\r\n  }\r\n\r\n  private get placeType(): DictionaryName {\r\n    return getPlaceTypeByReserveType(this.type) as DictionaryName;\r\n  }\r\n\r\n  public getBuildingsList1$(contentTpl: TemplateRef<unknown>): Observable<IBookingItems> {\r\n    return this.placeType$.pipe(\r\n      tap(() => this._loading$.next(true)),\r\n      switchMap((placeType) => this.getBuildingListData$(placeType as DictionaryName)),\r\n      map((data: BuildingsListData) => mapBuildingListData(data, contentTpl, buildingId => this.goToCreateOnFloor(buildingId))),\r\n      tap(() => this._loading$.next(false)),\r\n    );\r\n  }\r\n\r\n  private getBuildingListData$(placeType: DictionaryName): Observable<BuildingsListData> {\r\n    return combineLatest([\r\n      this.getBuildings$(placeType),\r\n      this.getFloorMaps$(placeType),\r\n      this.getPlaces$(placeType),\r\n      this.getBusyLiveData$(placeType)\r\n    ]);\r\n  }\r\n\r\n  private getBuildings$(placeType: DictionaryName): Observable<IDictionaryBuildings> {\r\n    return this.$buildings.getBuildingsByPlaceType$(placeType);\r\n  }\r\n\r\n  private getFloorMaps$(placeType: DictionaryName): Observable<IDictionaryFloorMaps> {\r\n    return this.$floorMaps.getFloorMaps$(placeType);\r\n  }\r\n\r\n  private getBusyLiveData$(placeType: DictionaryName): Observable<ILiveDataBusyRooms | ILiveDataBusyWorkplaces> {\r\n    const busyType: LiveDataKey | null = getBusyType(placeType);\r\n\r\n    if (!busyType) {\r\n      return of([]);\r\n    }\r\n\r\n    return this.$liveDataApi\r\n      .get<'busyRooms' | 'busyWorkplaces'>(busyType as any)\r\n      .pipe(\r\n        tap(console.log),\r\n        catchError(() => of([]))\r\n      );\r\n  }\r\n\r\n  private getPlaces$(placeType: DictionaryName): Observable<IDictionary> {\r\n    return this._dicts.getDictionary(placeType);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateComponent } from '@presentation/reservations/reservation-create/components/create/create.component';\r\nimport { FloorComponent } from '@presentation/reservations/reservation-create/components/floor/floor.component';\r\nimport { TitleCreateResolver } from '@presentation/reservations/resolvers/title-create.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: CreateComponent,\r\n    data: {\r\n      title: 'Забронировать место',\r\n    },\r\n    resolve: {\r\n      title: TitleCreateResolver\r\n    }\r\n  },\r\n  {\r\n    path: ':floorId',\r\n    component: FloorComponent,\r\n    data: {\r\n      title: 'Забронировать место',\r\n    },\r\n    resolve: {\r\n      title: TitleCreateResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class ReservationCreateRoutingModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { getListFilterFieldsByType } from '@presentation/reservations/reservation-create/components/create/create-filters/create-filter.utils';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\n\r\n@Injectable()\r\nexport class CreateFilterService {\r\n  private _formGroup: FormGroup = new FormGroup({});\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n  }\r\n\r\n  public get formGroup(): FormGroup {\r\n    return this._formGroup;\r\n  }\r\n\r\n  public createFormGroup(type: ReservationType): void {\r\n    this.clearFormGroup();\r\n    this.addFormGroupControls(type);\r\n  }\r\n\r\n  public clear(formGroup: FormGroup): void {\r\n    Object.values(this.formGroup.controls).forEach((control) => {\r\n      if (control.value instanceof Array) {\r\n        control.setValue([]);\r\n        return;\r\n      }\r\n\r\n      control.setValue(null);\r\n    })\r\n  }\r\n\r\n  private clearFormGroup(): void {\r\n    Object.keys(this._formGroup.controls)\r\n      .forEach(key => this._formGroup.removeControl(key));\r\n  }\r\n\r\n  private addFormGroupControls(type: ReservationType): void {\r\n    if (!type) {\r\n      this._formGroup = new FormGroup({});\r\n      return;\r\n    }\r\n\r\n    Object.entries(getListFilterFieldsByType(type))\r\n      .forEach(([ name, state ]) =>\r\n        this._formGroup.addControl(\r\n          name,\r\n          this.formBuilder.control(state)\r\n        )\r\n      )\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { CreateFilterWorkplaceService } from '@presentation/reservations/reservation-create/components/create/create-filters/create-filters-workplace/create-filter-workplace.service';\r\nimport { FilterComponent } from '@base/filters/filters/filter.component';\r\nimport { Subscribe } from '@core/decorators/subscribe.decorator';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\nimport { addDays, addHours, isSameDay } from 'date-fns';\r\nimport { ITagObjectType } from '@src/app/shared/http/models/database.model';\r\n\r\nconst MIN_DURATION_IN_HOUR: number = 1;\r\n\r\n@Component({\r\n  selector: 'app-create-filters-appointment, [app-create-filters-appointment]',\r\n  templateUrl: './create-filter-appointment.component.html',\r\n  styleUrls: ['./create-filter-appointment.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.app-list-filter-workplace]': `true`,\r\n  },\r\n  providers: [CreateFilterWorkplaceService],\r\n})\r\nexport class CreateFilterAppointmentComponent\r\n  extends FilterComponent\r\n  implements OnInit, OnDestroy\r\n{\r\n  @Input()\r\n  public tagObjectType: ITagObjectType | null = null;\r\n\r\n  floorMapIdControl: FormControl;\r\n  dateTimeFromControl: FormControl;\r\n  dateTimeToControl: FormControl;\r\n  tagsControl: FormControl;\r\n  repeatControl: FormControl;\r\n  seatCountControl: FormControl;\r\n  allDay = false;\r\n  repeat = false;\r\n  repeatData = {\r\n    weekNum: 1,\r\n    days: [],\r\n    end: null,\r\n  };\r\n  repeatDisable: boolean;\r\n  weekNums = [1, 2, 3, 4, 5];\r\n  daysNaming = [\r\n    { label: 'Days.1', value: 1 },\r\n    { label: 'Days.2', value: 2 },\r\n    { label: 'Days.3', value: 3 },\r\n    { label: 'Days.4', value: 4 },\r\n    { label: 'Days.5', value: 5 },\r\n    { label: 'Days.6', value: 6 },\r\n    { label: 'Days.0', value: 0 },\r\n  ];\r\n  workHours = [];\r\n  minDuration: number;\r\n\r\n  tagsStatus: Record<string, boolean> = {};\r\n  typesCheckBoxOptions: IFilterCheckBoxOptions;\r\n\r\n  @Subscribe<string>()\r\n  dateFormat;\r\n\r\n  @Subscribe<string>()\r\n  dateTimeFormat;\r\n\r\n  tags;\r\n  endMaxDate: (date: Date) => boolean = () => true;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $service: CreateFilterWorkplaceService,\r\n    private $settings: SettingsService,\r\n    private _localization: LocalizationService,\r\n    private _cdr: ChangeDetectorRef\r\n  ) {\r\n    super(injector);\r\n    this.workHours = [0, 24];\r\n    this.minDuration = 900000;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.$service.formGroup = this.formGroup;\r\n    this.assignControls();\r\n    this.getFieldOptions();\r\n    this._setFullDay();\r\n    this._watchDateTimeFrom();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  updateDateTime(dateTime: Date[]): void {\r\n    this.dateTimeFromControl.setValue(dateTime[0]);\r\n    this.dateTimeToControl.setValue(dateTime[1]);\r\n    this.repeatDisable = !isSameDay(dateTime[0], dateTime[1]);\r\n  }\r\n\r\n  updateTags(name: string): void {\r\n    this.tagsStatus[name] = !this.tagsStatus[name];\r\n    const tags = Object.entries(this.tagsStatus)\r\n      .filter(([_, status]) => status)\r\n      .map(([key]) => key);\r\n    this.tagsControl.setValue(tags);\r\n  }\r\n\r\n  chooseDays(event): void {\r\n    this.repeatData.days = event;\r\n    this.updateRepeatDays();\r\n  }\r\n\r\n  updateRepeatDays(): void {\r\n    const end = this.repeatData.end || '';\r\n    if (this.repeat) {\r\n      this.repeatControl.setValue({\r\n        ...this.repeatData,\r\n        end,\r\n      });\r\n    } else {\r\n      this.repeatControl.setValue(null);\r\n    }\r\n  }\r\n\r\n  private getFieldOptions(): void {\r\n    this.dateFormat = this.$service.dateFormat$;\r\n    this.dateTimeFormat = this.$service.dateTimeFormat$;\r\n    this.$service.tags$.subscribe((tags) => {\r\n      tags = this.tagObjectType\r\n        ? tags.filter((tag) => tag.objectType === this.tagObjectType)\r\n        : tags;\r\n      this.tagsStatus = tags.reduce(\r\n        (acc, el) => ({ ...acc, [el.name]: false }),\r\n        {}\r\n      );\r\n      this.tags = tags;\r\n      this._cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  private _setFullDay(): void {\r\n    const start: Date = new Date();\r\n    const end: Date = addHours(start, MIN_DURATION_IN_HOUR);\r\n\r\n    this.dateTimeFromControl.setValue(start);\r\n    this.dateTimeToControl.setValue(end);\r\n  }\r\n\r\n  private _watchDateTimeFrom(): void {\r\n    this.dateTimeFromControl.valueChanges.subscribe((value) => {\r\n      const date = addDays(\r\n        new Date(value),\r\n        this.$settings.getSettingByName('workplaceReservationDurationMaxDays')\r\n      );\r\n      this.repeatData.end = date;\r\n      this.endMaxDate = (_date: Date) => {\r\n        return _date > date;\r\n      };\r\n    });\r\n  }\r\n}\r\n","<nz-form-item class=\"app-list-filter-item\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Period'}\"></ng-container>\r\n\r\n  <app-filter-date [ngModel]=\"[dateTimeFromControl.value, dateTimeToControl.value]\"\r\n                   [layout]=\"'vertical'\"\r\n                   [format]=\"dateTimeFormat\"\r\n                   [workHours]=\"workHours\"\r\n                   [minDuration]=\"minDuration\"\r\n                   [allowAllDay]=\"true\"\r\n                   [autoUpdateDateTo]=\"true\"\r\n                   (ngModelChange)=\"updateDateTime($event)\"\r\n  >\r\n  </app-filter-date>\r\n  <br />\r\n  <label nz-checkbox\r\n         [(ngModel)]=\"repeat\"\r\n         [nzDisabled]=\"repeatDisable\"\r\n         (nzCheckedChange)=\"updateRepeatDays()\">\r\n    <h6 class=\"app-list-filter-item__title checkbox-title\">\r\n      {{'Repeat' | dictionary | translate}}\r\n    </h6>\r\n  </label>\r\n  <div class=\"app-list-filter-item__repeat\">\r\n    <nz-input-group class=\"week-num mb-25\"\r\n                    [nzAddOnBefore]=\"'Every' | dictionary | translate\"\r\n                    [nzAddOnAfter]=\"'week' | dictionary | translate\">\r\n      <nz-select [nzDisabled]=\"!repeat\"\r\n                 [(ngModel)]=\"repeatData.weekNum\"\r\n                 (ngModelChange)=\"updateRepeatDays()\"\r\n                 [style.width.%]=\"100\">\r\n        <nz-option *ngFor=\"let week of weekNums\" [nzValue]=\"week\" [nzLabel]=\"week.toString()\"></nz-option>\r\n      </nz-select>\r\n    </nz-input-group>\r\n    <nz-checkbox-wrapper class=\"mb-15\" style=\"width: 100%;\" (nzOnChange)=\"chooseDays($event)\">\r\n      <div nz-row>\r\n        <div class=\"mb-10\" nz-col nzSpan=\"6\" *ngFor=\"let day of daysNaming\">\r\n          <label nz-checkbox [nzDisabled]=\"!repeat\" [nzValue]=\"day.value\">{{ day.label | dictionary | translate }}</label>\r\n        </div>\r\n      </div>\r\n    </nz-checkbox-wrapper>\r\n    <nz-input-group [nzAddOnBefore]=\"'End' | dictionary | translate\">\r\n      <nz-date-picker [(ngModel)]=\"repeatData.end\"\r\n                      [nzFormat]=\"dateFormat\"\r\n                      [nzDisabled]=\"!repeat\"\r\n                      [nzDisabledDate]=\"endMaxDate\"\r\n                      (ngModelChange)=\"updateRepeatDays()\">\r\n      </nz-date-picker>\r\n    </nz-input-group>\r\n  </div>\r\n</nz-form-item>\r\n\r\n<nz-form-item class=\"app-list-filter-item\" *ngIf=\"tags?.length\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Seats count'}\"></ng-container>\r\n  <nz-input-number [formControl]=\"seatCountControl\" [nzMin]=\"1\"></nz-input-number>\r\n</nz-form-item>\r\n\r\n<nz-form-item class=\"app-list-filter-item\" *ngIf=\"tags?.length\">\r\n  <ng-container *ngTemplateOutlet=\"titleTpl; context: {$implicit: 'Environment'}\"></ng-container>\r\n  <div *ngIf=\"tags\">\r\n    <nz-tag  *ngFor=\"let tag of tags\"\r\n             class=\"tag\"\r\n             [nzColor]=\"tagsStatus[tag.name] ? 'processing' : 'default'\"\r\n             (click)=\"updateTags(tag.name)\">\r\n      {{ tag.name }}\r\n    </nz-tag>\r\n  </div>\r\n\r\n</nz-form-item>\r\n\r\n<ng-template #titleTpl let-title>\r\n  <h6 class=\"app-list-filter-item__title\">\r\n    {{title | dictionary | translate}}\r\n  </h6>\r\n</ng-template>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IBookingItemAction } from '@base/booking-list/booking-item/booking-item.model';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { IMarks, MarkItemLogicType } from '@base/map/map-mark/map-mark.model';\r\nimport { IMapSize } from '@base/map/map.model';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\nimport { FloorService } from '@presentation/reservations/reservation-create/components/floor/floor.service';\r\nimport {\r\n  IFloor,\r\n  IWorkplace,\r\n} from '@presentation/reservations/reservation-create/models';\r\nimport {\r\n  checkReservedNeighbors,\r\n  getDistanceCheckConfirmModal,\r\n} from '@presentation/reservations/utils/reservation';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { IArea } from '@shared/http/models/database.model';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { ConfigService } from '@src/app/core/services/config.service';\r\nimport { ReservationMarksService } from '@src/app/core/services/reservation-marks.service';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nconst HEIGHT_EXCEPT_MAP: number = 335;\r\n\r\n@Component({\r\n  selector: 'app-floor',\r\n  templateUrl: './floor.component.html',\r\n  styleUrls: ['./floor.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [ReservationMarksService, FloorService],\r\n})\r\nexport class FloorComponent implements AfterViewInit, OnDestroy {\r\n  areas: IArea[];\r\n  areasVisible: boolean = false;\r\n  activeMarkIndex = null;\r\n  allReservations: any[];\r\n  floorsList: IFloor[];\r\n  currentFloor: IFloor;\r\n  currentBuild: Record<string, any>;\r\n  image: string;\r\n  imageSize: IMapSize;\r\n  marks: IMarks = [];\r\n  currentReservation: Record<string, string | number> = {};\r\n  select = { value: { label: '', value: null }, values: [] };\r\n  bookingItems: IBookingItems;\r\n  hiddenMarksTypes: MarkItemLogicType[] = [];\r\n  centeredItemId: number;\r\n  reservations: Record<string, Array<any>> = {\r\n    success: [],\r\n    errors: [],\r\n  };\r\n  shortDateTimeFormat =\r\n    this._measurements.getMeasurementByName('shortDateTime');\r\n  currentWorkplace$ = new BehaviorSubject<Record<string, any>>(null);\r\n  @MarkForCheck\r\n  mapHeight: number = 0;\r\n  resize$: Observable<any> = fromEvent(window, 'resize');\r\n  nornikAplana = false;\r\n  hiddenControls = [];\r\n\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n\r\n  @ViewChild('modalTitleTpl') modalTitleTpl: TemplateRef<any>;\r\n  @ViewChild('modalContentTpl') modalContentTpl: TemplateRef<any>;\r\n  @ViewChild('reservationModalTpl') reservationModalTpl: TemplateRef<any>;\r\n  @ViewChild('popupTpl') popupTpl: TemplateRef<any>;\r\n  toggleAreasVisible(): void {\r\n    this.areasVisible = !this.areasVisible;\r\n  }\r\n\r\n  constructor(\r\n    private _service: FloorService,\r\n    private _cdr: ChangeDetectorRef,\r\n    private _modal: NzModalService,\r\n    private _translatePipe: TranslatePipe,\r\n    private _measurements: MeasurementsService,\r\n    private _route: ActivatedRoute,\r\n    private _config: ConfigService\r\n  ) {\r\n    this.nornikAplana = this._config.get<string>('nornikAplana') === 'true';\r\n    if (this._route.snapshot.params.type === 'appointment') {\r\n      this.hiddenControls.push('Users');\r\n    }\r\n    this.sub = this._service.floors$.subscribe(\r\n      ({ currentFloor, floorsList, currentBuild }) => {\r\n        this.floorsList = floorsList;\r\n        this.currentFloor = currentFloor;\r\n        this.currentBuild = currentBuild;\r\n        this.select = {\r\n          value: { label: currentFloor.name, value: currentFloor },\r\n          values: this.floorsList.map((floor) => ({\r\n            label: floor.name,\r\n            value: floor,\r\n          })),\r\n        };\r\n        this._cdr.markForCheck();\r\n      }\r\n    );\r\n    this.sub = this._service.floorImage$.subscribe(\r\n      ({ image, imageSize, areas }) => {\r\n        this.imageSize = imageSize;\r\n        this.areas = areas;\r\n        this.image = image;\r\n        this._cdr.markForCheck();\r\n      }\r\n    );\r\n    this.sub = this._service.mapMarks$.subscribe((marks) => {\r\n      this.marks = marks.map((mark) => ({\r\n        ...mark,\r\n        popup: this.popupTpl,\r\n        onClick: () => {\r\n          this.currentWorkplace$.next(mark.relativePlace);\r\n          this.activeMarkIndex = this.bookingItems.findIndex(\r\n            (i) => i.id === mark.id\r\n          );\r\n          this._cdr.markForCheck();\r\n        },\r\n      }));\r\n      this._cdr.markForCheck();\r\n    });\r\n    this.sub = this._service.notReservWorkplaces$.subscribe((places) => {\r\n      this.bookingItems = places\r\n        .filter(\r\n          (place) =>\r\n            (this.nornikAplana && !place.isEwsReadOnly) || !this.nornikAplana\r\n        )\r\n        .map((place) => ({\r\n          id: place.id,\r\n          name: place.name,\r\n          tags: place.tags,\r\n          label: `Этаж ${this.currentFloor.floorNumber}`,\r\n          actions: [this.getAction(place)],\r\n        }));\r\n    });\r\n    this.sub = this.resize$.pipe(debounceTime(500)).subscribe((_e) => {\r\n      this.setMapHeight();\r\n    });\r\n    this.sub = this._service.reservations$.subscribe((reservs) => {\r\n      this.allReservations = reservs;\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setMapHeight();\r\n    const workplaceId = this._route.snapshot.queryParams.workplaceId;\r\n    if (workplaceId) {\r\n      this.centerPlace(workplaceId);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  get filterDates$(): Observable<Record<string, string>> {\r\n    return this._service.filterDates$;\r\n  }\r\n\r\n  get repeatFilter$(): Observable<any> {\r\n    return this._service.repeatFilter$;\r\n  }\r\n\r\n  get loading$(): Observable<boolean> {\r\n    return this._service.loading$;\r\n  }\r\n\r\n  get type(): ReservationType {\r\n    return this._route.snapshot.params.type || 'workplace';\r\n  }\r\n\r\n  get emptyText(): string {\r\n    switch (this.type) {\r\n      case 'parking':\r\n        return 'No match parkings';\r\n      case 'appointment':\r\n        return 'No match appointments';\r\n      default:\r\n        return 'No match workplaces';\r\n    }\r\n  }\r\n\r\n  setCurrentFloor(floor): void {\r\n    this._service.changeFloor(floor.id);\r\n  }\r\n\r\n  goBuildingSelect(): void {\r\n    this._service.backToSelectBuildings();\r\n  }\r\n\r\n  changeFilters(filters): void {\r\n    this._service.setFilters(filters);\r\n  }\r\n\r\n  centerPlace(id: number): void {\r\n    this.centeredItemId = id;\r\n    this.currentWorkplace$.next(this.bookingItems.find((p) => p.id === id));\r\n  }\r\n  get height(): string {\r\n    return this.mapHeight + 'px';\r\n  }\r\n\r\n  reservationPlace(place): void {\r\n    this.currentReservation.buildName = this.currentBuild.name;\r\n    this.currentReservation.placeName = place.name;\r\n    this.currentReservation.floorNumber = this.currentFloor.floorNumber;\r\n    let loading = false;\r\n    this._modal.create({\r\n      nzTitle: this.modalTitleTpl,\r\n      nzContent: this.modalContentTpl,\r\n      nzFooter: [\r\n        {\r\n          label: 'Отмена',\r\n          onClick: () => {\r\n            this._modal.closeAll();\r\n          },\r\n        },\r\n        {\r\n          label: 'Подтверждаю',\r\n          type: 'primary',\r\n          loading,\r\n          onClick: () => {\r\n            loading = true;\r\n            this._service\r\n              .reservationPlace(place.id)\r\n              .then(({ data, dates, filters, error }) => {\r\n                loading = false;\r\n                this._modal.closeAll();\r\n                if (!data) {\r\n                  this._modal.error({\r\n                    nzTitle: 'Не удалось забронировать',\r\n                    nzContent: 'Проверьте дату и время начала периода',\r\n                  });\r\n                  return;\r\n                }\r\n                const main = data.find((r) => r.meta.recordCode === 'main');\r\n                if (data.length === 1) {\r\n                  if (main.meta.isOk) {\r\n                    this._modal.success({\r\n                      nzTitle: 'Успешно забронировано',\r\n                      nzContent: main.meta.message,\r\n                    });\r\n                  } else {\r\n                    this._modal.error({\r\n                      nzTitle: 'Не удалось забронировать',\r\n                      nzContent: main.meta.message,\r\n                    });\r\n                  }\r\n                } else {\r\n                  this.reservations.errors = [];\r\n                  if (main.meta.isOk) {\r\n                    this.reservations.success = [\r\n                      main.meta.message || place.name,\r\n                    ];\r\n                  } else {\r\n                    const successReservation = data.find((r) => r.meta.isOk);\r\n                    if (successReservation) {\r\n                      this.reservations.success = [\r\n                        successReservation.meta.message || place.name,\r\n                      ];\r\n                    }\r\n                    this.reservations.errors = [\r\n                      {\r\n                        dates: [filters.dateTimeFrom, filters.dateTimeTo],\r\n                        message:\r\n                          main.meta.message || 'Не удалось забронировать',\r\n                      },\r\n                    ];\r\n                  }\r\n\r\n                  this.reservations.errors = [\r\n                    ...this.reservations.errors,\r\n                    ...data\r\n                      .filter(\r\n                        (r) => !r.meta.isOk && r.meta.recordCode !== 'main'\r\n                      )\r\n                      .map((r) => ({\r\n                        dates: dates[r.meta.recordCode],\r\n                        message: r.meta.message || 'Не удалось забронировать',\r\n                      })),\r\n                  ];\r\n                  this._modal.create({\r\n                    nzTitle: 'Информация о бронирование',\r\n                    nzContent: this.reservationModalTpl,\r\n                    nzFooter: [\r\n                      {\r\n                        label: 'Ок',\r\n                        type: 'primary',\r\n                        onClick: () => {\r\n                          this._modal.closeAll();\r\n                        },\r\n                      },\r\n                    ],\r\n                  });\r\n                }\r\n                this._service.reloadReservations();\r\n              });\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  getAction(place: IWorkplace): IBookingItemAction {\r\n    return {\r\n      id: place.id,\r\n      title:\r\n        this._translatePipe.transform(\r\n          `${this._route.snapshot.params.type}-reservation`\r\n        ) || 'Забронировать место',\r\n      type: 'primary',\r\n      handler: () => {\r\n        this.handleReservation(place);\r\n      },\r\n    };\r\n  }\r\n  setMapHeight(): void {\r\n    const body = document.querySelector('body').offsetHeight;\r\n    this.mapHeight = body - HEIGHT_EXCEPT_MAP;\r\n  }\r\n\r\n  getDays(days: number[]): string {\r\n    return days\r\n      .map((day) => this._translatePipe.transform(`Days.${day}`))\r\n      .join(', ');\r\n  }\r\n\r\n  handleReservation(_place = null): void {\r\n    const place = _place ? _place : this.currentWorkplace$.getValue();\r\n    if (place.labelIdPermanentAssignment > 0) {\r\n      this._modal.create({\r\n        nzTitle: 'Информация о бронирование',\r\n        nzContent:\r\n          'Это место закреплено за другим пользователем, Вы уверены, что хотите его забронировать?',\r\n        nzFooter: [\r\n          {\r\n            label: 'Отмена',\r\n            onClick: () => {\r\n              this._modal.closeAll();\r\n            },\r\n          },\r\n          {\r\n            label: 'Ок',\r\n            type: 'primary',\r\n            onClick: () => {\r\n              this._modal.closeAll();\r\n              this.onReservation(place);\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      this.onReservation(place);\r\n    }\r\n  }\r\n\r\n  onReservation(place) {\r\n    if (\r\n      this.currentFloor.workplaceReservationSocialDistanceCheck ===\r\n      'CONFIRMATION'\r\n    ) {\r\n      const distanceCheck = checkReservedNeighbors(place, this.allReservations);\r\n      if (distanceCheck) {\r\n        this._modal.confirm(\r\n          getDistanceCheckConfirmModal(() => {\r\n            this.reservationPlace(place);\r\n          })\r\n        );\r\n        return;\r\n      }\r\n    }\r\n    this.reservationPlace(place);\r\n  }\r\n\r\n  onAreaVisibilityChange(visible: boolean) {\r\n    this.areasVisible = visible;\r\n  }\r\n\r\n  onHiddenMarksChange(hiddenMarksTypes: MarkItemLogicType[]) {\r\n    this.hiddenMarksTypes = hiddenMarksTypes;\r\n  }\r\n}\r\n","<section class=\"workspace\">\r\n  <div class=\"workspace-wrapper\">\r\n    <ng-container>\r\n      <div>\r\n        <div class=\"workspace__top-controls\">\r\n          <a\r\n            class=\"workspace__top-controls-link\"\r\n            nz-button\r\n            nzType=\"link\"\r\n            (click)=\"goBuildingSelect()\"\r\n            >{{ \"Reservations.Back to building selection\" | translate }}</a\r\n          >\r\n          <app-dropdown-select\r\n            class=\"workspace__top-controls-dropdown-select\"\r\n            [values]=\"select.values\"\r\n            [value]=\"select.value\"\r\n            (valueChange)=\"setCurrentFloor($event.value)\"\r\n          ></app-dropdown-select>\r\n        </div>\r\n        <app-map\r\n          class=\"workspace__map\"\r\n          [img]=\"image\"\r\n          [marks]=\"marks\"\r\n          [size]=\"imageSize\"\r\n          [height]=\"mapHeight\"\r\n          [hiddenMarksTypes]=\"hiddenMarksTypes\"\r\n          [hiddenControls]=\"hiddenControls\"\r\n          [centeredMarkId]=\"centeredItemId\"\r\n          [loading]=\"loading$ | async\"\r\n          [areas]=\"areas\"\r\n          [areasVisible]=\"areasVisible\"\r\n          (hiddenMarksChange)=\"onHiddenMarksChange($event)\"\r\n          (areaVisibilityChange)=\"onAreaVisibilityChange($event)\"\r\n        >\r\n        </app-map>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <div appScroll class=\"workspace__actions\">\r\n      <app-book-list\r\n        [emptyText]=\"emptyText\"\r\n        [items]=\"bookingItems\"\r\n        [activeIndex]=\"activeMarkIndex\"\r\n        (activeItemId)=\"centerPlace($event)\"\r\n      >\r\n      </app-book-list>\r\n    </div>\r\n    <div\r\n      app-create-filters\r\n      [type]=\"type\"\r\n      (valuesChange)=\"changeFilters($event)\"\r\n      class=\"app-list__filters workspace__actions workspace__filters\"\r\n    ></div>\r\n  </div>\r\n</section>\r\n\r\n<ng-template #modalTitleTpl>\r\n  <span class=\"modal-title\">\r\n    <i nz-icon nzType=\"check-circle\"></i>Подтверждение брони\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #modalContentTpl>\r\n  <div class=\"modal-content\">\r\n    <span class=\"modal-content__name\">Здание: </span>\r\n    <span>БЦ {{ currentReservation.buildName }}</span>\r\n  </div>\r\n  <div class=\"modal-content\">\r\n    <span class=\"modal-content__name\">Место: </span>\r\n    <span>{{ currentReservation.placeName }}</span>\r\n  </div>\r\n  <div class=\"modal-content\">\r\n    <span class=\"modal-content__name\">Этаж: </span>\r\n    <span>{{ currentReservation.floorNumber }}</span>\r\n  </div>\r\n  <div class=\"modal-content\" *ngIf=\"filterDates$ | async as dates\">\r\n    <span class=\"modal-content__name\">Дата: </span>\r\n    <span>с {{ dates.dateTimeFrom }} по {{ dates.dateTimeTo }}</span>\r\n  </div>\r\n  <div class=\"modal-content\" *ngIf=\"repeatFilter$ | async as repeat\">\r\n    <span class=\"modal-content__name\">Повторять: </span>\r\n    <span>кажд. {{ repeat.weekNum }} нед. {{ getDays(repeat.days) }}</span>\r\n  </div>\r\n  <div class=\"modal-content\" *ngIf=\"repeatFilter$ | async as repeat\">\r\n    <span class=\"modal-content__name\">Завершение повторений: </span>\r\n    <span>{{ repeat.end }}</span>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #reservationModalTpl>\r\n  <div *ngIf=\"reservations.success.length\" class=\"mb-25\">\r\n    <div>\r\n      <span class=\"modal-title\">\r\n        <i nz-icon nzType=\"check-circle\"></i>Успешно забронировано\r\n      </span>\r\n    </div>\r\n    <div class=\"modal-content\">\r\n      <span class=\"modal-content__name\">Бронь: </span>\r\n      <span>{{ reservations.success[0] }}</span>\r\n    </div>\r\n    <div class=\"modal-content\" *ngIf=\"repeatFilter$ | async as repeat\">\r\n      <span class=\"modal-content__name\">Повторять: </span>\r\n      <span>кажд. {{ repeat.weekNum }} нед. {{ getDays(repeat.days) }}</span>\r\n    </div>\r\n    <div class=\"modal-content\" *ngIf=\"repeatFilter$ | async as repeat\">\r\n      <span class=\"modal-content__name\">Завершение повторений: </span>\r\n      <span>{{ repeat.end }}</span>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"reservations.errors.length\">\r\n    <div>\r\n      <span class=\"modal-title\">\r\n        <i nz-icon nzType=\"close-circle\" class=\"error\"></i>Не удалось\r\n        забронировать\r\n      </span>\r\n    </div>\r\n    <div class=\"modal-content\" *ngFor=\"let err of reservations.errors\">\r\n      <span class=\"modal-content__name\"\r\n        >{{ err.dates[0] | date: shortDateTimeFormat }} -\r\n        {{ err.dates[1] | date: shortDateTimeFormat }}:\r\n      </span>\r\n      <span>{{ err.message }}</span>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #popupTpl>\r\n  <app-workplace-card\r\n    *ngIf=\"currentWorkplace$ | async as place\"\r\n    [disabled]=\"place?.disabled\"\r\n    [readOnly]=\"place?.isEwsReadOnly\"\r\n    [calendarLink]=\"'reservations/appointment/workplace/' + place?.id\"\r\n    [showPermanentAssignment]=\"true\"\r\n    [type]=\"type\"\r\n    [workplaceId]=\"place?.id\"\r\n    (reservation)=\"handleReservation()\"\r\n  >\r\n  </app-workplace-card>\r\n</ng-template>\r\n","import { ReservationType } from '@shared/http/models/meta.model';\r\nimport { IMarkItem, IMarks } from '@base/map/map-mark/map-mark.model';\r\nimport { IWorkplace } from '@shared/http/models/database.model';\r\n\r\nexport function mapPlacesToMArks(places: any[], images: unknown[], type: ReservationType): IMarks {\r\n  return places.map(place => mapPlaceToMark(place, images, type));\r\n}\r\n\r\nexport function mapPlaceToMark(place: any, images: unknown[], type: ReservationType): IMarkItem {\r\n  const { id, disabled, name, x, y, width, height }: IWorkplace = place;\r\n  const mark: IMarkItem = {\r\n    id,\r\n    disabled,\r\n    img: images[place.id],\r\n    relativePlace: place,\r\n    tooltip: name,\r\n    coordinates: { x, y, size: place.width },\r\n    size: { height, width }\r\n  };\r\n\r\n  if (type === 'appointment') {\r\n    mark.logicType = 'Room';\r\n    mark.coordinates.size = 120;\r\n  }\r\n\r\n  return mark;\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, HostListener, OnDestroy, TemplateRef, ViewChild, } from '@angular/core';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { IMarks } from '@base/map/map-mark/map-mark.model';\r\nimport { IOpenStreetMapMark, IOpenStreetMapOptions, } from '@base/open-street-map/open-street-map.model';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { CreateService } from '@presentation/reservations/reservation-create/components/create/create.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { OSM_OPTIONS } from '@presentation/reservations/reservation-create/components/create/create.utils';\r\nimport { Debounce } from '@core/decorators/debounce.decorator';\r\nimport { Subscribe } from '@core/decorators/subscribe.decorator';\r\nimport { DictionaryName } from '@src/app/shared/dictionaries/dictionaries.constants';\r\n\r\nconst HEIGHT_EXCEPT_MAP: number = 184;\r\n\r\n@Component({\r\n  selector: 'app-reservations-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: [ './create.component.less' ],\r\n  providers: [ CreateService ],\r\n})\r\nexport class CreateComponent implements AfterViewInit, OnDestroy {\r\n  activeMarkIndex = null;\r\n  buildingList: IBookingItems;\r\n  marks: IMarks;\r\n  osmOptions: IOpenStreetMapOptions = OSM_OPTIONS;\r\n  osmMarks: IOpenStreetMapMark[] = [];\r\n\r\n  @Subscribe<boolean>()\r\n  loading = this._service.loading$;\r\n\r\n  @Subscribe<DictionaryName>()\r\n  placeType = this._service.placeType$;\r\n\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n\r\n  @MarkForCheck\r\n  mapHeight: number = 0;\r\n\r\n  @ViewChild('bookListContentTpl')\r\n  bookListContentTpl: TemplateRef<any>;\r\n\r\n  constructor(\r\n    private _service: CreateService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  handleMarkClicked(id: number): void {\r\n    this.activeMarkIndex = this.buildingList.findIndex((i) => i.id === id);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setMapHeight();\r\n    this.sub = this._service\r\n      .getBuildingsList1$(this.bookListContentTpl)\r\n      .subscribe(buildingsList => {\r\n        this.buildingList = buildingsList;\r\n\r\n        this.osmMarks = buildingsList\r\n          .filter((building) => building.coordinates)\r\n          .map(({ id, coordinates: { x, y } }) => ({ id, x, y }));\r\n\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  @HostListener('window:resize', [ '$event' ])\r\n  @Debounce(250)\r\n  private setMapHeight(): void {\r\n    const body = document.querySelector('body').offsetHeight;\r\n    this.mapHeight = body - HEIGHT_EXCEPT_MAP;\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<section class=\"workspace\">\r\n  <div class=\"workspace-wrapper\" [style.height.px]=\"mapHeight\">\r\n    <div class=\"workspace__center\">\r\n      <app-open-street-map *ngIf=\"buildingList?.length\"\r\n                           class=\"workspace__map\"\r\n                           [height]=\"mapHeight\"\r\n                           [style.height.px]=\"mapHeight\"\r\n                           [options]=\"osmOptions\"\r\n                           [marks]=\"osmMarks\"\r\n                           (markClicked)=\"handleMarkClicked($event)\">\r\n      </app-open-street-map>\r\n    </div>\r\n\r\n    <div appScroll class=\"workspace__actions\">\r\n      <nz-spin [nzSpinning]=\"loading\">\r\n        <app-book-list [items]=\"buildingList\"\r\n                       [activeIndex]=\"activeMarkIndex\">\r\n        </app-book-list>\r\n      </nz-spin>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<ng-template #bookListContentTpl let-places>\r\n  <div>\r\n    <ng-container [ngSwitch]=\"placeType\">\r\n      <ng-container *ngSwitchCase=\"'rooms'\">\r\n        {{'Rooms' | dictionary | translate}}\r\n      </ng-container>\r\n\r\n      <ng-container *ngSwitchCase=\"'parkingLots'\">\r\n        {{'Parkings' | dictionary | translate}}\r\n      </ng-container>\r\n\r\n      <ng-container *ngSwitchDefault>\r\n        {{'Offices.Workplaces' | dictionary | translate}}\r\n      </ng-container>\r\n    </ng-container>:\r\n    <span class=\"free\">{{ places.free }}</span> |\r\n    <span class=\"busy\">{{ places.busy }}</span> |\r\n    {{ places.freePercents }}%\r\n  </div>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Resolve,\r\n  ActivatedRouteSnapshot\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitleCreateResolver implements Resolve<string> {\r\n  constructor(private _translateService: TranslateService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<string> {\r\n    const { type } = route.params;\r\n    return this._translateService.get(type + '-reservation');\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IFilterValues } from '@base/filters/filters.model';\r\nimport { FilterComponent } from '@base/filters/filters/filter.component';\r\nimport { CreateFilterService } from './create-filter.service';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\n\r\n@Component({\r\n  selector: 'app-create-filters, [app-create-filters]',\r\n  templateUrl: './create-filter.component.html',\r\n  styleUrls: [ './create-filter.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    class: 'app-reservations-create-filter',\r\n  },\r\n  providers: [ CreateFilterService ]\r\n})\r\nexport class CreateFilterComponent extends FilterComponent implements OnInit {\r\n  public type: ReservationType;\r\n  public formGroup: FormGroup = this.$service.formGroup;\r\n\r\n  @Input('type')\r\n  public set inputType(type: ReservationType) {\r\n    if (!type) return;\r\n\r\n    this.$service.createFormGroup(type);\r\n    this.type = type;\r\n  }\r\n\r\n  @Input('values')\r\n  public set inputValues(values: IFilterValues) {\r\n    if (!values) return;\r\n    this.formGroup.patchValue(values, { emitEvent: false });\r\n  }\r\n\r\n  constructor(\r\n    private $service: CreateFilterService,\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.$service.clear(this.formGroup);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n  }\r\n}\r\n","<div nz-row\r\n     [nzGutter]=\"12\"\r\n     class=\"app-list-filters__header\"\r\n>\r\n  <div nz-col [nzXs]=\"8\"\r\n       [nzLg]=\"0\"\r\n       class=\"app-list-filters__header-action\"\r\n  >\r\n    <button nz-button\r\n            [nzType]=\"'link'\"\r\n    >\r\n      {{'Close' | dictionary | translate}}\r\n    </button>\r\n  </div >\r\n\r\n  <h3 nz-col\r\n      [nzXs]=\"8\"\r\n      [nzLg]=\"12\"\r\n      class=\"app-list-filters__header-title\"\r\n  >\r\n    {{'Filters' | dictionary | translate}}\r\n  </h3>\r\n\r\n  <div nz-col\r\n       [nzXs]=\"8\"\r\n       [nzLg]=\"12\"\r\n       class=\"app-list-filters__header-action _right\"\r\n  >\r\n    <button nz-button\r\n            [nzType]=\"'link'\"\r\n            (click)=\"clear()\"\r\n    >\r\n      {{'Clear' | dictionary | translate}}\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<form nz-form\r\n      [nzLayout]=\"'vertical'\"\r\n      [formGroup]=\"formGroup\"\r\n      [ngSwitch]=\"type\"\r\n      class=\"app-list-filters__form\"\r\n>\r\n  <perfect-scrollbar [config]=\"{suppressScrollX: true}\"\r\n                     class=\"app-list-filters__form-scroll\"\r\n  >\r\n    <div *ngSwitchCase=\"'appointment'\"\r\n         app-create-filters-appointment\r\n         [tagObjectType]=\"'ROOM'\"\r\n         [formGroup]=\"formGroup\"\r\n    >\r\n    </div>\r\n    <div *ngSwitchCase=\"'parking'\"\r\n         app-create-filters-workplace\r\n         [tagObjectType]=\"'PARKING_LOT'\"\r\n         [formGroup]=\"formGroup\"\r\n    >\r\n    </div>\r\n    <div *ngSwitchDefault\r\n         app-create-filters-workplace\r\n         [tagObjectType]=\"'WORKPLACE'\"\r\n         [formGroup]=\"formGroup\"\r\n    >\r\n    </div>\r\n  </perfect-scrollbar>\r\n</form>\r\n\r\n","import { IOpenStreetMapOptions } from '@base/open-street-map/open-street-map.model';\r\nimport { IBookingItemAction } from '@base/booking-list/booking-item/booking-item.model';\r\nimport { IBookingItems } from '@base/booking-list/booking-list.model';\r\nimport { IDictionary, IDictionaryBuildings, IDictionaryBuildingsItem, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { LiveDataKey } from '@shared/http/models/live-data.model';\r\nimport { BuildingsListData } from '@presentation/reservations/reservation-create/models';\r\nimport { TemplateRef } from '@angular/core';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\n\r\nexport const OSM_OPTIONS: IOpenStreetMapOptions = {\r\n  x: 56.8587214,\r\n  y: 35.9175965,\r\n  zoom: 6,\r\n};\r\n\r\nexport function getBusyType(placeType: DictionaryName | string): LiveDataKey | null {\r\n  switch (placeType) {\r\n    case 'rooms':\r\n      return 'busyRooms';\r\n\r\n    case 'workplaces':\r\n      return 'busyWorkplaces';\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function mapBuildingListData(\r\n  data: BuildingsListData,\r\n  content: TemplateRef<unknown>,\r\n  handler: (id) => void\r\n): IBookingItems {\r\n  const buildings: IDictionaryBuildings = data[0];\r\n\r\n  return buildings.map((building, index) => ({\r\n      ...building,\r\n      content,\r\n      coordinates: {\r\n        x: building.latitude,\r\n        y: building.longitude\r\n      },\r\n      actions: [ getBookingItemAction(building.id, handler.bind(null, building.id)) ],\r\n      contentContext: mapBusyLiveData(building, data[1], data[2], data[3])\r\n    })\r\n  );\r\n}\r\n\r\nexport function getBookingItemAction(id: number, handler: () => void): IBookingItemAction {\r\n  return {\r\n    id,\r\n    title: 'SelectOffice',\r\n    type: 'primary',\r\n    handler\r\n  };\r\n}\r\n\r\nexport function mapBuildingsToBookingItems(buildings: IDictionaryBuildings, content: TemplateRef<unknown>, handler: (id: number) => void): IBookingItems {\r\n  return buildings.map((building, index) => ({\r\n      ...building,\r\n      content,\r\n      coordinates: {\r\n        x: building.latitude,\r\n        y: building.longitude\r\n      },\r\n      actions: [ getBookingItemAction(building.id, handler.bind(null, building.id)) ],\r\n    })\r\n  );\r\n}\r\n\r\nexport function mapBusyLiveData(\r\n  building: IDictionaryBuildingsItem,\r\n  floors: IDictionaryFloorMaps,\r\n  places: IDictionary,\r\n  busyData: Record<string, any>\r\n): Record<string, any> {\r\n  const floorsIds = floors.filter(f => f.buildingId === building.id).map(f => f.id);\r\n  const buildPlaces = places.filter(w => floorsIds.includes(w.floorMapId));\r\n  const buildIds = buildPlaces.map(build => build.id);\r\n  const busyWorkplaces = busyData.map(w => w.id) || [];\r\n  const busyNum = new Set(busyWorkplaces.filter(id => buildIds.includes(id))).size;\r\n\r\n  return {\r\n    $implicit: {\r\n      free: buildPlaces.length - busyNum,\r\n      busy: busyNum,\r\n      freePercents: Math.trunc(100 * (buildPlaces.length - busyNum) / buildPlaces.length)\r\n    }\r\n  };\r\n}\r\n","import { IDictionary, IDictionaryItem } from '@shared/dictionaries/dictionaries.model';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\n\r\nconst listFilterFields: Record<ReservationType, Record<string, any>> = {\r\n  appointment: {\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null,\r\n    tags: [],\r\n    repeat: null,\r\n    seatCount: 1,\r\n  },\r\n  locker: {\r\n    floorMapId: [],\r\n    statuses: [],\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  parking: {\r\n    floorMapId: [],\r\n    statuses: [],\r\n    tags: [],\r\n    repeat: null,\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null\r\n  },\r\n  workplace: {\r\n    dateTimeFrom: null,\r\n    dateTimeTo: null,\r\n    tags: [],\r\n    repeat: null,\r\n    types: ['DEFAULT', 'COMPLEMENTARY'],\r\n  }\r\n};\r\n\r\nexport function getListFilterFieldsByType(type: ReservationType): Record<string, any> | null {\r\n  return listFilterFields[type] || null;\r\n}\r\n\r\nexport function mapCheckBoxOptions<T extends IDictionaryItem = IDictionaryItem>(\r\n  items: IDictionary<T>,\r\n  valueField: keyof T,\r\n  labelField: keyof T,\r\n  control: FormControl\r\n): IFilterCheckBoxOptions {\r\n  return items.map((item: T) => {\r\n    const value: any = item[valueField];\r\n    const label: any = item[labelField];\r\n    const checked: boolean = Boolean(control?.value?.includes?.(value));\r\n\r\n    return { ...item, label, value, checked };\r\n  });\r\n}\r\n"],"sourceRoot":"webpack:///"}