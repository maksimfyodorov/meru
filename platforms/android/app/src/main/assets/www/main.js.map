{"version":3,"sources":["./src/app/base/reservation-by-qr/reservation-by-qr.service.ts","./src/app/shared/http/services/live-data-api.service.ts","./src/app/base/filters/filters.uttils.ts","./src/app/core/enums/auth-key.enum.ts","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/core/services/notifications.service.ts","./src/app/shared/images/images.module.ts","./src/app/layout/layout-shared.module.ts","./src/app/layout/navigation/navigation.service.ts","./src/app/base/card/card.model.ts","./src/app/shared/http/utils/constants.util.ts","./src/app/shared/dictionaries/dictionaries.service.ts","./src/app/shared/dictionaries/services/floor-maps.service.ts","./src/app/core/services/local-storage.service.ts","./src/app/layout/header/header.utils.ts","./src/app/core/pipes/map.pipe.ts","./src/app/base/reservation-by-qr/reservation-by-qr.module.ts","./src/app/shared/dictionaries/constants/measurements.constant.ts","./src/app/base/renderer/components/status/status.component.ts","./src/app/base/renderer/components/status/status.component.html","./src/app/shared/dictionaries/dictionaries.constants.ts","./src/app/presentation/team/team-profile/team-profile.component.ts","./src/app/presentation/team/team-profile/team-profile.component.html","./src/app/shared/http/utils/error-code.util.ts","./src/app/shared/http/interceptors/auth.interceptor.ts","./src/app/base/title/title.component.ts","./src/app/base/title/title.component.html","./src/app/presentation/offices/offices-map/offices-map.utils.ts","./src/app/shared/dictionaries/dictionaries.indexed-db.ts","./src/app/layout/layout/layout.component.ts","./src/app/layout/layout/layout.component.html","./src/app/core/services/dictionary.service.ts","./src/app/layout/header/components/header-search/header-search.component.ts","./src/app/layout/header/components/header-search/header-search.component.html","./src/app/shared/images/pipes/full-image-url.pipe.ts","./src/app/base/filters/filters.module.ts","./src/theme/ts/color-aslias.ts","./src/app/shared/images/pipes/image-blob.pipe.ts","./src/app/core/decorators/complete.decorator.ts","./src/app/shared/global-search/global-search.service.ts","./src/app/shared/images/services/image-blob.service.ts","./src/environments/environment.ts","./src/app/layout/header/components/header-locale/header-locale.service.ts","./src/app/core/utils/instanceOf.utilI.ts","./src/app/core/services/navigation.service.ts","./src/app/core/pipes/dictionary.pipe.ts","./src/app/core/antd/antd.module.ts","./src/app/core/pipes/localize.pipe.ts","./src/app/shared/global-search/global-search.module.ts","./src/app/layout/header/components/header-locale/header-locale.component.ts","./src/app/layout/header/components/header-locale/header-locale.component.html","./src/app/app.service.ts","./src/app/base/filters/filter-checkbox-group/filter-checkbox-group.component.ts","./src/app/base/filters/filter-checkbox-group/filter-checkbox-group.component.html","./src/app/core/utils/date.utils.ts","./src/app/shared/dictionaries/services/measurements.service.ts","./src/app/core/pipes/object-first-key.pipe.ts","./src/app/shared/http/interceptors/process-response.interceptor.ts","./src/app/base/reservation-by-qr/reservation-by-qr.util.ts","./src/app/base/renderer/components/map/map.component.ts","./src/app/base/renderer/components/map/map.component.html","./src/app/core/services/http-helper.service.ts","./src/app/shared/translation/translation.module.ts","./src/app/base/card/card.service.ts","./src/app/base/filters/filter-checkbox/filter-checkbox.component.ts","./src/app/base/filters/filter-checkbox/filter-checkbox.component.html","./src/app/layout/navigation-mobile/navigation-mobile.component.ts","./src/app/layout/navigation-mobile/navigation-mobile.component.html","./src/app/shared/settings/settings.module.ts","./src/app/core/pipes/string.pipe.ts","./src/app/core/decorators/subscribe.decorator.ts","./src/app/shared/settings/settings.utils.ts","./src/app/core/decorators/debounce.decorator.ts","./src/app/core/directives/perfect-scroll.directive.ts","./src/app/shared/dictionaries/services/dictionary.service.ts","./src/app/core/utils/sort.util.ts","./src/app/core/pipes/object-entries.pipe.ts","./src/app/base/filters/filter-date-time/filter-date-time.component.ts","./src/app/base/filters/filter-date-time/filter-date-time.component.html","./src/app/layout/layout/layout.module.ts","./src/app/core/models/url.model.ts","./src/app/shared/shared.module.ts","./src/app/shared/http/services/dpa-api.service.ts","./src/app/core/models/user.model.ts","./src/app/shared/http/utils/common.util.ts","./src/app/core/utils/http.util.ts","./src/app/layout/header/components/header-notifications/header-notifications.component.ts","./src/app/layout/header/components/header-notifications/header-notifications.component.html","./src/app/layout/navigation-mobile/navigation-mobile.module.ts","./src/app/shared/http/services/log-api.service.ts","./src/app/shared/http/interceptors/cache-response.interceptor.ts","./src/app/shared/settings/settings.constants.ts","./src/app/layout/header/components/header-profile/header-profile.component.ts","./src/app/layout/header/components/header-profile/header-profile.component.html","./src/app/presentation/presentation.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/core.tokens.ts","./src/app/shared/dictionaries/dictionaries.module.ts","./src/app/base/card/card-form-control.directive.ts","./src/app/layout/navigation/navigation.api.ts","./src/app/base/breadcrumb/breadcrumb.module.ts","./src/app/composite/user-card/user-card.service.ts","./src/app/composite/user-card/user-card.module.ts","./src/app/shared/indexed-db/indexed-db.utils.ts","./src/app/base/title/title.module.ts","./src/app/base/filters/filter-date/filter-date.component.ts","./src/app/base/filters/filter-date/filter-date.component.html","./src/app/shared/http/http.constants.ts","./src/app/layout/loading-dictionaries/loading-dictionaries.component.ts","./src/app/layout/loading-dictionaries/loading-dictionaries.component.html","./src/app/core/services/url.service.ts","./src/app/app.module.ts","./src/app/layout/header/components/header-notifications/header-notifications-item/header-notifications-item.component.ts","./src/app/layout/header/components/header-notifications/header-notifications-item/header-notifications-item.component.html","./src/app/shared/indexed-db/indexed-db.config.ts","./src/app/base/filters/utils/filter-date.utils.ts","./src/app/core/services/message.service.ts","./src/app/base/renderer/renderer.component.ts","./src/app/base/renderer/renderer.component.html","./src/app/layout/header/header.module.ts","./src/app/core/services/http.service.ts","./src/app/base/filters/filters/filter.component.ts","./src/app/core/pipes/safe-url.pipe.ts","./src/app/core/utils/decorators.utils.ts","./src/app/layout/navigation/navigation.utils.ts","./src/app/core/utils/subcriptions.util.ts","./src/app/core/services/global-loader.service.ts","./src/app/base/breadcrumb/breadcrumb.component.ts","./src/app/base/breadcrumb/breadcrumb.component.html","./src/app/base/renderer/components/status/status.service.ts","./src/app/core/pipes/highlight.pipe.ts","./src/app/core/utils/common.util.ts","./src/app/core/services/user.service.ts","./src/app/presentation/team/team-profile/team-profile.service.ts","./src/app/shared/dictionaries/services/statuses.service.ts","./src/app/shared/indexed-db/indexed-db.service.ts","./src/app/presentation/auth/auth.service.ts","./src/app/core/pipes/delay.pipe.ts","./src/app/layout/navigation/navigation.module.ts","./src/app/base/card/card.component.ts","./src/app/base/card/card.component.html","./src/app/core/services/user-offices.service.ts","./src/app/shared/http/services/reservations-api.service.ts","./src/app/core/decorators/subscriptions.decorator.ts","./src/app/presentation/auth/auth.guard.ts","./src/app/core/services/config.service.ts","./src/app/core/directives/blur.directive.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/shared/settings/settings.service.ts","./src/app/base/card/card.module.ts","./src/app/core/utils/animations.util.ts","./src/app/core/services/messages.service.ts","./src/app/layout/header/header.service.ts","./src/app/core/enums/tokens.enum.ts","./src/app/core/utils/dictionary.util.ts","./src/app/shared/shared.service.ts","./src/app/layout/layout-shared.service.ts","./src/app/core/pipes/filter.pipe.ts","./src/app/core/decorators/async.decorator.ts","./src/app/shared/indexed-db/indexed-db-migration.factory.ts","./src/app/core/core.module.ts","./src/app/shared/indexed-db/indexed-db.module.ts","./src/app/presentation/presentation-routing.module.ts","./src/app/core/services/localization.service.ts","./src/app/shared/dictionaries/dictionaries.utils.ts","./src/app/shared/dictionaries/constants/statuses.constant.ts","./src/app/shared/shared.dictionary.ts","./src/app/shared/http/services/meta-api.service.ts","./src/app/core/services/condition.service.ts","./src/app/layout/navigation/navigation.component.ts","./src/app/layout/navigation/navigation.component.html","./src/app/core/utils/observable.util.ts","./src/app/core/directives/condition.directive.ts","./src/app/composite/user-card/user-card.component.ts","./src/app/composite/user-card/user-card.component.html","./src/app/shared/global-search/global-search.utils.ts","./src/app/core/pipes/array.pipe.ts","./src/app/base/filters/utils/filter-date.constants.ts","./src/app/core/pipes/object.pipe.ts","./src/app/shared/dictionaries/services/dictionaries-matchers.service.ts","./src/app/base/reservation-by-qr/reservation-by-qr.component.ts","./src/app/base/reservation-by-qr/reservation-by-qr.component.html","./src/app/layout/header/components/header-search/header-search.service.ts","./src/app/layout/header/components/header-notifications/header-notifications.service.ts","./src/theme/ts/index.ts","./src/app/shared/dictionaries/services/buildings.service.ts","./src/app/shared/common/utils/reservations.util.ts","./src/app/shared/http/utils/images.const.ts","./src/app/core/pipes/pluck.pipe.ts","./src/app/shared/http/services/user-api.service.ts","./src/app/shared/http/http.module.ts","./src/main.ts","./src/app/shared/common/base/base.api.ts","./src/app/core/models/app-errorl.model.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { IHttpResponse } from '@src/app/core/models/http.model';\r\nimport { UserService } from '@src/app/core/services/user.service';\r\nimport { DictionaryName } from '@src/app/shared/dictionaries/dictionaries.constants';\r\nimport { DictionariesService } from '@src/app/shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@src/app/shared/dictionaries/services/measurements.service';\r\nimport {\r\n  IAppointment,\r\n  IFloor,\r\n  IPlace,\r\n  IWorkplaceReservation,\r\n} from '@src/app/shared/http/models/database.model';\r\nimport { ReservationType } from '@src/app/shared/http/models/meta.model';\r\nimport { ReservationsApiService } from '@src/app/shared/http/services/reservations-api.service';\r\nimport { SettingsService } from '@src/app/shared/settings/settings.service';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport {\r\n  IReservationByQr,\r\n  ReservationDateRange,\r\n  ReservationObjectType,\r\n} from './reservation-by-qr.model';\r\nimport { getInitDate, getReservationId } from './reservation-by-qr.util';\r\n\r\n@Injectable()\r\nexport class ReservationByQRService {\r\n  public constructor(\r\n    private $api: ReservationsApiService,\r\n    private $settings: SettingsService,\r\n    private $measurements: MeasurementsService,\r\n    private $dictionary: DictionariesService,\r\n    private $user: UserService,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  public reservationPlaceByType(\r\n    objectType: ReservationObjectType,\r\n    placeId: number,\r\n    dates: Date[]\r\n  ): Observable<any> {\r\n    const reservationType = this.getReservationType(objectType);\r\n    const reservations = [\r\n      this.setReservationByType(reservationType, 'main', placeId, dates),\r\n    ];\r\n\r\n    const params: Record<string, any> = {};\r\n    switch (reservationType) {\r\n      case 'appointment':\r\n        params.appointments = reservations;\r\n        break;\r\n      case 'parking':\r\n        params.reservations = reservations;\r\n        break;\r\n      default:\r\n        params.reservations = reservations;\r\n        break;\r\n    }\r\n    return this.$api\r\n      .putReservationsByType(reservationType, params)\r\n      .pipe(map((response) => response?.data));\r\n  }\r\n\r\n  public cancelReservationByType(\r\n    objectType: ReservationObjectType,\r\n    placeId: number\r\n  ): Observable<boolean> {\r\n    const reservationType = this.getReservationType(objectType);\r\n    let request: Observable<IHttpResponse<any>>;\r\n    switch (reservationType) {\r\n      case 'appointment':\r\n        request = this.$api.deleteAppointment(placeId.toString());\r\n      default:\r\n        request = this.$api.cancelReservation(\r\n          reservationType,\r\n          placeId.toString()\r\n        );\r\n    }\r\n    return request.pipe(map((response) => response.success));\r\n  }\r\n\r\n  public confirmReservationByType(\r\n    objectType: ReservationObjectType,\r\n    placeId: number\r\n  ): Observable<boolean> {\r\n    const reservationType = this.getReservationType(objectType);\r\n    let request: Observable<IHttpResponse<any>>;\r\n    switch (reservationType) {\r\n      case 'appointment':\r\n        request = this.$api.confirmAppointment(placeId.toString());\r\n      default:\r\n        request = this.$api.confirmReservation(\r\n          reservationType,\r\n          placeId.toString()\r\n        );\r\n    }\r\n    return request.pipe(map((response) => response.success));\r\n  }\r\n\r\n  getReservationType(type: ReservationObjectType): ReservationType {\r\n    switch (type) {\r\n      case 'WORKPLACE':\r\n        return 'workplace';\r\n      case 'PARKING_LOT':\r\n        return 'parking';\r\n      case 'APPOINTMENT':\r\n        return 'appointment';\r\n      default:\r\n        return 'workplace';\r\n    }\r\n  }\r\n\r\n  private setReservationByType(\r\n    type: ReservationType,\r\n    recordCode: string,\r\n    placeId: number,\r\n    dates: Date[]\r\n  ): Record<string, any> {\r\n    return {\r\n      recordCode: `${recordCode}`,\r\n      ...((type === 'workplace' && {\r\n        workplaceId: placeId,\r\n        labelId: this.$user.info.id,\r\n        dateTimeFrom: this._getApiDate(dates[0]),\r\n        dateTimeTo: this._getApiDate(dates[1]),\r\n      }) ||\r\n        {}),\r\n      ...((type === 'parking' && {\r\n        parkingLotId: placeId,\r\n        labelId: this.$user.info.id,\r\n        dateTimeFrom: this._getApiDate(dates[0]),\r\n        dateTimeTo: this._getApiDate(dates[1]),\r\n      }) ||\r\n        {}),\r\n      ...((type === 'appointment' && {\r\n        appointmentRoomsList: [placeId],\r\n        appointmentDateFrom: this._getApiDate(dates[0]),\r\n        appointmentDateTo: this._getApiDate(dates[1]),\r\n      }) ||\r\n        {}),\r\n    };\r\n  }\r\n\r\n  private _getApiDate(date: Date): string {\r\n    return this.datePipe.transform(\r\n      date,\r\n      this.$measurements.getMeasurementByName('filterDate')\r\n    );\r\n  }\r\n\r\n  public getReservationByQR(qrCode: string): Observable<IReservationByQr> {\r\n    const body: Record<string, any> = {};\r\n    body.qrCode = qrCode;\r\n    return this.$api.getQRAction(body).pipe(\r\n      switchMap((response) => {\r\n        if (response.success) {\r\n          const reservation: IReservationByQr = response.data;\r\n          if (\r\n            reservation.actionType === 'WORKPLACE_RESERVATION_ALREADY_EXISTS'\r\n          ) {\r\n            let reservedPlaceId: number = getReservationId(reservation);\r\n            let dicName: DictionaryName;\r\n            if (reservation.objectType === 'APPOINTMENT') {\r\n              dicName = 'rooms';\r\n            } else {\r\n              dicName = 'workplaces';\r\n            }\r\n\r\n            return combineLatest([\r\n              this.$dictionary.getDictionaryItemByKey<IFloor>(\r\n                'floorMaps',\r\n                reservation.objectData.floorMapId\r\n              ),\r\n              this.$dictionary.getDictionaryItemByKey<IPlace>(\r\n                dicName,\r\n                reservedPlaceId\r\n              ),\r\n            ]).pipe(\r\n              map(([floor, place]) => {\r\n                reservation.floor = floor;\r\n                reservation.objectData = place;\r\n                return reservation;\r\n              })\r\n            );\r\n          } else {\r\n            return this.$dictionary\r\n              .getDictionaryItemByKey<IFloor>(\r\n                'floorMaps',\r\n                reservation.objectData.floorMapId\r\n              )\r\n              .pipe(\r\n                map((floor) => {\r\n                  reservation.floor = floor;\r\n                  return reservation;\r\n                })\r\n              );\r\n          }\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  get reservationDateRange(): ReservationDateRange {\r\n    const minReservationDuration: number =\r\n      this.$settings.getSettingByName<number>(\r\n        'workplaceReservationDurationMinSeconds'\r\n      ) * 1000;\r\n    const workHours: number[] = [\r\n      this.$settings.getSettingByName<number>(\r\n        'workplaceReservationBeginHourDefault'\r\n      ),\r\n      this.$settings.getSettingByName<number>(\r\n        'workplaceReservationEndHourDefault'\r\n      ),\r\n    ];\r\n    const dates = getInitDate(workHours, minReservationDuration);\r\n    return {\r\n      value: dates,\r\n      format: this.$measurements.getMeasurementByName('date'),\r\n      workHours,\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BaseApi } from '@shared/common/base/base.api';\r\nimport { ILiveData, LiveData, LiveDataKey } from '@shared/http/models/live-data.model';\r\nimport { Observable } from 'rxjs';\r\nimport { isEmpty } from '@core/utils/common.util';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { map, pluck } from 'rxjs/operators';\r\nimport { UserService } from '@core/services/user.service';\r\n\r\n@Injectable()\r\nexport class LiveDataApiService extends BaseApi {\r\n  protected _liveDataUrl: string;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $user: UserService\r\n  ) {\r\n    super(injector);\r\n\r\n    this.$config\r\n      .getOne$<string>('liveDataUrl')\r\n      .subscribe((liveDataUrl) =>\r\n        this._liveDataUrl = liveDataUrl\r\n      );\r\n  }\r\n\r\n  public get<T extends LiveDataKey>(key?: T): Observable<LiveData<T>> {\r\n    const url: string = isEmpty(key) ? this._liveDataUrl : `${this._liveDataUrl}`;\r\n    const headers: Record<string, string> = {\r\n      tokenUuid: this.$user.info.tokenUUID,\r\n      deviceId: this.$user.info.deviceId,\r\n    };\r\n\r\n    return this.$http\r\n      .get<ILiveData<typeof key>>(url, {}, { headers })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        pluck('data'),\r\n        map((liveData: LiveData<typeof key>) => {\r\n          return key ? liveData?.[key] : liveData;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar/lib/perfect-scrollbar.interfaces';\r\n\r\nexport const PS_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n","export enum AuthKey {\r\n  PHONE = 'PHONE',\r\n  EMAIL = 'EMAIL',\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { HeaderService } from '@app/layout/header/header.service';\r\nimport { IImage } from '@app/layout/header/header.model';\r\nimport { INotifications } from '@app/layout/header/components/header-notifications/header-notifications.model';\r\nimport { GlobalLoaderService } from '@core/services/global-loader.service';\r\nimport { QUICK_CREATE_URLS } from '@app/layout/header/header.utils';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public logo: IImage;\r\n  public notifications: INotifications;\r\n  public quickCreateUrls: Record<string, string>[] = QUICK_CREATE_URLS;\r\n\r\n  constructor(private $service: HeaderService, public $loader: GlobalLoaderService) {\r\n    this.logo = $service.logo;\r\n    this.notifications = $service.notifications;\r\n  }\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<ng-container *ngTemplateOutlet=\"($loader.headerLoading$ | async) ? loader : content\"></ng-container>\r\n\r\n<ng-template #content>\r\n  <a class=\"header__logo\" routerLink=\"/\" [style.marginRight.px]=\"40\">\r\n    <img [src]=\"logo.src\" [alt]=\"logo.alt\" [title]=\"logo.title\">\r\n  </a>\r\n\r\n  <div class=\"header__tools\">\r\n    <app-header-search></app-header-search>\r\n    <i nz-icon nzType=\"question-circle\" nzTheme=\"outline\" [nz-tooltip]=\"'Справочник'\"></i>\r\n    <app-header-notifications [indentClass]=\"'top-indent'\"></app-header-notifications>\r\n    <app-header-locale></app-header-locale>\r\n    <app-header-profile></app-header-profile>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #loader>\r\n  <div class=\"header__loading\">\r\n    <nz-spin nzSimple nzTip=\"Загрузка шапки...\"></nz-spin>\r\n  </div>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { NzNotificationPlacement } from 'ng-zorro-antd/notification/typings';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n  private _position: NzNotificationPlacement = 'bottomRight';\r\n\r\n  public constructor(\r\n    private $notifications: NzNotificationService,\r\n    private $localization: LocalizationService\r\n  ) {\r\n  }\r\n\r\n  public error(title: string, message: string): void {\r\n    this.call(title, message, 'error');\r\n  }\r\n\r\n  public info(title: string, message: string): void {\r\n    this.call(title, message);\r\n  }\r\n\r\n  public success(title: string, message: string): void {\r\n    this.call(title, message, 'success');\r\n  }\r\n\r\n  public warning(title: string, message: string): void {\r\n    this.call(title, message, 'warning');\r\n  }\r\n\r\n  private call(title: string, message: string, type = 'info'): void {\r\n    title = this.$localization.translate(title);\r\n    message = this.$localization.translate(message);\r\n\r\n    this.$notifications.create(type, title, message, { nzPlacement: this._position });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImageBlobPipe } from '@shared/images/pipes/image-blob.pipe';\r\nimport { FullImageUrlPipe } from './pipes/full-image-url.pipe';\r\n\r\n@NgModule({\r\n  declarations: [ ImageBlobPipe, FullImageUrlPipe ],\r\n  exports: [\r\n    ImageBlobPipe,\r\n    FullImageUrlPipe\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ImagesModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LayoutModule } from './layout/layout.module';\r\nimport { HeaderModule } from '@app/layout/header/header.module';\r\nimport { HeaderService } from '@app/layout/header/header.service';\r\nimport { NavigationModule } from '@app/layout/navigation/navigation.module';\r\nimport { NavigationMobileModule } from '@app/layout/navigation-mobile/navigation-mobile.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  providers: [ HeaderService ],\r\n  exports: [\r\n    HeaderModule,\r\n    LayoutModule,\r\n    NavigationModule,\r\n    NavigationMobileModule\r\n  ],\r\n})\r\nexport class LayoutSharedModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { INavigations } from '@app/layout/navigation/navigation.model';\r\nimport {\r\n  filterNavigation,\r\n  showHideQRNavigation,\r\n} from '@app/layout/navigation/navigation.utils';\r\nimport { AppError } from '@core/models/app-errorl.model';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { MetaApiService } from '@shared/http/services/meta-api.service';\r\nimport { SettingsService } from '@src/app/shared/settings/settings.service';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NavigationService {\r\n  public collapse: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\r\n    false\r\n  );\r\n\r\n  constructor(\r\n    private $metaApi: MetaApiService,\r\n    private $user: UserService,\r\n    private $settings: SettingsService\r\n  ) {}\r\n\r\n  public get mainNavigation$(): Observable<any> {\r\n    return combineLatest([\r\n      this.$settings.getSettingByName$(\r\n        'workplaceReservationConfirmationMethod'\r\n      ),\r\n      this.$metaApi.getMeta<INavigations>('navigation'),\r\n    ]).pipe(\r\n      switchMap(([setting, nav]) => {\r\n        let navigations: INavigations;\r\n        if (!(nav instanceof AppError)) {\r\n          navigations = nav as INavigations;\r\n        }\r\n        navigations = showHideQRNavigation(navigations, setting);\r\n        return this.$user.info$.pipe(\r\n          map(({ labelGroups }) => filterNavigation(navigations, labelGroups))\r\n        );\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { TemplateRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nexport type CardType = 'table' | 'flex';\r\n\r\nexport interface IDescription {\r\n  name: string;\r\n  value: string;\r\n  nameTpl?: TemplateRef<any>;\r\n  valueTpl?: TemplateRef<any>;\r\n  formControlTpl?: string;\r\n  link?: string;\r\n}\r\n\r\nexport interface ICoverImage {\r\n  src: string;\r\n  alt: string;\r\n}\r\nexport interface ICard {\r\n  title: string;\r\n  width: string;\r\n  image: string;\r\n  descriptionList: IDescription[];\r\n  tags: string[];\r\n  form?: FormGroup;\r\n}\r\n\r\nexport enum CardEditModeEvent {\r\n  Enable,\r\n  Save,\r\n  Cancel,\r\n}\r\n","export const SUCCESS_KEY: string = 'RESULT_SUCCESS';\r\nexport const FAILURE_KEY: string = 'RESULT_FAILURE';\r\nexport const EXCEPTION_KEY: string = 'EXCEPTION';\r\nexport const ERROR_CODE_KEY: string = 'ERROR_CODE';\r\nexport const UNKNOWN_SERVER_ERROR = 'Unknown server error';\r\nexport const DB_CACHE_RESPONSE_HEADER: string = 'cacheInIndexedDb';\r\nexport const LOCALIZATION_RESPONSE_REGEX: RegExp = /i18n.*\\.json/;\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { DictionariesIndexedDb } from '@app/shared/dictionaries/dictionaries.indexed-db';\r\nimport {\r\n  IDictionary,\r\n  IDictionaryItem,\r\n} from '@app/shared/dictionaries/dictionaries.model';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  Observable,\r\n  of,\r\n  ReplaySubject,\r\n} from 'rxjs';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport { UrlService } from '@core/services/url.service';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { getLoadableDictionaries } from '@shared/dictionaries/dictionaries.utils';\r\nimport { DictionariesMatchersService } from '@shared/dictionaries/services/dictionaries-matchers.service';\r\n\r\n@Injectable()\r\nexport class DictionariesService {\r\n  private _already$: ReplaySubject<boolean> = new ReplaySubject(1);\r\n  private _progress$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n  private _dictionaryCount: number = getLoadableDictionaries().length;\r\n\r\n  constructor(\r\n    private $indexedDb: DictionariesIndexedDb,\r\n    private $config: ConfigService,\r\n    private $http: HttpService,\r\n    private $url: UrlService\r\n  ) {}\r\n\r\n  public get already$(): Observable<boolean> {\r\n    return this._already$.asObservable();\r\n  }\r\n\r\n  public get progress$(): Observable<number> {\r\n    return this._progress$.pipe(\r\n      map((progress) => Math.round((100 * progress) / this._dictionaryCount))\r\n    );\r\n  }\r\n\r\n  public getDictionary<T = IDictionary>(\r\n    name: DictionaryName,\r\n    whenEmpty: any = null\r\n  ): Observable<T | null> {\r\n    return this.$indexedDb\r\n      .getDictionary(name)\r\n      .pipe(map((dictionary) => dictionary || whenEmpty));\r\n  }\r\n\r\n  public getDictionaryItemByKey<T = IDictionaryItem>(\r\n    name: DictionaryName,\r\n    id: number,\r\n    whenEmpty: any = null\r\n  ): Observable<T | null> {\r\n    return this.$indexedDb\r\n      .getDictionaryItemByKey(name, id)\r\n      .pipe(map((dictionary) => dictionary || whenEmpty));\r\n  }\r\n\r\n  public getDictionaryItemByIndex<T = IDictionaryItem>(\r\n    name: DictionaryName,\r\n    index: string,\r\n    value: any,\r\n    whenEmpty: any = null\r\n  ): Observable<T> {\r\n    return this.$indexedDb\r\n      .getDictionaryItemByIndex(name, index, value)\r\n      .pipe(map((dictionary) => dictionary || whenEmpty));\r\n  }\r\n\r\n  public addDictionary(\r\n    name: DictionaryName,\r\n    data: IDictionary\r\n  ): Observable<any> {\r\n    return this.$indexedDb.addDictionary(name, data);\r\n  }\r\n\r\n  public updateDictionaryItem<T extends IDictionaryItem = IDictionaryItem>(\r\n    name: DictionaryName,\r\n    item: T,\r\n    key?: any\r\n  ): Observable<any> {\r\n    return this.$indexedDb.updateDictionaryItem(name, item, key);\r\n  }\r\n\r\n  public checkAlreadyDictionaries(): Observable<any> {\r\n    const cacheTime: number = this.$config.get('dictionariesCacheTime', 0);\r\n    const nowTime: number = Date.now();\r\n\r\n    return this.$indexedDb.getLastCacheTime().pipe(\r\n      tap((lastCacheTime) => {\r\n        if (nowTime - lastCacheTime <= cacheTime) {\r\n          this.setAlready();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public cacheDictionaries(): Observable<any> {\r\n    return of(null).pipe(\r\n      switchMap(() =>\r\n        combineLatest(\r\n          getLoadableDictionaries().map((dictionary) =>\r\n            this.cacheDictionary(dictionary)\r\n          )\r\n        )\r\n      ),\r\n      switchMap(() => this.$indexedDb.setLastCacheTime(Date.now())),\r\n      catchError((err) => {\r\n        if (err) {\r\n          console.error('Error loading dictionaries', err);\r\n        }\r\n        return of(null);\r\n      }),\r\n      tap(() => this.setAlready())\r\n    );\r\n  }\r\n\r\n  public cacheDictionariesByName(dictionary: DictionaryName): Observable<any> {\r\n    return of(null).pipe(\r\n      switchMap(() => this.cacheDictionary(dictionary)),\r\n      switchMap(() => this.$indexedDb.setLastCacheTime(Date.now())),\r\n      catchError((err) => {\r\n        if (err) {\r\n          console.error('Error loading dictionaries', err);\r\n        }\r\n        return of(null);\r\n      }),\r\n      tap(() => this.setAlready())\r\n    );\r\n  }\r\n\r\n  private incrementProgress(): void {\r\n    this._progress$.next(this._progress$.value + 1);\r\n  }\r\n\r\n  private setAlready(): void {\r\n    DictionariesMatchersService.already = true;\r\n    this._already$.next(true);\r\n    this._already$.complete();\r\n  }\r\n\r\n  private cacheDictionary(dictionaryName: DictionaryName): Observable<any> {\r\n    const dictionaryUrl: string = this.$config.get('dictionaryUrl');\r\n    const url: string = this.$url.createUrl(dictionaryUrl, { dictionaryName });\r\n    let data: IDictionary;\r\n\r\n    return this.$http.get(url).pipe(\r\n      filterNoProgressHttpEvent(),\r\n      tap((response) => (data = response.data || [])),\r\n      switchMap((response) =>\r\n        this.$indexedDb.updateDictionary(dictionaryName, response?.data || [])\r\n      ),\r\n      catchError((err) => {\r\n        console.error('Error loading dictionary', err);\r\n        return of(null);\r\n      }),\r\n      tap(() => this.incrementProgress())\r\n    );\r\n  }\r\n\r\n  public patchDictionaryItem(\r\n    dictionaryName: DictionaryName,\r\n    itemId: number,\r\n    data?: any\r\n  ): Observable<any> {\r\n    const dictionaryUrl: string = this.$config.get('dictionaryUrl');\r\n    const url: string = `${this.$url.createUrl(dictionaryUrl, {\r\n      dictionaryName,\r\n    })}/${itemId}`;\r\n\r\n    return this.$http.post(url, data).pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  public putDictionaries(dictionaryName: string, data: any): Observable<any> {\r\n    const dictionaryUrl: string = this.$config.get('dictionaryUrl');\r\n    const url: string = `${this.$url.createUrl(dictionaryUrl, {\r\n      dictionaryName,\r\n    })}`;\r\n    return this.$http.put(url, data).pipe(filterNoProgressHttpEvent());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { IDictionaryBuildings, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { catchError, map, shareReplay, startWith, take } from 'rxjs/operators';\r\nimport { filterFloorMaps, filterFloorMapsByBuildingId, sortItemsBySequence } from '@shared/dictionaries/dictionaries.utils';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { isEmpty } from '@core/utils/common.util';\r\n\r\n@Injectable()\r\nexport class FloorMapsService {\r\n  private readonly _allFloorMaps$: Observable<IDictionaryFloorMaps>;\r\n  private readonly _parkingLotsFloorMaps$: Observable<IDictionaryFloorMaps>;\r\n  private readonly _roomsFloorMaps$: Observable<IDictionaryFloorMaps>;\r\n  private readonly _workplacesFloorMaps$: Observable<IDictionaryFloorMaps>;\r\n\r\n  constructor(\r\n    private $dictionaries: DictionariesService,\r\n    private $user: UserService\r\n  ) {\r\n    this._allFloorMaps$ = this.getAllFloorMaps$();\r\n    this._parkingLotsFloorMaps$ = this.getFloorMapsByType$('parkingLots');\r\n    this._roomsFloorMaps$ = this.getFloorMapsByType$('rooms');\r\n    this._workplacesFloorMaps$ = this.getFloorMapsByType$('workplaces');\r\n  }\r\n\r\n  public get allFloorMaps$(): Observable<IDictionaryFloorMaps> {\r\n    return this._allFloorMaps$;\r\n  }\r\n\r\n  public get allFloorMapsOne$(): Observable<IDictionaryFloorMaps> {\r\n    return this.allFloorMaps$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public get parkingLotsFloorMaps$(): Observable<IDictionaryFloorMaps> {\r\n    return this._parkingLotsFloorMaps$;\r\n  }\r\n\r\n  public get roomsFloorMaps$(): Observable<IDictionaryFloorMaps> {\r\n    return this._roomsFloorMaps$;\r\n  }\r\n\r\n  public get workplacesFloorMaps$(): Observable<IDictionaryFloorMaps> {\r\n    return this._workplacesFloorMaps$;\r\n  }\r\n\r\n  public getFloorMaps$(type?: DictionaryName | string, buildingId?: number): Observable<IDictionaryFloorMaps> {\r\n    let floorMaps$: Observable<IDictionaryFloorMaps> = this.allFloorMaps$;\r\n\r\n    switch (type) {\r\n      case 'parkingLots':\r\n        floorMaps$ = this.parkingLotsFloorMaps$;\r\n        break;\r\n\r\n      case 'rooms':\r\n        floorMaps$ = this.roomsFloorMaps$;\r\n        break;\r\n\r\n      case 'workplaces':\r\n        floorMaps$ = this.workplacesFloorMaps$;\r\n        break;\r\n    }\r\n\r\n    return isEmpty(buildingId)\r\n      ? floorMaps$\r\n      : floorMaps$.pipe(map(floorMaps =>\r\n        filterFloorMapsByBuildingId(floorMaps, buildingId))\r\n      );\r\n  }\r\n\r\n  private get sequence$(): Observable<number[]> {\r\n    return this.$user.label$.pipe(\r\n      startWith(null),\r\n      map((label) => label?.floorMapsSequence || []),\r\n      catchError(() => of([]))\r\n    );\r\n  }\r\n\r\n  private getAllFloorMaps$(): Observable<IDictionaryFloorMaps> {\r\n    return combineLatest([\r\n      this.$dictionaries.getDictionary<IDictionaryFloorMaps>('floorMaps'),\r\n      this.sequence$\r\n    ]).pipe(\r\n      map(([ allFloorMaps, sequence ]) =>\r\n        sortItemsBySequence(allFloorMaps, 'id', sequence)\r\n      ),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private getFloorMapsByType$(name: DictionaryName): Observable<IDictionaryFloorMaps> {\r\n    return combineLatest([\r\n      this.allFloorMaps$,\r\n      this.$dictionaries.getDictionary(name)\r\n    ]).pipe(\r\n      map(([ floorMaps, items ]) =>\r\n        filterFloorMaps(floorMaps, items)\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {DictionaryService} from './dictionary.service';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n  private _storage: Storage;\r\n  private _keys: Set<string>;\r\n\r\n  public constructor(\r\n    @Inject(DictionaryService) private $dictionary: DictionaryService\r\n  ) {\r\n    this._storage = localStorage;\r\n    this._keys = new Set(\r\n      ...Array.from(\r\n        new Array(this._storage.length),\r\n        (_, index) => this._storage.key(index)\r\n      )\r\n    );\r\n  }\r\n\r\n  public get(name: string): string | null {\r\n    return this._storage.getItem(name);\r\n  }\r\n\r\n  public getObject<T>(name: string): T | null {\r\n    const objJSON: string = this.get(name);\r\n\r\n    try {\r\n      return JSON.parse(objJSON) as T;\r\n    } catch (e) {\r\n      console.error(\r\n        DictionaryService.get('localStorageBadParsing').replace('$name', name)\r\n      );\r\n      console.error(e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public set(name: string, value: any): void {\r\n    this._storage.setItem(name, value);\r\n    this._keys.add(name);\r\n  }\r\n\r\n  public setObject(name: string, value: object): void {\r\n    let objJSON: string = null;\r\n\r\n    try {\r\n      objJSON = JSON.stringify(value);\r\n      this.set(name, objJSON);\r\n    } catch (e) {\r\n      console.error(\r\n        DictionaryService.get('localStorageBadStringify').replace('$name', name)\r\n      );\r\n      console.error(\r\n        DictionaryService.get('localStorageObjectNotSaved').replace('$name', name)\r\n      );\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  public has(key: string): boolean {\r\n    return this._keys.has(key);\r\n  }\r\n\r\n  public delete(name: string): void {\r\n    this._storage.removeItem(name);\r\n    this._keys.delete(name);\r\n  }\r\n\r\n  public remove(name: string): void {\r\n    this.delete(name);\r\n  }\r\n}\r\n","export const QUICK_CREATE_URLS: Record<string, string>[] = [\r\n  {label: 'workplace', url: '/reservations/workplace/create'},\r\n  {label: 'appointment', url: '/reservations/appointment/create'},\r\n  {label: 'parking', url: '/reservations/parking/create'}\r\n];\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {IEntry} from '../models/common.model';\r\n\r\ntype Arr = Array<IEntry<any>>;\r\ntype Keys = Array<Array<string>>;\r\n\r\n@Pipe({\r\n  name: 'map'\r\n})\r\nexport class MapPipe implements PipeTransform {\r\n  public transform<T>(arr: Arr, keys: IEntry<string> | Keys, deleteKeys: string [] = []): Array<T> {\r\n    if (!(keys instanceof Array)) {\r\n      keys = Object.entries(keys);\r\n    }\r\n\r\n    if (!(deleteKeys instanceof Array)) {\r\n      deleteKeys = [];\r\n    }\r\n\r\n    return []\r\n      .concat(arr)\r\n      .map((item) => ({...item}))\r\n      .map((item) => {\r\n        (keys as Keys).forEach(([curKey, newKey]) => {\r\n          item[newKey] = item[curKey];\r\n        });\r\n\r\n        (keys as Keys)\r\n          .map(([key1]) => key1)\r\n          .concat(deleteKeys)\r\n          .forEach(key => delete item[key]);\r\n\r\n        return item;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { FiltersModule } from '../filters/filters.module';\r\nimport { ReservationByQRComponent } from './reservation-by-qr.component';\r\nimport { ReservationByQRService } from './reservation-by-qr.service';\r\n\r\n@NgModule({\r\n  declarations: [ReservationByQRComponent],\r\n  exports: [ReservationByQRComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FiltersModule,\r\n    ZXingScannerModule,\r\n    NzModalModule,\r\n    NzButtonModule\r\n  ],\r\n  providers: [ReservationByQRService, DatePipe],\r\n})\r\nexport class ReservationByQRModule {}\r\n","import { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { IDictionaryMeasurements } from '@shared/dictionaries/models/measurements.model';\r\n\r\nexport const MEASUREMENTS_DICT_NAME: DictionaryName = 'measurements';\r\nexport const MEASUREMENTS_URL_KEY: string = 'measurementsUrl';\r\nexport const MEASUREMENTS_DEFAULT_VALUES: IDictionaryMeasurements = [\r\n  {\r\n    id: 1,\r\n    lang: 'ru',\r\n    default: true,\r\n    measurements: {\r\n      date: 'dd.MM.yyyy',\r\n      time: 'HH:mm:ss',\r\n      dateTime: 'dd.MM.yyyy HH:mm:ss',\r\n      shortDate: 'dd.MM.yy',\r\n      shortTime: 'HH:mm',\r\n      shortDateTime: 'dd.MM.yy HH:mm',\r\n      filterDate: 'yyyy-MM-dd HH:mm:ss.SSS Z'\r\n    }\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"lang\": \"en\",\r\n    \"default\": false,\r\n    \"measurements\": {\r\n      \"date\": \"yyyy-MM-dd\",\r\n      \"time\": \"HH:mm:ss\",\r\n      \"dateTime\": \"yyyy-MM-dd HH:mm:ss\",\r\n      \"shortDate\": \"yy-MM-dd\",\r\n      \"shortTime\": \"HH:mm\",\r\n      \"shortDateTime\": \"yy-MM-dd HH:mm\",\r\n      \"filterDate\": \"yyyy-MM-dd HH:mm:ss.SSS Z\"\r\n    }\r\n  }\r\n]\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { IStatusRendererOptions, IStatusRendererMap } from '../../renderer.model';\r\nimport { MapRendererComponent } from '@base/renderer/components/map/map.component';\r\nimport { StatusService } from '@base/renderer/components/status/status.service';\r\n\r\n@Component({\r\n  selector: 'app-status-renderer',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: [ './status.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.app-status-renderer]': `true`\r\n  },\r\n  providers: [ StatusService ]\r\n})\r\nexport class StatusRendererComponent extends MapRendererComponent<IStatusRendererOptions> implements OnInit {\r\n  @Input()\r\n  public value: any;\r\n\r\n  @Input()\r\n  public color: string;\r\n\r\n  @Input()\r\n  public needConvert: boolean = true;\r\n\r\n  constructor(\r\n    private $service: StatusService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public get mappedValue(): IStatusRendererMap {\r\n    return this.options?.map?.[this.value] || this.value;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (this.needConvert) {\r\n      this.color = this.$service.mapColor(this.options, this.value);\r\n      this.value = this.mappedValue?.value;\r\n    }\r\n  }\r\n}\r\n","<span class=\"app-status-renderer__indicator\"\r\n      [style.backgroundColor]=\"color\"\r\n>\r\n</span>\r\n<span class=\"app-status-renderer__label\">\r\n  {{value}}\r\n</span>\r\n","import { ObjectStoreMeta } from 'ngx-indexed-db/lib/ngx-indexed-db.meta';\r\n\r\nexport type DictionaryName = typeof DICTIONARIES[number];\r\nexport type CustomDictionaryName = Exclude<DictionaryName, Exclude<DictionaryName, 'statuses' | 'measurements'>>;\r\nexport const DICTIONARY_PREFIX_NAME: string = 'dict_';\r\nexport const LAST_CACHE_TIME_KEY: string = 'dictionariesLastCacheTime';\r\n\r\nexport const dbConfigItem: Partial<ObjectStoreMeta> = {\r\n  storeConfig: { keyPath: 'id', autoIncrement: false },\r\n  storeSchema: [\r\n    { name: 'id', keypath: 'id', options: { unique: true } },\r\n  ]\r\n};\r\n\r\nexport const dbConfigStatusItem: ObjectStoreMeta = {\r\n  store: `${DICTIONARY_PREFIX_NAME}statuses`,\r\n  storeConfig: { keyPath: 'id', autoIncrement: false },\r\n  storeSchema: [\r\n    { name: 'id', keypath: 'id', options: { unique: true } },\r\n    { name: 'code', keypath: 'code', options: { unique: true } },\r\n  ]\r\n};\r\n\r\nexport const dbCustomDictionariesConfig: ObjectStoreMeta[] = [\r\n  {\r\n    store: `${DICTIONARY_PREFIX_NAME}statuses`,\r\n    storeConfig: { keyPath: 'id', autoIncrement: false },\r\n    storeSchema: [\r\n      { name: 'id', keypath: 'id', options: { unique: true } },\r\n      { name: 'lang', keypath: 'lang', options: { unique: true } },\r\n      { name: 'default', keypath: 'default', options: { unique: false } },\r\n    ]\r\n  },\r\n  {\r\n    store: `${DICTIONARY_PREFIX_NAME}measurements`,\r\n    storeConfig: { keyPath: 'id', autoIncrement: false },\r\n    storeSchema: [\r\n      { name: 'id', keypath: 'id', options: { unique: true } },\r\n      { name: 'lang', keypath: 'lang', options: { unique: true } },\r\n      { name: 'default', keypath: 'default', options: { unique: false } },\r\n    ]\r\n  }\r\n];\r\n\r\nexport const DICTIONARIES = [\r\n  'buildings',\r\n  'floorMaps',\r\n  'rooms',\r\n  'workplaceGroups',\r\n  'workplaces',\r\n  'labelGroups',\r\n  'labels',\r\n  'tags',\r\n  'gateways',\r\n  'beacons',\r\n  'customObjects',\r\n  'serviceDeskItemCategories',\r\n  'serviceDeskItems',\r\n  'statuses',\r\n  'measurements',\r\n  'areas',\r\n  'parkingLots'\r\n] as const;\r\n\r\nexport const CUSTOM_DICTIONARIES: Array<CustomDictionaryName> = [ 'statuses', 'measurements' ];\r\n\r\n","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy} from '@angular/core';\r\nimport {TeamProfileService} from '@presentation/team/team-profile/team-profile.service';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {Subscriptions} from '@core/decorators/subscriptions.decorator';\r\nimport {TeamProfileWorkplaceTableMeta} from '@presentation/team/team-profile/team-profile.model';\r\nimport {Router} from '@angular/router';\r\nimport {MetaApiService} from '@shared/http/services/meta-api.service';\r\nimport {filter} from 'rxjs/operators';\r\nimport {AppError} from '@core/models/app-errorl.model';\r\n\r\n@Component({\r\n  selector: 'app-team-profile',\r\n  templateUrl: './team-profile.component.html',\r\n  styleUrls: ['./team-profile.component.less'],\r\n  providers: [TeamProfileService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TeamProfileComponent implements OnDestroy {\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n  tabs: string[] = [];\r\n  id$: Observable<number>;\r\n  dataFormat: string = this.$service.dateFormat;\r\n  workplaceTable = {\r\n    pageSize: 10,\r\n    data: [],\r\n    columns: [\r\n      {title: 'Здание'},\r\n      {title: 'Этаж'},\r\n      {title: 'Место'},\r\n      {title: 'Начало'},\r\n      {title: 'Окончание'},\r\n      {title: 'Статус'},\r\n    ]\r\n  };\r\n\r\n  constructor(private $service: TeamProfileService, private cdr: ChangeDetectorRef, private $router: Router, private $meta: MetaApiService) {\r\n    this.id$ = $service.userId$;\r\n    this.sub = $service.workplaceTableMeta$.subscribe((tableMeta) => {\r\n      this.workplaceTable.data = tableMeta;\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.sub = $meta.getMeta('profile').pipe(\r\n      filter(profileMeta => !(profileMeta instanceof AppError))\r\n    ).subscribe((profileMeta) => {\r\n      // @ts-ignore\r\n      this.tabs = profileMeta.tabs;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  onClick(row: TeamProfileWorkplaceTableMeta): void {\r\n    this.$router.navigateByUrl(`/team/reservations/workplace/view/${row.reservationId}`);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n}\r\n","<nz-row [nzGutter]=\"26\">\r\n  <nz-col [nzFlex]=\"'340px'\">\r\n    <app-user-card class=\"mb-10\" [userId]=\"id$ | async\"></app-user-card>\r\n  </nz-col>\r\n  <nz-col>\r\n    <div class=\"light-fon px-15\">\r\n      <nz-tabset>\r\n        <nz-tab *ngFor=\"let tab of tabs; index as i\" [nzTitle]=\"tab\">\r\n          <ng-container *ngIf=\"i === 0\">\r\n            <nz-table #tableRef [nzData]=\"workplaceTable.data\" [nzPageSize]=\"workplaceTable.pageSize\">\r\n              <thead>\r\n              <tr>\r\n                <th *ngFor=\"let column of workplaceTable.columns\">{{ column.title }}</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr *ngFor=\"let row of tableRef.data\" (click)=\"onClick(row)\" class=\"cursor-pointer\">\r\n                <td>{{ row.building }}</td>\r\n                <td>{{ row.floor }}</td>\r\n                <td>\r\n                  <a [routerLink]=\"['/office/' + row.floorId + '/' + row.placeId]\" (click)=\"$event.stopPropagation()\">{{ row.place }}</a>\r\n                </td>\r\n                <td>{{ row.startDate | date:dataFormat }}</td>\r\n                <td>{{ row.endDate | date:dataFormat }}</td>\r\n                <td>\r\n                  <app-status-renderer [type]=\"'status'\" [value]=\"row.status.value\" [options]=\"row.status.options\"></app-status-renderer>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </nz-table>\r\n          </ng-container>\r\n        </nz-tab>\r\n      </nz-tabset>\r\n    </div>\r\n  </nz-col>\r\n</nz-row>\r\n\r\n","import { UNKNOWN_SERVER_ERROR } from '@app/shared/http/utils/constants.util';\r\n\r\nexport const errorCode: Record<string, number> = {\r\n  '4000': 400,\r\n  '4001': 401,\r\n  '4002': 402,\r\n  '4003': 403,\r\n  '5000': 500,\r\n  '5001': 501,\r\n  '5002': 502,\r\n  '5003': 503,\r\n  '5012': 401\r\n}\r\n\r\nexport const transformErrorCode: (code: string) => number = (code: string) =>\r\n  errorCode[code] || errorCode['4000'];\r\n\r\nexport const transformErrorMessage: (message: string) => string = (message: string) =>\r\n  message || UNKNOWN_SERVER_ERROR;\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { AuthService } from '@presentation/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '@core/services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private _user: UserService,\r\n    private _auth: AuthService\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (this._auth.isLoggedIn) {\r\n      request = request.clone({\r\n        headers: request.headers\r\n          .set('Authorization', this._user.authorization)\r\n          .set('label_token', this._user.tokenUUID)\r\n          .set('deviceOs', 'ANGULAR'),\r\n        body: {\r\n          ...request.body,\r\n          tokenUUID: this._user.tokenUUID,\r\n          deviceId: this._user.deviceId,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-title',\r\n  templateUrl: './title.component.html',\r\n  styleUrls: [ './title.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TitleComponent {\r\n  @Input() title: string;\r\n  @Input() extra: TemplateRef<any> | any;\r\n}\r\n","<div class=\"title d-flex justify-content-between\">\r\n  <ng-container *ngIf=\"extra\">\r\n    <ng-container *ngTemplateOutlet=\"extra\"></ng-container>\r\n  </ng-container>\r\n <!-- <h1 *ngIf=\"title\"\r\n      class=\"title__main\"\r\n  >\r\n    {{ title }}\r\n  </h1>\r\n  <div *ngIf=\"extra\">\r\n    <ng-container *ngTemplateOutlet=\"extra\"></ng-container>\r\n  </div>-->\r\n</div>\r\n","import { addDays, addMinutes, getHours } from 'date-fns';\r\nimport {\r\n  ICustomObject,\r\n  IUser,\r\n  IWorkplace,\r\n} from '@shared/http/models/database.model';\r\nimport {\r\n  IMarkItem,\r\n  MarkItemLogicType,\r\n} from '@base/map/map-mark/map-mark.model';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport const nowRang = (): Date[] => {\r\n  const now = new Date();\r\n  return [now, addMinutes(now, 1)];\r\n};\r\nexport const dayRange = (now: Date): [Date, Date] => {\r\n  return [\r\n    new Date(now.getFullYear(), now.getMonth(), now.getDate()),\r\n    new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59),\r\n  ];\r\n};\r\nexport const breakdownDate = (range: Date[], step: number): number[] => {\r\n  const [start, end] = range.map((date) => date.getTime());\r\n  if (start >= end) {\r\n    console.error(`Invalid range`, range);\r\n    return;\r\n  }\r\n  const result = [];\r\n  let iterable = start;\r\n  while (iterable < end) {\r\n    result.push(iterable);\r\n    iterable += step;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const findDateRange = (date: Date[], timeRange: number[]): Date[] => {\r\n  const result = [new Date(date[0]), date[1] ? new Date(date[1]) : null];\r\n  const [startTime, endTime] = timeRange;\r\n  if (!date[1]) {\r\n    result[1] = new Date(result[0]);\r\n  }\r\n  result[0].setHours(\r\n    new Date(startTime).getHours(),\r\n    new Date(startTime).getMinutes(),\r\n    0,\r\n    0\r\n  );\r\n  result[1].setHours(\r\n    new Date(endTime).getHours(),\r\n    new Date(endTime).getMinutes(),\r\n    0,\r\n    0\r\n  );\r\n  return result;\r\n};\r\nexport const findSliderRange = (date: Date[]): number[] => {\r\n  const result: [Date, Date] = [new Date(), new Date()];\r\n  result[0].setHours(date[0].getHours(), date[0].getMinutes(), 0, 0);\r\n  result[1].setHours(date[1].getHours(), date[1].getMinutes(), 0, 0);\r\n  return result.map((data) => data.getTime());\r\n};\r\nexport const workDateRange = (workHours: number[]): Date[] => {\r\n  const [startWorkHour, endWorkHour] = workHours;\r\n  const result = [new Date(), new Date()];\r\n  result[0].setHours(startWorkHour, 0, 0, 0);\r\n  result[1].setHours(endWorkHour, 0, 0, 0);\r\n  return result;\r\n};\r\nexport const getSliderLimitValue = (range: number[]): number[] => {\r\n  const [startWorkHour, endWorkHour] = range;\r\n  const sliderLimitDate: Date[] = [new Date(), new Date()];\r\n  sliderLimitDate[0].setHours(startWorkHour, 0, 0, 0);\r\n  sliderLimitDate[1].setHours(endWorkHour, 0, 0, 0);\r\n  return sliderLimitDate.map((date) => date.getTime());\r\n};\r\nexport const getInitDate = (\r\n  workHours: number[],\r\n  minDuration: number\r\n): Date[] => {\r\n  const now = new Date();\r\n  const nowHour: number = now.getHours();\r\n  const nowWithMinDuration: Date = new Date(now.getTime() + minDuration);\r\n  const time = getSliderLimitValue(workHours);\r\n  const [startWorkHour, endWorkHour] = time.map((t) => getHours(new Date(t)));\r\n  const endDate: Date = setHours(now, workHours[1]);\r\n\r\n  if (nowHour < endWorkHour && nowHour <= startWorkHour) {\r\n    return [setHours(now, startWorkHour), endDate];\r\n  } else if (nowHour < endWorkHour) {\r\n    return [now, endDate];\r\n  } else if (nowWithMinDuration > endDate) {\r\n    const nextDay = addDays(now, 1);\r\n    return [setHours(nextDay, startWorkHour), setHours(nextDay, endWorkHour)];\r\n  }\r\n};\r\nexport const setHours = (date: Date, hours: number): Date => {\r\n  const newDate = new Date(date);\r\n  newDate.setHours(hours, 0, 0, 0);\r\n  return newDate;\r\n};\r\n\r\nexport const disableWorkplaceFromNeighborsIds = (\r\n  workplace: IWorkplace,\r\n  neighborsIds: number[]\r\n): IWorkplace => {\r\n  workplace.disabled = neighborsIds.includes(workplace.id);\r\n  return workplace;\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { BehaviorSubject, combineLatest, from, Observable, of, Subject, zip } from 'rxjs';\r\nimport { getDictionariesDbStoreNames, getDictionaryDbStoreName } from '@app/shared/dictionaries/dictionaries.utils';\r\nimport { catchError, map, pluck, switchMap, tap } from 'rxjs/operators';\r\nimport { IDictionary, IDictionaryItem } from '@app/shared/dictionaries/dictionaries.model';\r\nimport { DB_STORE_OPTIONS } from '@shared/indexed-db/indexed-db.utils';\r\nimport { IIndexedDbOptionsRecord } from '@shared/indexed-db/indexed-db.model';\r\nimport { DictionaryName, LAST_CACHE_TIME_KEY } from '@shared/dictionaries/dictionaries.constants';\r\n\r\n@Injectable()\r\nexport class DictionariesIndexedDb {\r\n  constructor(\r\n    private $indexedDb: NgxIndexedDBService,\r\n  ) {\r\n  }\r\n\r\n  public getLastCacheTime(): Observable<number> {\r\n    return this.getLastCacheTimeRecord().pipe(\r\n      map(item => item || { value: 0 }),\r\n      pluck('value'),\r\n    );\r\n  }\r\n\r\n  public getDictionary(name: DictionaryName): Observable<IDictionary> {\r\n    return this.$indexedDb.getAll(getDictionaryDbStoreName(name));\r\n  }\r\n\r\n  public getDictionaryItemByKey(name: DictionaryName, id: number): Observable<IDictionaryItem> {\r\n    return this.$indexedDb.getByKey(getDictionaryDbStoreName(name), id);\r\n  }\r\n\r\n  public getDictionaryItemByIndex(name: any, index: string, value: any): Observable<IDictionaryItem> {\r\n    return this.$indexedDb.getByIndex(getDictionaryDbStoreName(name), index, value).pipe(\r\n      catchError((error) => {\r\n        console.error(`Error get dictionary item by index from store '${name} by index '${index}' with value '${value}'`, error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public setLastCacheTime(lastCacheTime: number): Observable<any> {\r\n    const value: IIndexedDbOptionsRecord<number> = { name: LAST_CACHE_TIME_KEY, value: lastCacheTime };\r\n\r\n    return this.getLastCacheTimeRecord().pipe(\r\n      switchMap((lastCacheTimeRecord: IIndexedDbOptionsRecord<number>) => lastCacheTimeRecord\r\n        ? this.$indexedDb.update(DB_STORE_OPTIONS, { ...lastCacheTimeRecord, ...value })\r\n        : this.$indexedDb.add(DB_STORE_OPTIONS, value)\r\n      )\r\n    );\r\n  }\r\n\r\n  public clearAll(): Observable<any> {\r\n    return combineLatest(\r\n      getDictionariesDbStoreNames().map(name => this.clear(name))\r\n    ).pipe(\r\n      catchError(error => {\r\n        console.error('Error clear dictionaries stores in indexeddb', error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public clear(name: DictionaryName | string): Observable<boolean> {\r\n    name = getDictionaryDbStoreName(name);\r\n\r\n    return this.$indexedDb.clear(name).pipe(\r\n      map(() => true),\r\n      catchError(error => {\r\n        console.error(`Error clear dictionary store '${name}' in indexeddb`, error);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  public addDictionary(name: DictionaryName, items: IDictionary): Observable<any> {\r\n    if (!items.length) {\r\n      return of(null);\r\n    }\r\n\r\n    const next$: BehaviorSubject<void> = new BehaviorSubject<void>(void (0));\r\n    const items$: Observable<any> = from(items);\r\n    const next: ([ item, ]) => void = () => next$.next();\r\n    const error: () => void = () => next$.next();\r\n\r\n    return new Observable<any>(observer => {\r\n      const complete: () => void = () => {\r\n        observer.next(null);\r\n        observer.complete();\r\n        next$.complete();\r\n      };\r\n\r\n      zip(items$, next$)\r\n        .pipe(\r\n          switchMap(([ item, ]) => this.addDictionaryItem(name, item))\r\n        )\r\n        .subscribe(next, error, complete);\r\n    });\r\n  }\r\n\r\n  public addDictionaryItem(name: DictionaryName | string, value: IDictionaryItem, id?: number): Observable<any> {\r\n    name = getDictionaryDbStoreName(name);\r\n\r\n    return this.$indexedDb.add(name, value).pipe(\r\n      catchError(error => {\r\n        console.error(`Error adding an entry with id ${id} to the dictionary ${name}`, error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public updateDictionary(name: DictionaryName, items: IDictionary): Observable<any> {\r\n    if (!items?.length) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.clear(name).pipe(\r\n      switchMap(() => this.addDictionary(name, items)),\r\n      catchError(error => {\r\n        console.error(`Error update dictionary ${name}`, error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public updateDictionaryItem(name: DictionaryName | string, item: IDictionaryItem, key?: any): Observable<any> {\r\n    name = getDictionaryDbStoreName(name);\r\n\r\n    return this.$indexedDb.update(name, item, key);\r\n  }\r\n\r\n  private getLastCacheTimeRecord(): Observable<IIndexedDbOptionsRecord<number>> {\r\n    return this.$indexedDb.getByIndex(DB_STORE_OPTIONS, 'name', LAST_CACHE_TIME_KEY);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { NavigationService } from '@app/layout/navigation/navigation.service';\r\nimport { INavigations } from '@app/layout/navigation/navigation.model';\r\nimport { LayoutSharedService } from '@app/layout/layout-shared.service';\r\nimport { IBreadcrumbs } from '@base/breadcrumb/breadcrumb.model';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { Subscription } from 'rxjs';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { GlobalLoaderService } from '@core/services/global-loader.service';\r\nimport { Subscribe } from '@core/decorators/subscribe.decorator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { PerfectScrollDirective } from '@core/directives/perfect-scroll.directive';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LayoutComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  private isCollapsed: boolean = false;\r\n  breadcrumbs: IBreadcrumbs;\r\n  title: string = '';\r\n  showBackBtn: boolean = false;\r\n\r\n  @MarkForCheck\r\n  extraTpl: TemplateRef<any> | null;\r\n\r\n  contentHeight: string;\r\n  nzSider: {\r\n    nzWidth: string;\r\n    nzTheme: string;\r\n    nzCollapsible: boolean;\r\n  } = {\r\n    nzWidth: 'auto',\r\n    nzTheme: 'light',\r\n    nzCollapsible: false,\r\n  };\r\n\r\n  @Subscriptions()\r\n  subs: Subscription;\r\n\r\n  @ViewChild('headerEl', { read: ElementRef }) headerEl: ElementRef;\r\n  @ViewChild('pageTitleEl') pageTitleEl: ElementRef;\r\n  @ViewChild(PerfectScrollDirective) scroll: PerfectScrollDirective;\r\n\r\n  @Subscribe<INavigations>()\r\n  navigationItems = this.$navigation.mainNavigation$;\r\n\r\n  constructor(\r\n    private $layout: LayoutSharedService,\r\n    private cdr: ChangeDetectorRef,\r\n    public $navigation: NavigationService,\r\n    public $loader: GlobalLoaderService,\r\n    public $router: Router\r\n  ) {\r\n    this.subs = this.$layout.currentRouteData$.subscribe(\r\n      ({ title, breadcrumbs, showBackBtn }) => {\r\n        this.title = title;\r\n        this.breadcrumbs = breadcrumbs;\r\n        this.showBackBtn = showBackBtn;\r\n      }\r\n    );\r\n    this.subs = this.$layout.extra$.subscribe((tpl) => {\r\n      this.extraTpl = tpl;\r\n      if (tpl) {\r\n        this.setContentHeight();\r\n      }\r\n    });\r\n    this.subs = this.$layout.scrollTop$.subscribe(() => {\r\n      this.scrollTop();\r\n    });\r\n    this.subs = this.$layout.extra$.subscribe((tpl) => {\r\n      this.extraTpl = tpl;\r\n      if (tpl) {\r\n        this.setContentHeight();\r\n      }\r\n    });\r\n    this.subs = this.$router.events\r\n      .pipe(filter((e) => e instanceof NavigationEnd))\r\n      .subscribe((_e) => {\r\n        this.scrollTop();\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setContentHeight();\r\n  }\r\n\r\n  collapsed(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this.setContentHeight();\r\n    this.$navigation.collapse.next(this.isCollapsed);\r\n    this.nzSider.nzWidth = this.isCollapsed ? '80px' : '210px';\r\n  }\r\n  setContentHeight(): void {\r\n    this.contentHeight = `calc(100vh - ${\r\n      this.headerEl?.nativeElement.offsetHeight +\r\n      this.pageTitleEl?.nativeElement.offsetHeight\r\n    }px)`;\r\n  }\r\n\r\n  private scrollTop(): void {\r\n    this.setContentHeight();\r\n    if (this.scroll && this.scroll.container) {\r\n      this.scroll.container.scrollTop = 0;\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {}\r\n\r\n  public ngOnDestroy() {}\r\n}\r\n","<nz-layout class=\"layout\">\r\n  <nz-header class=\"layout__header\" #headerEl>\r\n    <app-header></app-header>\r\n  </nz-header>\r\n  <nz-layout>\r\n    <nz-sider\r\n      class=\"layout__aside\"\r\n      [nzWidth]=\"nzSider.nzWidth\"\r\n      [nzTheme]=\"nzSider.nzTheme\"\r\n      [nzCollapsible]=\"nzSider.nzCollapsible\"\r\n    >\r\n      <app-navigation\r\n        class=\"layout__aside-menu\"\r\n        [items]=\"navigationItems\"\r\n      ></app-navigation>\r\n      <div class=\"layout__aside-actions\">\r\n        <i nz-icon\r\n           [nzType]=\"($navigation.collapse | async) ? 'menu-unfold' : 'menu-fold'\"\r\n           (click)=\"collapsed()\"\r\n           [nz-tooltip]=\"($navigation.collapse | async) ? 'Развернуть' : 'Свернуть'\"\r\n           class=\"toggle-btn\"\r\n        ></i>\r\n      </div>\r\n    </nz-sider>\r\n    <nz-content class=\"layout__content p-0\">\r\n      <div>\r\n        <div #pageTitleEl>\r\n          <app-breadcrumb *ngIf=\"breadcrumbs?.length\"\r\n                          [items]=\"breadcrumbs\"\r\n                          [back]=\"showBackBtn\"\r\n                          class=\"layout__breadcrumb\">\r\n          </app-breadcrumb>\r\n          <app-title [extra]=\"extraTpl\"></app-title>\r\n        </div>\r\n        <section class=\"section-content\" appScroll [style.height]=\"contentHeight\" [ngClass]=\"{ 'd-none': $loader.contentLoading$ | async }\">\r\n          <router-outlet></router-outlet>\r\n        </section>\r\n      </div>\r\n      <div class=\"layout__content-loader\" *ngIf=\"$loader.contentLoading$ | async\">\r\n        <nz-spin nzSimple nzTip=\"Загрузка...\"></nz-spin>\r\n      </div>\r\n    </nz-content>\r\n  </nz-layout>\r\n</nz-layout>\r\n<app-navigation-mobile [items]=\"navigationItems\"></app-navigation-mobile>\r\n","import { IEntry } from '../models/common.model';\r\nimport { InitialWords } from '../utils/dictionary.util';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { APP_DICTIONARY } from '@core/core.tokens';\r\nimport { isEmpty } from '@core/utils/common.util';\r\n\r\n@Injectable()\r\nexport class DictionaryService {\r\n  private static _words: IEntry<string> = InitialWords;\r\n\r\n  public constructor(\r\n    @Inject(APP_DICTIONARY) private _dicts: Array<Record<string, string>> = []\r\n  ) {\r\n    _dicts.forEach(dict => DictionaryService.set(dict));\r\n  }\r\n\r\n  public static get(key: string, whenNull: string | null = null): string {\r\n    if (!key.includes('/')) {\r\n      return DictionaryService._words[key] || whenNull || key;\r\n    }\r\n\r\n    return key.split('/').map((part) => DictionaryService.get(part, part)).join('/');\r\n  }\r\n\r\n  public static getAll(): Record<string, string> {\r\n    return DictionaryService._words;\r\n  }\r\n\r\n  public static set(words: Record<string, string>, replace?: boolean): void;\r\n  public static set(key: string, value: string, replace?: boolean): void;\r\n  public static set(keyOrWords: IEntry<string> | string, valueOrReplace: string | boolean | null = null, replace: boolean = false): void {\r\n    if (keyOrWords instanceof Object) {\r\n      Object\r\n        .entries(keyOrWords)\r\n        .forEach(([ key, _value ]: string[]) =>\r\n          DictionaryService.set(key, _value, Boolean(valueOrReplace))\r\n        );\r\n\r\n      return;\r\n    }\r\n\r\n    if (DictionaryService.has(keyOrWords) && !replace) {\r\n      return;\r\n    }\r\n\r\n    DictionaryService._words[keyOrWords] = String(valueOrReplace);\r\n  }\r\n\r\n  public static has(key: string): boolean {\r\n    return !isEmpty(DictionaryService._words[key]);\r\n  }\r\n\r\n  public get(key: string, whenNull: string | null = null): string | null {\r\n    return DictionaryService.get(key, whenNull);\r\n  }\r\n\r\n  public getAll(): IEntry<string> {\r\n    return DictionaryService._words;\r\n  }\r\n\r\n  public set(keyOrWords: IEntry<string> | string, value: string | null = null, replace: boolean = false): void {\r\n    if (keyOrWords instanceof Object) {\r\n      DictionaryService.set(keyOrWords);\r\n      return;\r\n    }\r\n\r\n    DictionaryService.set(keyOrWords, value, replace);\r\n  }\r\n\r\n  public has(key: string): boolean {\r\n    return DictionaryService.has(key);\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { Debounce } from '@core/decorators/debounce.decorator';\r\nimport { getFadeInOutAnimation } from '@core/utils/animations.util';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { NzPopoverDirective } from 'ng-zorro-antd/popover';\r\nimport { ISearchResult } from '@app/layout/header/models/header.search.model';\r\nimport { NzListComponent } from 'ng-zorro-antd/list';\r\nimport { NavigationService } from '@core/services/navigation.service';\r\nimport { HeaderSearchService } from '@app/layout/header/components/header-search/header-search.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { GlobalSearchType } from '@shared/global-search/global-search.model';\r\n\r\n@Component( {\r\n  selector: 'app-header-search',\r\n  templateUrl: './header-search.component.html',\r\n  styleUrls: [ './header-search.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ getFadeInOutAnimation() ],\r\n  providers: [ NzListComponent, HeaderSearchService ]\r\n} )\r\nexport class HeaderSearchComponent {\r\n  public isActiveSearch: boolean = false;\r\n  public value: string = null;\r\n  public results$: Observable<ISearchResult | null>;\r\n  public query: string = '';\r\n\r\n  @MarkForCheck\r\n  public loading: boolean = false;\r\n\r\n  @ViewChild( 'inputRef' )\r\n  public inputRef: ElementRef<HTMLInputElement>;\r\n\r\n  @ViewChild( 'searchRef', {read: NzPopoverDirective} )\r\n  public searchRef: NzPopoverDirective;\r\n\r\n  private _subscription: Subscription;\r\n  private _isFocus: boolean;\r\n\r\n  constructor(\r\n    private $navigate: NavigationService,\r\n    private $service: HeaderSearchService,\r\n    private _cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  public toggleSearch(): void {\r\n    this.toggleActive();\r\n\r\n    if (this.isActiveSearch) {\r\n      this.open();\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  public focus(): void {\r\n    this._isFocus = true;\r\n    this.inputRef.nativeElement.focus();\r\n  }\r\n\r\n  public blur(): void {\r\n    this._isFocus = false;\r\n    this.close();\r\n  }\r\n\r\n  @Debounce( 500 )\r\n  public open(): void {\r\n    this.focus();\r\n    this.searchRef.show();\r\n    this.results$ = this.$service\r\n      .getQuery$( this.inputRef )\r\n      .pipe(\r\n        switchMap( ( query: string ) => {\r\n          this.query = query;\r\n          return this.$service.getResultsByQuery$( query );\r\n        } )\r\n      );\r\n  }\r\n\r\n  @Debounce( 250 )\r\n  public close(): void {\r\n    if (this._isFocus) {\r\n      return;\r\n    }\r\n\r\n    this._subscription?.unsubscribe();\r\n    this._subscription = null;\r\n    this.searchRef?.hide();\r\n\r\n    if (this.inputRef) {\r\n      this.inputRef.nativeElement.value = '';\r\n    }\r\n\r\n    if (this.isActiveSearch) {\r\n      this.toggleActive();\r\n    }\r\n  }\r\n\r\n  public openItem( type: GlobalSearchType, data: Record<string, any> ): void {\r\n    this.$service.openItem( type, data );\r\n  }\r\n\r\n  private toggleActive(): void {\r\n    this.isActiveSearch = !this.isActiveSearch;\r\n  }\r\n}\r\n","<div #searchRef\r\n     class=\"search\"\r\n     [nz-popover]\r\n     [nzPopoverTrigger]=\"null\"\r\n     [nzPopoverContent]=\"searchResultTpl\"\r\n     [nzPopoverPlacement]=\"'bottomLeft'\"\r\n     [nzPopoverOverlayClassName]=\"'header-search-results'\"\r\n>\r\n  <input #inputRef\r\n         *ngIf=\"isActiveSearch\"\r\n         nz-input\r\n         [placeholder]=\"'StartWritingWhatYouWantFind' | translate\"\r\n         (blur)=\"blur()\"\r\n         (click)=\"focus()\"\r\n         class=\"search__control animate__animated animate__fadeInLeft\"\r\n  >\r\n  <i nz-icon\r\n     [nzType]=\"'search'\"\r\n     [nzTheme]=\"'outline'\"\r\n     [nz-tooltip]=\"'Поиск'\"\r\n     (click)=\"toggleSearch()\"\r\n     class=\"search__icon\"\r\n  ></i>\r\n</div>\r\n\r\n<ng-template #searchResultTpl>\r\n  <div class=\"header-search-results\">\r\n    <ng-container *ngIf=\"(results$ | async) as results; else noSearchQueryResultsTpl\">\r\n      <ng-container *ngIf=\"results.length; else emptysearchResultTpl\">\r\n        <perfect-scrollbar class=\"header-search-results__scroll\">\r\n          <nz-list *ngFor=\"let resultGroup of results\">\r\n            <nz-list-header>\r\n              <ng-container\r\n                *ngTemplateOutlet=\"searchResultHeaderTpl; context: {$implicit: resultGroup.title, type: resultGroup.type}\"\r\n              >\r\n              </ng-container>\r\n            </nz-list-header>\r\n\r\n            <ng-container *ngFor=\"let item of resultGroup.items | slice : 0: 3\">\r\n              <ng-container *ngTemplateOutlet=\"searchResultItemTpl; context: item\"></ng-container>\r\n            </ng-container>\r\n          </nz-list>\r\n        </perfect-scrollbar>\r\n\r\n        <nz-divider></nz-divider>\r\n        <div class=\"text-center\">\r\n          <a [routerLink]=\"['search']\"\r\n             [queryParams]=\"{query: inputRef.nativeElement.value}\"\r\n          >\r\n            {{'ViewAllResults' | translate}}\r\n          </a>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #searchResultItemTpl\r\n             let-type\r\n             let-title=\"title\"\r\n             let-data=\"data\"\r\n             let-img=\"img\"\r\n>\r\n  <nz-list-item class=\"header-search-results__item\"\r\n                (click)=\"openItem(type, data)\"\r\n  >\r\n    <nz-list-item-meta>\r\n      <nz-list-item-meta-avatar [nzSrc]=\"img | imageBlob | async\"></nz-list-item-meta-avatar>\r\n      <nz-list-item-meta-title>\r\n        <span [innerHTML]=\"title | highlight : query\"></span>\r\n      </nz-list-item-meta-title>\r\n\r\n      <nz-list-item-meta-description [ngSwitch]=\"type\">\r\n        <ng-container *ngSwitchCase=\"'user'\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"searchResultItemDescriptionUserTpl; context: {$implicit: data}\"></ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'customObject'\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"searchResultItemReserveItemTpl; context: {$implicit: data}\"></ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'room'\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"searchResultItemReserveItemTpl; context: {$implicit: data}\"></ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'workplace'\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"searchResultItemReserveItemTpl; context: {$implicit: data}\"></ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase=\"'parkingLot'\">\r\n          <ng-container\r\n            *ngTemplateOutlet=\"searchResultItemReserveItemTpl; context: {$implicit: data}\"></ng-container>\r\n        </ng-container>\r\n      </nz-list-item-meta-description>\r\n    </nz-list-item-meta>\r\n  </nz-list-item>\r\n</ng-template>\r\n\r\n<ng-template #searchResultHeaderTpl\r\n             let-title\r\n             let-type=\"type\"\r\n>\r\n  <div class=\"header-search-results__title\">\r\n    <span nz-typography nzType=\"link\">\r\n      <a [routerLink]=\"['search', type]\"\r\n         [queryParams]=\"{query: inputRef.nativeElement.value}\"\r\n      >\r\n        {{title | translate}}\r\n      </a>\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #noSearchQueryResultsTpl>\r\n  <nz-empty [nzNotFoundContent]=\"'PleaseEnterQueryForSearch' | translate\"\r\n            [nzNotFoundImage]=\"noSearchQueryResultsIconTpl\"\r\n  ></nz-empty>\r\n</ng-template>\r\n\r\n<ng-template #noSearchQueryResultsIconTpl>\r\n  <i nz-icon nzType=\"search\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n\r\n<ng-template #emptysearchResultTpl>\r\n  <nz-empty [nzNotFoundContent]=\"'EmptySearchResults' | translate\"\r\n            [nzNotFoundImage]=\"emptyResultsIconTpl\"\r\n  ></nz-empty>\r\n</ng-template>\r\n\r\n<ng-template #emptyResultsIconTpl>\r\n  <i nz-icon nzType=\"frown\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n\r\n<ng-template #searchResultItemDescriptionUserTpl\r\n             let-data\r\n>\r\n   <span *ngIf=\"data.post\">\r\n     {{'Post'| translate}}: <span [innerHTML]=\"data.post | highlight : query\"></span>\r\n   </span>\r\n  <span *ngIf=\"data.post && (data.phones || data.mail)\">, </span>\r\n  <span *ngIf=\"data.phones\">\r\n    {{'Phones' | translate}}: <span [innerHTML]=\"data.phones | highlight : query\"></span>\r\n  </span>\r\n  <span *ngIf=\"data.phones && data.mail\">, </span>\r\n  <span *ngIf=\"data.mail\">\r\n    {{'Email' | translate}}: <span [innerHTML]=\"data.mail | highlight : query\"></span>\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #searchResultItemReserveItemTpl\r\n             let-data\r\n>\r\n  {{'Building' | translate}}: {{data.building}}, {{'Floor' | translate}}: {{data.floor}}\r\n  <div *ngIf=\"data.description\"\r\n       [innerHTML]=\"data.description | highlight : query\"\r\n  >\r\n  </div>\r\n</ng-template>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ConfigService } from '@core/services/config.service';\r\n\r\nconst LOCAL_IMAGE_REGEXP: RegExp = /^(\\.)?(\\/)?assets/;\r\n\r\n@Pipe({\r\n  name: 'fullImageUrl'\r\n})\r\nexport class FullImageUrlPipe implements PipeTransform {\r\n  private static _hostUrl: string = '';\r\n\r\n  constructor(\r\n    private $config: ConfigService\r\n  ) {\r\n    if (!FullImageUrlPipe._hostUrl) {\r\n      this.$config\r\n        .getOne$<string>('hostUrl')\r\n        .subscribe((hostUrl: string) =>\r\n          FullImageUrlPipe._hostUrl = hostUrl.endsWith('/') ? hostUrl.slice(0, -1) : hostUrl\r\n        );\r\n    }\r\n  }\r\n\r\n  public transform(imageUrl: string): string | null {\r\n    if (!imageUrl) {\r\n      return null;\r\n    }\r\n\r\n    if (LOCAL_IMAGE_REGEXP.test(imageUrl)) {\r\n      return imageUrl;\r\n    }\r\n\r\n    if (imageUrl.startsWith('/')) {\r\n      imageUrl = imageUrl.slice(1);\r\n    }\r\n\r\n    return `${FullImageUrlPipe._hostUrl}/${imageUrl}`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FilterCheckboxComponent } from '@base/filters/filter-checkbox/filter-checkbox.component';\r\nimport { FilterComponent } from '@base/filters/filters/filter.component';\r\nimport { FilterCheckboxGroupComponent } from '@base/filters/filter-checkbox-group/filter-checkbox-group.component';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { FilterDateComponent } from '@base/filters/filter-date/filter-date.component';\r\nimport { FilterDateTimeComponent } from '@base/filters/filter-date-time/filter-date-time.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FilterComponent,\r\n    FilterCheckboxComponent,\r\n    FilterCheckboxGroupComponent,\r\n    FilterDateComponent,\r\n    FilterDateTimeComponent,\r\n  ],\r\n  imports: [CoreModule.forChild(), PerfectScrollbarModule],\r\n  exports: [\r\n    FilterComponent,\r\n    FilterCheckboxComponent,\r\n    FilterCheckboxGroupComponent,\r\n    FilterDateComponent,\r\n    FilterDateTimeComponent,\r\n  ],\r\n})\r\nexport class FiltersModule {}\r\n","export enum ColorAlias {\r\n  active = '#FADB14',\r\n  danger = '#FF4D4F',\r\n  default = '#8C8C8C',\r\n  error = '#FF4D4F',\r\n  neutral = '#8C8C8C',\r\n  warning = '#FA8C16',\r\n  success = '#3FA80B',\r\n  primary = '#40a9ff'\r\n}\r\nexport type ColorAliasType = 'active' | 'danger' | 'default' | 'error' | 'neutral' | 'warning' | 'success' | 'primary';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SafeUrl } from '@angular/platform-browser';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ImageBlobService } from '@shared/images/services/image-blob.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Pipe( {\r\n  name: 'imageBlob'\r\n} )\r\nexport class ImageBlobPipe implements PipeTransform {\r\n  private static _blobs: Map<string, SafeUrl> = new Map<string, SafeUrl>();\r\n\r\n  constructor( private $images: ImageBlobService ) {\r\n  }\r\n\r\n  public get blobs(): Map<string, SafeUrl> {\r\n    return ImageBlobPipe._blobs\r\n  }\r\n\r\n  public transform( url: string ): Observable<SafeUrl> {\r\n    if (this.blobs.has(url)) {\r\n      return of( this.blobs.get(url) );\r\n    }\r\n\r\n    return this.$images\r\n      .getImageBlob( url )\r\n      .pipe(\r\n        tap( ( blob: SafeUrl ) => this.blobs.set(url, blob) )\r\n      );\r\n  }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { CommonFunction } from '../types/function.type';\r\n\r\nexport function Complete(\r\n  target: any,\r\n  propertyKey: string,\r\n  descriptor: PropertyDescriptor\r\n): PropertyDescriptor {\r\n  const { name } = target?.constructor || {};\r\n\r\n  const originalMethod: CommonFunction = descriptor.value;\r\n  if (typeof originalMethod !== 'function') {\r\n    console.error(`Complete decorator error: The property '${propertyKey} of ${name} is not a function`);\r\n    return;\r\n  }\r\n\r\n  descriptor.value = function newMethod(...args) {\r\n    try {\r\n      Object.values(this)\r\n        .filter((prop) => prop instanceof Subject)\r\n        .forEach((subject: Subject<any>) => subject?.complete());\r\n    } catch (e) {\r\n      console.error(`Complete decorator error: Can't complete some subjects of ${name}`);\r\n      console.error(e.message);\r\n    }\r\n\r\n    originalMethod.apply(this, args);\r\n  };\r\n\r\n  return descriptor;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { IDictionary, IDictionaryLabels } from '@shared/dictionaries/dictionaries.model';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport {\r\n  filterDictionaryItems,\r\n  ITEMS_ROUTES,\r\n  mapItemsToBuildings,\r\n  mapItemsToFloorMaps,\r\n  mapSearchResult\r\n} from '@shared/global-search/global-search.utils';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport {\r\n  GlobalSearchType,\r\n  IGlobalSearchResult,\r\n  IGlobalSearchResultGroup\r\n} from '@shared/global-search/global-search.model';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\nimport { NavigationService } from '@core/services/navigation.service';\r\n\r\n@Injectable()\r\nexport class GlobalSearchService {\r\n  constructor(\r\n    private $dictionaries: DictionariesService,\r\n    private $buildings: BuildingsService,\r\n    private $floorMaps: FloorMapsService,\r\n    private $navigate: NavigationService\r\n  ) {\r\n  }\r\n\r\n  public search( query: string, filterEmpty: boolean = true ): Observable<IGlobalSearchResult> {\r\n    return this\r\n      .joinSearchResult( query )\r\n      .pipe(\r\n        map( result => !filterEmpty\r\n          ? result\r\n          : result.filter( group => group.items.length > 0 )\r\n        )\r\n      );\r\n  }\r\n\r\n  public searchUsers( query: string ): Observable<IGlobalSearchResultGroup> {\r\n    return this\r\n      .searchByDictionary<IDictionaryLabels>( 'labels', query, 'user' )\r\n      .pipe(\r\n        map( ( labels ) => mapSearchResult( labels, 'Users', 'user' ) )\r\n      );\r\n  }\r\n\r\n  public searchCustomObjects( query: string ): Observable<IGlobalSearchResultGroup> {\r\n    return this\r\n      .searchByDictionary<IDictionary>( 'customObjects', query, 'customObject' )\r\n      .pipe(\r\n        switchMap( customObjects => this.mapItemsToFloorMaps( customObjects ) ),\r\n        switchMap( customObjects => this.mapItemsToBuildings( customObjects ) ),\r\n        map( ( customObjects ) => mapSearchResult( customObjects, 'CustomObjects', 'customObject' ) )\r\n      );\r\n  }\r\n\r\n  public searchWorkplaces( query: string ): Observable<IGlobalSearchResultGroup> {\r\n    return this\r\n      .searchByDictionary<IDictionary>( 'workplaces', query, 'workplace' )\r\n      .pipe(\r\n        switchMap( workplaces => this.mapItemsToFloorMaps( workplaces ) ),\r\n        switchMap( workplaces => this.mapItemsToBuildings( workplaces ) ),\r\n        map( ( workplaces ) => mapSearchResult( workplaces, 'Workplaces', 'workplace' ) )\r\n      );\r\n  }\r\n\r\n  public searchRooms( query: string ): Observable<IGlobalSearchResultGroup> {\r\n    return this\r\n      .searchByDictionary<IDictionary>( 'rooms', query, 'room' )\r\n      .pipe(\r\n        switchMap( rooms => this.mapItemsToFloorMaps( rooms ) ),\r\n        switchMap( rooms => this.mapItemsToBuildings( rooms ) ),\r\n        map( ( rooms ) => mapSearchResult( rooms, 'Rooms', 'room' ) )\r\n      );\r\n  }\r\n\r\n  public searchParkingLots( query: string ): Observable<IGlobalSearchResultGroup> {\r\n    return this\r\n      .searchByDictionary<IDictionary>( 'parkingLots', query, 'parkingLot' )\r\n      .pipe(\r\n        switchMap( parkingLots => this.mapItemsToFloorMaps( parkingLots ) ),\r\n        switchMap( parkingLots => this.mapItemsToBuildings( parkingLots ) ),\r\n        map( ( parkingLots ) => mapSearchResult( parkingLots, 'ParkingLots', 'parkingLot' ) )\r\n      );\r\n  }\r\n\r\n  private searchByDictionary<T extends IDictionary>( name: DictionaryName, query: string, type: GlobalSearchType ): Observable<T> {\r\n    return this.$dictionaries\r\n      .getDictionary<T>( name, [] )\r\n      .pipe(\r\n        map( items => filterDictionaryItems<T>( items, query, type ) )\r\n      );\r\n  }\r\n\r\n  public openItem( type: GlobalSearchType, data: Record<string, any> ): void {\r\n    const route: string[] = ITEMS_ROUTES[ type ].slice( 0 );\r\n\r\n    if (type !== 'user') {\r\n      route.push( data.buildingId );\r\n    }\r\n\r\n    route.push( String( data.id ) );\r\n\r\n    this.$navigate.go( route, {} );\r\n  }\r\n\r\n  private mapItemsToFloorMaps( items ): Observable<IDictionary> {\r\n    return this.$floorMaps.allFloorMapsOne$.pipe(\r\n      map( floorMaps => mapItemsToFloorMaps( items, floorMaps ) )\r\n    );\r\n  }\r\n\r\n  private mapItemsToBuildings( items ): Observable<IDictionary> {\r\n    return this.$buildings.allBuildingsOne$.pipe(\r\n      map( buildings => mapItemsToBuildings( items, buildings ) )\r\n    );\r\n  }\r\n\r\n  private joinSearchResult( query: string ): Observable<IGlobalSearchResult> {\r\n    return forkJoin( [\r\n      this.searchUsers( query ),\r\n      this.searchWorkplaces( query ),\r\n      this.searchRooms( query ),\r\n      this.searchCustomObjects( query ).pipe(tap(console.log)),\r\n      this.searchParkingLots( query )\r\n    ] );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, pluck } from 'rxjs/operators';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\nexport class ImageBlobService {\r\n  constructor( private $http: HttpService, private $sanitizer: DomSanitizer ) {\r\n  }\r\n\r\n  getImageBlob( url: string ): Observable<SafeUrl> {\r\n    if (!url) {\r\n      return of( null );\r\n    }\r\n\r\n    return this.$http.get( url, {}, {responseType: 'blob'} )\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        pluck( 'data' ),\r\n        map( ( blob ) =>\r\n          this.$sanitizer.bypassSecurityTrustUrl( URL.createObjectURL( blob ) )\r\n        )\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list.less of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  bootConfigUrl: './assets/config/boot.config.json',\r\n  localizationsUrl: './assets/i18n/',\r\n  indexedDbCacheResponse: true,\r\n  authType: 'basic',\r\n  apiUrl: '/rest',\r\n  appVersion: require('../../package.json').version + '-dev',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Injectable} from '@angular/core';\r\nimport {ConfigService} from '@core/services/config.service';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {LocalizationService} from '@core/services/localization.service';\r\nimport {Observable} from 'rxjs';\r\nimport {NzSelectOptionInterface} from 'ng-zorro-antd/select/select.types';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HeaderLocaleService {\r\n  private readonly _langCookieName: string;\r\n  private readonly _langCookieTime: number = 315360000;\r\n\r\n  constructor(\r\n    private $config: ConfigService,\r\n    private $cookie: CookieService,\r\n    private $localization: LocalizationService\r\n  ) {\r\n    this._langCookieName = this.$config.get<string>('langCookieName');\r\n  }\r\n\r\n  public get currentLang$(): Observable<string> {\r\n    return this.$localization.currentLang$.pipe(\r\n      map(lang => `lang-${lang}`)\r\n    );\r\n  }\r\n\r\n  public get langsOptions(): NzSelectOptionInterface[] {\r\n    return this.$config\r\n      .get<string[]>('langs')\r\n      .map(lang => ({\r\n        label: `lang-${lang}`,\r\n        value: lang\r\n      }));\r\n  }\r\n\r\n  public changeLang(lang: string): void {\r\n    this.$localization\r\n      .use(lang)\r\n      .subscribe(() => {\r\n        this.$cookie.set(this._langCookieName, lang, this._langCookieTime);\r\n      });\r\n  }\r\n}\r\n","import {TrackByFunction} from '@angular/core';\r\nimport {IEntry} from '../models/common.model';\r\n\r\n/*\r\n * Check empty utils\r\n */\r\nexport function isUndefined(value: any): boolean {\r\n  return typeof value === 'undefined';\r\n}\r\n\r\nexport function isEmpty(value: any = null, checkArray: boolean = false): boolean {\r\n  return (\r\n    isUndefined(value) ||\r\n    value === null ||\r\n    String(value).trim() === '' ||\r\n    (checkArray && isEmptyArray(value))\r\n  );\r\n}\r\n\r\nexport function isEmptyArray(value: Array<any>): boolean {\r\n  return (\r\n    Array.isArray(value) &&\r\n    (\r\n      value.length === 0 ||\r\n      value.every((item) =>\r\n        isEmpty(item, true)\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport function checkEmpty(value: any, whenEmpty: string = '') {\r\n  return !isEmpty(value) ? value : whenEmpty;\r\n}\r\n\r\n/*\r\n * Check date utils\r\n */\r\nexport function isDate(value: any): value is Date {\r\n  return value instanceof Date;\r\n}\r\n\r\nexport function isDateArray(arr: any[], strict: boolean = false): arr is Array<Date> {\r\n  return strict\r\n    ? arr.every(item => isDate(item))\r\n    : arr.some(item => isDate(item));\r\n}\r\n\r\nexport function toString(value: any): string {\r\n  if (value === null) {\r\n    return '';\r\n  }\r\n\r\n  if (isDate(value)) {\r\n    return dateToString(value);\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return value\r\n      .map(item =>\r\n        toString(item)\r\n      )\r\n      .join(',');\r\n  }\r\n\r\n  return String(value);\r\n}\r\n\r\nexport function dateToString(date: Date): string {\r\n  return date.toISOString();\r\n}\r\n\r\n/*\r\n * Check object of interface implementation\r\n */\r\nexport function instanceOfI<T>(obj: any, props: Array<string>): obj is T;\r\nexport function instanceOfI<T>(obj: any, props: IEntry<any>, strict?: boolean): obj is T;\r\nexport function instanceOfI<T>(obj: any, ...props: Array<string>): obj is T;\r\nexport function instanceOfI<T>(obj: any, ...props: any[]): obj is T {\r\n  const strict: boolean = typeof props[1] === 'boolean' && props[1];\r\n\r\n  if (typeof props[0] === 'object') {\r\n    props = props[0];\r\n  }\r\n\r\n  if (Array.isArray(props)) {\r\n    return props.every(key => key in obj);\r\n  }\r\n\r\n  return Object.entries(props).every(([key, value]) =>\r\n    strict ? obj[key] === value : key in obj\r\n  );\r\n}\r\n\r\n/*\r\n * Common track by function for *ngFor-directive\r\n */\r\nexport function trackByFactory<T = any, R = any>(property: string | null = null): TrackByFunction<T> {\r\n  return function trackByFunction(index: number, item: T): R {\r\n    return property ? item[property] : item;\r\n  };\r\n}\r\n\r\n/*\r\n * Take first from object\r\n */\r\nexport function takeFirstFromObject(obj: object): [string, any] {\r\n  return Object.entries(obj).shift();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, NavigationExtras, Router, UrlSegment } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { fromPromise } from 'rxjs/internal-compatibility';\r\n\r\n@Injectable()\r\nexport class NavigationService {\r\n  constructor(\r\n    private $router: Router,\r\n    private $route: ActivatedRoute\r\n  ) {\r\n  }\r\n\r\n  public changeQueryParams( queryParams: Record<string, any> ): Promise<boolean> {\r\n    return this.$router.navigate( [], {relativeTo: this.$route, queryParams} );\r\n  }\r\n\r\n  public go( route: string | string[], relativeTo: ActivatedRoute ): Promise<boolean>;\r\n  public go( route: string | string[], extras?: NavigationExtras ): Promise<boolean>;\r\n  // public go(route: string | string[], relativeTo: ActivatedRoute, extras?: NavigationExtras): Promise<boolean>;\r\n  public go( route: string | string[], relativeTo: ActivatedRoute | NavigationExtras = null, extras?: NavigationExtras ): Promise<boolean> {\r\n    if (!( relativeTo instanceof ActivatedRoute )) {\r\n      extras = relativeTo;\r\n    } else {\r\n      extras = {...extras, relativeTo};\r\n    }\r\n\r\n    return this.$router.navigate( [].concat( route ), extras );\r\n  }\r\n\r\n  public goToUrl( route: string, relativeTo: ActivatedRoute ): Promise<boolean>;\r\n  public goToUrl( route: string, extras?: NavigationExtras ): Promise<boolean>;\r\n  // public goToUrl(route: string, relativeTo: ActivatedRoute, extras?: NavigationExtras): Promise<boolean> ;\r\n  public goToUrl(\r\n    route: string,\r\n    relativeTo: ActivatedRoute | NavigationExtras = null,\r\n    extras?: NavigationExtras\r\n  ): Promise<boolean> {\r\n    if (!( relativeTo instanceof ActivatedRoute )) {\r\n      extras = relativeTo;\r\n    } else {\r\n      extras = {...extras, relativeTo};\r\n    }\r\n\r\n    return this.$router.navigateByUrl( route, extras );\r\n  }\r\n\r\n  public reload(): Observable<any> {\r\n    const currentRoute: UrlSegment[] = this.$route.snapshot.url;\r\n\r\n    return fromPromise(\r\n      this.$router\r\n        .navigateByUrl( '/1', {skipLocationChange: true} )\r\n        .then( () =>\r\n          this.$router.navigate( currentRoute )\r\n        )\r\n    );\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DictionaryService} from '../services/dictionary.service';\r\n\r\n@Pipe({\r\n  name: 'dictionary'\r\n})\r\nexport class DictionaryPipe implements PipeTransform {\r\n  public constructor(\r\n    private $dict: DictionaryService\r\n  ) {\r\n  }\r\n  public transform(key: string, whenNull: string | null = null): string | null {\r\n    return this.$dict.get(key, whenNull || key);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzBreadCrumbModule } from 'ng-zorro-antd/breadcrumb';\r\nimport { NzAlertModule } from 'ng-zorro-antd/alert';\r\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\r\nimport { NzCollapseModule } from 'ng-zorro-antd/collapse';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\r\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzNotificationModule } from 'ng-zorro-antd/notification';\r\nimport { NzPageHeaderModule } from 'ng-zorro-antd/page-header';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { NzTagModule } from 'ng-zorro-antd/tag';\r\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzConfig } from 'ng-zorro-antd/core/config';\r\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\r\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\r\nimport { NzProgressModule } from 'ng-zorro-antd/progress';\r\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\r\n\r\nexport const NG_ZORRO_CONFIG: NzConfig = {\r\n  message: {\r\n    nzTop: 57,\r\n    nzDuration: 3000,\r\n  },\r\n  notification: {\r\n    nzTop: 57,\r\n    nzDuration: 3000,\r\n  },\r\n};\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [\r\n    NzButtonModule,\r\n    NzIconModule,\r\n    NzInputModule,\r\n    NzInputNumberModule,\r\n    NzDropDownModule,\r\n    NzBreadCrumbModule,\r\n    NzAlertModule,\r\n    NzCheckboxModule,\r\n    NzCollapseModule,\r\n    NzDatePickerModule,\r\n    NzDividerModule,\r\n    NzEmptyModule,\r\n    NzFormModule,\r\n    NzGridModule,\r\n    NzLayoutModule,\r\n    NzMenuModule,\r\n    NzModalModule,\r\n    NzNotificationModule,\r\n    NzPageHeaderModule,\r\n    NzRadioModule,\r\n    NzSelectModule,\r\n    NzSpinModule,\r\n    NzSwitchModule,\r\n    NzTableModule,\r\n    NzTabsModule,\r\n    NzTagModule,\r\n    NzTimePickerModule,\r\n    NzToolTipModule,\r\n    NzAvatarModule,\r\n    NzBadgeModule,\r\n    NzCardModule,\r\n    NzSliderModule,\r\n    NzSkeletonModule,\r\n    NzProgressModule,\r\n    NzPopoverModule,\r\n    NzTypographyModule\r\n  ],\r\n})\r\nexport class AntdModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Localizable } from '@core/models/localization.model';\r\nimport { isEmpty } from '@core/utils/common.util';\r\n\r\n@Pipe({\r\n  name: 'localize'\r\n})\r\nexport class LocalizePipe implements PipeTransform {\r\n  public transform(\r\n    value: Localizable,\r\n    lang: string | null = null\r\n  ): string | null {\r\n\r\n    if (typeof value === 'string') {\r\n      return value;\r\n    }\r\n\r\n    lang = LocalizePipe.getLang(value, lang);\r\n\r\n    if (isEmpty(value)) {\r\n      return null;\r\n    }\r\n\r\n    if (!lang || !value[lang]) {\r\n      return value.toString();\r\n    }\r\n\r\n    return value[lang];\r\n  }\r\n\r\n  private static getLang(value: Record<string, string>, lang: string | null = null): string | null {\r\n    return lang || Object.keys(value).shift() || null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlobalSearchService } from '@shared/global-search/global-search.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    GlobalSearchService\r\n  ]\r\n})\r\nexport class GlobalSearchModule { }\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {NzSelectOptionInterface} from 'ng-zorro-antd/select/select.types';\r\nimport {Subscribe} from '@core/decorators/subscribe.decorator';\r\nimport { HeaderLocaleService } from '@app/layout/header/components/header-locale/header-locale.service';\r\n\r\n@Component({\r\n  selector: 'app-header-locale',\r\n  templateUrl: './header-locale.component.html',\r\n  styleUrls: ['./header-locale.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [HeaderLocaleService],\r\n  host: {\r\n    '[class.header-locale]': `true`\r\n  }\r\n})\r\nexport class HeaderLocaleComponent implements OnInit, OnDestroy {\r\n  public langsOptions: NzSelectOptionInterface[] = [];\r\n\r\n  @Subscribe<string>()\r\n  public currentLang: string = this.$service.currentLang$ as any;\r\n\r\n  constructor(\r\n    private $service: HeaderLocaleService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  public changeLang(lang: string): void {\r\n    this.$service.changeLang(lang);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.langsOptions = this.$service.langsOptions;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n}\r\n","<a nz-dropdown\r\n   [nzDropdownMenu]=\"langMenu\"\r\n   [nzTrigger]=\"'click'\"\r\n   href=\"javascript:void(0)\"\r\n   class=\"profile\"\r\n>\r\n  <i nz-icon\r\n     [nzType]=\"'icons:' + currentLang\"\r\n     [nz-tooltip]=\"currentLang | dictionary\"\r\n     [nzTooltipMouseEnterDelay]=\".5\"\r\n     class=\"header-locale__icon\"\r\n  >\r\n  </i>\r\n</a>\r\n\r\n<nz-dropdown-menu #langMenu=\"nzDropdownMenu\">\r\n  <ul nz-menu>\r\n    <li *ngFor=\"let langOption of langsOptions\"\r\n        nz-menu-item\r\n\r\n        (click)=\"changeLang(langOption.value)\"\r\n    >\r\n      <i nz-icon\r\n         [nzType]=\"'icons:'+langOption.label\"\r\n         class=\"header-locale__icon\"\r\n      >\r\n      </i>\r\n      {{langOption.label  | dictionary}}\r\n    </li>\r\n  </ul>\r\n</nz-dropdown-menu>\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { delay, filter, shareReplay, switchMap, tap } from 'rxjs/operators';\r\nimport { IHttpResponse } from '@core/models/http.model';\r\nimport { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';\r\nimport { Complete } from '@core/decorators/complete.decorator';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { SharedService } from '@shared/shared.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable( {providedIn: 'root'} )\r\nexport class AppService {\r\n  private _ready$: ReplaySubject<boolean> = new ReplaySubject<boolean>( 1 );\r\n  private _configReady$: ReplaySubject<boolean> = new ReplaySubject<boolean>( 1 );\r\n  private _error$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>( null );\r\n\r\n  public constructor(\r\n    private $config: ConfigService,\r\n    private $http: HttpService,\r\n    private $localization: LocalizationService,\r\n    private $shared: SharedService,\r\n    private $cookie: CookieService\r\n  ) {\r\n  }\r\n\r\n  public get error(): string | null {\r\n    return this._error$.getValue();\r\n  }\r\n\r\n  public get configReady$(): Observable<boolean> {\r\n    return this._configReady$.asObservable();\r\n  }\r\n\r\n  public get ready$(): Observable<boolean> {\r\n    return this._ready$.asObservable();\r\n  }\r\n\r\n  public get error$(): Observable<string | null> {\r\n    return this._error$.asObservable().pipe( shareReplay( 1 ) );\r\n  }\r\n\r\n  public set error( error: string ) {\r\n    this._error$.next( error );\r\n    this._error$.complete();\r\n  }\r\n\r\n  public configReady(): void {\r\n    this._configReady$.next( true );\r\n    this._configReady$.complete();\r\n  }\r\n\r\n  public ready(): void {\r\n    this._ready$.next( true );\r\n    this._ready$.complete();\r\n  }\r\n\r\n  public bootstrap(): Promise<any> {\r\n    return this.initializeConfig()\r\n      .pipe(\r\n        delay( 500 ),\r\n        switchMap( () => this.loadAppConfig() ),\r\n        switchMap( () => this.$shared.checkVersion() ),\r\n        switchMap( () => this.loadLocalization() ),\r\n        switchMap( () => this.$shared.initialize() ),\r\n        shareReplay( 1 )\r\n      )\r\n      .toPromise()\r\n      .then( () => null )\r\n      .catch( ( {message}: Error ) => {\r\n        console.error( message );\r\n        return message;\r\n      } )\r\n      .then( ( error: string ) => this.finishBootstrap( error ) );\r\n  }\r\n\r\n  @Complete\r\n  public destroy(): void {\r\n  }\r\n\r\n  private initializeConfig(): Observable<any> {\r\n    return this.$config\r\n      .initialize()\r\n      .pipe(\r\n        filter( Boolean ),\r\n        tap( () => {\r\n          if (this.$config.initializationError) {\r\n            throw new Error( `Ошибка запуска приложения: ${this.$config.initializationError} ` );\r\n          }\r\n        } )\r\n      );\r\n  }\r\n\r\n  private loadAppConfig(): Observable<any> {\r\n    const appConfigUrl: string = this.$config.get<string>( 'appConfigUrl' );\r\n\r\n    if (!appConfigUrl) {\r\n      throw new Error( 'Ошибка запуска приложения: Не задан адрес для загрузки конфигурации приложения' );\r\n    }\r\n\r\n    return this.$http.get( appConfigUrl ).pipe(\r\n      filterNoProgressHttpEvent(),\r\n      tap( ( {success, data, error}: IHttpResponse<Record<string, any>> ) => {\r\n        if (success) {\r\n          this.$config.setValues( data );\r\n        } else {\r\n          throw new Error( `Ошибка загрузки конфигурации приложения: ${error?.message || error}` );\r\n        }\r\n        this.configReady();\r\n      } )\r\n    );\r\n  }\r\n\r\n  private loadLocalization(): Observable<any> {\r\n    const langCookieName: string = this.$config.get( 'langCookieName' );\r\n    const defaultLang: string = this.$localization.browserDefaultLang ||\r\n      this.$config.get<string>( 'defaultLang' );\r\n    const langs: string[] = this.$config.get<string[]>( 'langs' );\r\n    const lang: string = this.$cookie.get( langCookieName ) || this.$config.get<string>( 'lang' );\r\n\r\n    this.$localization.defaultLang = defaultLang;\r\n    this.$localization.langs = langs;\r\n\r\n    return this.$localization.initialize( lang );\r\n  }\r\n\r\n  private finishBootstrap( error: string | null ): void {\r\n    const globalLoader: HTMLElement = document.querySelector<HTMLElement>( '.global-loader' );\r\n\r\n    if (globalLoader) {\r\n      globalLoader.classList.add( '_hidden' );\r\n\r\n      setTimeout( () => {\r\n        this.ready();\r\n        globalLoader.remove();\r\n\r\n        if (error) {\r\n          this.error = error;\r\n        }\r\n      }, 1500 );\r\n    }\r\n  }\r\n}\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, Input, ViewChild} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {PerfectScrollbarConfigInterface} from 'ngx-perfect-scrollbar/lib/perfect-scrollbar.interfaces';\r\nimport {PS_CONFIG} from '@base/filters/filters.uttils';\r\nimport {PerfectScrollbarComponent} from 'ngx-perfect-scrollbar';\r\nimport {IFilterCheckboxGroup, IFilterCheckboxGroups} from '@base/filters/models/filter-checkbox.model';\r\n\r\n@Component({\r\n  selector: 'app-filter-checkbox-group',\r\n  templateUrl: './filter-checkbox-group.component.html',\r\n  styleUrls: ['./filter-checkbox-group.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    ['class.filter-checkbox-group']: `true`\r\n  },\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => FilterCheckboxGroupComponent),\r\n    multi: true\r\n  }]\r\n})\r\nexport class FilterCheckboxGroupComponent implements ControlValueAccessor {\r\n  private _value: any[] = [];\r\n  public psConfig: PerfectScrollbarConfigInterface = PS_CONFIG;\r\n  public onChange: (value: any[]) => void = (_value: any[]) => {\r\n  };\r\n  public onTouched: () => void = () => {\r\n  };\r\n\r\n  @Input()\r\n  public title: string;\r\n\r\n  @Input()\r\n  public groups: IFilterCheckboxGroups = [];\r\n\r\n  @Input()\r\n  public maxHeight: string = '190px';\r\n\r\n\r\n  public get value(): any[] {\r\n    return this._value;\r\n  }\r\n\r\n  @Input()\r\n  public set value(value: any[]) {\r\n    this._value = value;\r\n    this.onChange(this._value);\r\n  }\r\n\r\n  @ViewChild(PerfectScrollbarComponent, {static: false, read: ElementRef})\r\n  public set viewChildPerfectScrollbarComponent(perfectScrollbarComponent: ElementRef) {\r\n    try {\r\n      const nativeElement: HTMLElement = perfectScrollbarComponent.nativeElement;\r\n\r\n      nativeElement.style.maxHeight = this.maxHeight;\r\n      (nativeElement.querySelector('.ps') as HTMLElement).style.maxHeight = this.maxHeight;\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  public applyGroupChange(group: IFilterCheckboxGroup, checked: boolean): void {\r\n    if (group.indeterminate) {\r\n      group.indeterminate = false;\r\n      group.checked = true;\r\n    }\r\n\r\n    group.options.forEach((option) => {\r\n      option.checked = group.checked;\r\n      this.applyOptionChange(option.value, checked);\r\n    });\r\n  }\r\n\r\n  public applyOptionChange(value: any, checked: boolean): void {\r\n    if (checked && !this.value.includes(value)) {\r\n      this.value = this.value.concat(value);\r\n      return;\r\n    }\r\n\r\n    if (!checked && this.value.includes(value)) {\r\n      this.value = this.value.filter(_value => value !== _value);\r\n    }\r\n  }\r\n\r\n  public checkGroupSelection(group: IFilterCheckboxGroup): void {\r\n    const checked: boolean = group.options.every(({checked}) => checked);\r\n\r\n    group.checked = checked;\r\n    group.indeterminate = !checked && group.options.some(({checked}) => checked);\r\n  }\r\n\r\n  public registerOnChange(onChange: (value: any[]) => void): void {\r\n    this.onChange = onChange;\r\n  }\r\n\r\n  public registerOnTouched(onTouched: () => void): void {\r\n    this.onTouched = onTouched;\r\n  }\r\n\r\n  public writeValue(value: any[]): void {\r\n    this.value = value;\r\n\r\n    this.updateCheckedGroups();\r\n  }\r\n\r\n  private updateCheckedGroups(): void {\r\n    this.groups?.forEach(group => {\r\n      group.options.forEach(option =>\r\n        option.checked = this.value.includes(option.value)\r\n      );\r\n\r\n      this.checkGroupSelection(group);\r\n    });\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","<perfect-scrollbar [config]=\"{ suppressScrollX: true }\">\r\n  <ng-container *ngFor=\"let group of groups\">\r\n    <div class=\"filter-checkbox-group__group\">\r\n      <div class=\"filter-checkbox-group__header\">\r\n        <label\r\n          nz-checkbox\r\n          [(ngModel)]=\"group.checked\"\r\n          [nzIndeterminate]=\"group.indeterminate\"\r\n          (ngModelChange)=\"applyGroupChange(group, $event)\"\r\n          class=\"group-checkbox\"\r\n        >\r\n          {{ group.label }}\r\n        </label>\r\n      </div>\r\n\r\n      <ng-container *ngFor=\"let option of group.options\">\r\n        <label\r\n          nz-checkbox\r\n          [(ngModel)]=\"option.checked\"\r\n          (ngModelChange)=\"\r\n            applyOptionChange(option.value, $event); checkGroupSelection(group)\r\n          \"\r\n        >\r\n          {{ option.label }}\r\n        </label>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <nz-empty\r\n    *ngIf=\"!groups?.length\"\r\n    [nzNotFoundContent]=\"'NoSelectableValues' | dictionary | translate\"\r\n  >\r\n  </nz-empty>\r\n</perfect-scrollbar>\r\n","export function getStartDate(date: Date): number {\r\n  return (new Date(date)).setHours(0, 0, 0, 0);\r\n}\r\n\r\nexport function getEndDate(date: Date | number): number {\r\n  return (new Date(date)).setHours(23, 59, 59, 59);\r\n}\r\n\r\nexport function getMinDate(...date: Array<Date | null>): null | Date {\r\n  const min: number | null = Math.min(...date.filter(Boolean).map(date => date.getTime()));\r\n  return min === Infinity ? null : new Date(min);\r\n}\r\n\r\nexport function getMaxDate(...date: Array<Date | null>): null | Date {\r\n  const max: number | null = Math.max(...date.filter(Boolean).map(date => date.getTime()));\r\n  return max === -Infinity ? null : new Date(max);\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { IDictionaryMeasurements, IMeasurements, Measurement } from '@shared/dictionaries/models/measurements.model';\r\nimport {\r\n  MEASUREMENTS_DEFAULT_VALUES,\r\n  MEASUREMENTS_DICT_NAME,\r\n  MEASUREMENTS_URL_KEY\r\n} from '@shared/dictionaries/constants/measurements.constant';\r\nimport { DictionaryService } from '@shared/dictionaries/services/dictionary.service';\r\nimport { Observable } from 'rxjs';\r\nimport { pluck } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MeasurementsService extends DictionaryService<IDictionaryMeasurements> {\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector);\r\n    this._dictionaryName = MEASUREMENTS_DICT_NAME;\r\n  }\r\n\r\n  public get measurements$(): Observable<IMeasurements> {\r\n    return this.value$.pipe(\r\n      pluck('measurements')\r\n    );\r\n  }\r\n\r\n  public get measurements(): IMeasurements {\r\n    return this.value.measurements;\r\n  }\r\n\r\n  public getMeasurementByName$(measurement: Measurement): Observable<string | null> {\r\n    return this.measurements$.pipe(pluck(measurement));\r\n  }\r\n\r\n  public getMeasurementByName(measurement: Measurement): string | null {\r\n    return this.measurements[measurement];\r\n  }\r\n\r\n  public initialize(): Observable<any> {\r\n    return super.initialize(MEASUREMENTS_URL_KEY, MEASUREMENTS_DEFAULT_VALUES);\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'objectFirstKey'\r\n})\r\nexport class ObjectFirstKeyPipe implements PipeTransform {\r\n  public transform(object: Object | null = null): string | null {\r\n    const keys: string[] = object ? Object.keys(object) : [];\r\n\r\n    return keys.length > 0 ? keys.shift() : null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport {\r\n  ERROR_CODE_KEY,\r\n  EXCEPTION_KEY,\r\n  FAILURE_KEY,\r\n  SUCCESS_KEY,\r\n} from '@app/shared/http/utils/constants.util';\r\nimport { processSuccessResponseObject } from '@core/utils/common.util';\r\nimport {\r\n  transformErrorCode,\r\n  transformErrorMessage,\r\n} from '@app/shared/http/utils/error-code.util';\r\nimport { IApiV2ResponseSuccess } from '@shared/http/models/response.model';\r\n\r\n@Injectable()\r\nexport class ProcessResponseInterceptor implements HttpInterceptor {\r\n  private static processResponse<T = any>(\r\n    event: HttpEvent<any>\r\n  ): Observable<HttpEvent<T>> {\r\n    if (event instanceof HttpResponse && 'data' in event.body) {\r\n      return ProcessResponseInterceptor.processSuccessResponseApiV2<T>(\r\n        event as HttpResponse<IApiV2ResponseSuccess<T>>\r\n      );\r\n    }\r\n\r\n    if (event instanceof HttpResponse && SUCCESS_KEY in event.body) {\r\n      return ProcessResponseInterceptor.processSuccessResponse<T>(event);\r\n    }\r\n\r\n    if (event instanceof HttpResponse && FAILURE_KEY in event.body) {\r\n      return ProcessResponseInterceptor.processErrorResponse<T>(event);\r\n    }\r\n\r\n    if (event instanceof HttpErrorResponse && FAILURE_KEY in event.error) {\r\n      return ProcessResponseInterceptor.processErrorResponse<T>(event);\r\n    }\r\n\r\n    return of(event);\r\n  }\r\n\r\n  private static processSuccessResponse<T = any>(\r\n    event: HttpResponse<T>\r\n  ): Observable<HttpResponse<T>> {\r\n    const { headers, statusText, status, url }: HttpResponse<T> = event;\r\n\r\n    return of(\r\n      new HttpResponse({\r\n        body: processSuccessResponseObject<T>(event.body),\r\n        headers,\r\n        status,\r\n        statusText,\r\n        url,\r\n      })\r\n    );\r\n  }\r\n\r\n  private static processSuccessResponseApiV2<T = any>(\r\n    event: HttpResponse<IApiV2ResponseSuccess<T>>\r\n  ): Observable<HttpResponse<T>> {\r\n    const {\r\n      headers,\r\n      statusText,\r\n      status,\r\n      url,\r\n      body,\r\n    }: HttpResponse<IApiV2ResponseSuccess<T>> = event;\r\n\r\n    return of(\r\n      new HttpResponse({\r\n        body: body.data,\r\n        headers,\r\n        status,\r\n        statusText,\r\n        url,\r\n      })\r\n    );\r\n  }\r\n\r\n  private static processErrorResponse<T = any>(\r\n    event: HttpResponse<T> | HttpErrorResponse\r\n  ): Observable<HttpEvent<T>> {\r\n    const {\r\n      headers,\r\n      statusText,\r\n      status,\r\n      url,\r\n    }: HttpResponse<T> | HttpErrorResponse = event;\r\n    const body: Record<string, any> =\r\n      event instanceof HttpErrorResponse ? event.error : event.body;\r\n    return throwError(\r\n      new HttpErrorResponse({\r\n        error: {\r\n          exception: body[EXCEPTION_KEY],\r\n          message: transformErrorMessage(body[FAILURE_KEY]),\r\n          code: transformErrorCode(body[ERROR_CODE_KEY]),\r\n        },\r\n        headers,\r\n        status,\r\n        statusText,\r\n        url,\r\n      })\r\n    );\r\n  }\r\n\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    handler: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return handler.handle(request).pipe(\r\n      switchMap((event: HttpEvent<any>) =>\r\n        ProcessResponseInterceptor.processResponse(event)\r\n      ),\r\n      catchError((event: HttpErrorResponse) =>\r\n        ProcessResponseInterceptor.processErrorResponse(event)\r\n      )\r\n    );\r\n  }\r\n}\r\n","import {\r\n  IAppointment,\r\n  IWorkplaceReservation,\r\n} from '@src/app/shared/http/models/database.model';\r\nimport { addDays, getHours } from 'date-fns';\r\nimport { IReservationByQr } from './reservation-by-qr.model';\r\n\r\nexport const getInitDate = (\r\n  workHours: number[],\r\n  minDuration: number\r\n): Date[] => {\r\n  const now = new Date();\r\n  const nowHour: number = now.getHours();\r\n  const nowWithMinDuration: Date = new Date(now.getTime() + minDuration);\r\n  const time = getTimeRangeValue(workHours);\r\n  const [startWorkHour, endWorkHour] = time.map((t) => getHours(new Date(t)));\r\n  const endDate: Date = setHours(now, workHours[1]);\r\n\r\n  if (nowHour < endWorkHour && nowHour <= startWorkHour) {\r\n    return [setHours(now, startWorkHour), endDate];\r\n  } else if (nowHour < endWorkHour) {\r\n    return [now, endDate];\r\n  } else if (nowWithMinDuration > endDate) {\r\n    const nextDay = addDays(now, 1);\r\n    return [setHours(nextDay, startWorkHour), setHours(nextDay, endWorkHour)];\r\n  }\r\n};\r\n\r\nexport const getTimeRangeValue = (range: number[]): number[] => {\r\n  const [startWorkHour, endWorkHour] = range;\r\n  const sliderLimitDate: Date[] = [new Date(), new Date()];\r\n  sliderLimitDate[0].setHours(startWorkHour, 0, 0, 0);\r\n  sliderLimitDate[1].setHours(endWorkHour, 0, 0, 0);\r\n  return sliderLimitDate.map((date) => date.getTime());\r\n};\r\n\r\nexport const setHours = (date: Date, hours: number): Date => {\r\n  const newDate = new Date(date);\r\n  newDate.setHours(hours, 0, 0, 0);\r\n  return newDate;\r\n};\r\n\r\nexport const getReservationId = (reservation: IReservationByQr): number => {\r\n  let reservationId: number;\r\n  if (reservation?.objectType === 'APPOINTMENT') {\r\n    reservationId = Number(\r\n      (reservation?.extraDataWorkplaceReservation as IAppointment)?.appointmentId\r\n    );\r\n  } else {\r\n    reservationId = (\r\n      reservation?.extraDataWorkplaceReservation as IWorkplaceReservation\r\n    )?.workplaceId;\r\n  }\r\n  return reservationId;\r\n};\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { IMapRendererOptions } from '../../renderer.model';\r\nimport { RendererComponent } from '../../renderer.component';\r\n\r\n@Component({\r\n  selector: 'app-map-renderer',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: [ './map.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MapRendererComponent<T extends IMapRendererOptions = IMapRendererOptions> extends RendererComponent<T> implements OnInit {\r\n  public get mappedValue(): any {\r\n    return (this.options as T)?.map?.[this.value] || this.value;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.value = this.mappedValue;\r\n  }\r\n}\r\n","{{value}}\r\n","import {Injectable} from '@angular/core';\r\nimport {NotificationsService} from './notifications.service';\r\nimport {MonoTypeOperatorFunction} from 'rxjs';\r\nimport {IHttpResponse, IHttpResponseNotificationMessages} from '../models/http.model';\r\nimport {tap} from 'rxjs/operators';\r\nimport {processResponseError} from '../utils/http.util';\r\nimport {DictionaryService} from './dictionary.service';\r\n\r\n@Injectable()\r\nexport class HttpHelperService {\r\n  public constructor(\r\n    private $notifications: NotificationsService\r\n  ) {\r\n  }\r\n\r\n  public responseNotification<T>(\r\n    notificationMessages: IHttpResponseNotificationMessages = {},\r\n    processError: Function = processResponseError\r\n  ): MonoTypeOperatorFunction<IHttpResponse<T>> {\r\n    const {successTitle, errorTitle, successMessage, connectionFailedMessage}: IHttpResponseNotificationMessages = notificationMessages;\r\n    let {title, errorMessage}: IHttpResponseNotificationMessages = notificationMessages;\r\n\r\n    return tap(({state, error, connection, success}: IHttpResponse<any>): MonoTypeOperatorFunction<IHttpResponse<T>> => {\r\n      if (state === 'pending') {\r\n        return;\r\n      }\r\n\r\n      title = success\r\n        ? successTitle || title || DictionaryService.get('Notification')\r\n        : errorTitle || title || DictionaryService.get('Error');\r\n      errorMessage = !connection && connectionFailedMessage\r\n        ? connectionFailedMessage\r\n        : processError(error) || errorMessage;\r\n\r\n      if (success && successMessage) {\r\n        this.$notifications.success(title, successMessage);\r\n        return;\r\n      }\r\n\r\n      if (!success) {\r\n        this.$notifications.error(title, errorMessage);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { environment } from '@src/environments/environment';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\n// tslint:disable-next-line:typedef\r\nexport function TranslateHttpLoaderFactory(httpClient: HttpClient) {\r\n  return new TranslateHttpLoader(httpClient, environment.localizationsUrl);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [ TranslateModule.forRoot({\r\n    loader: {\r\n      provide: TranslateLoader,\r\n      useFactory: TranslateHttpLoaderFactory,\r\n      deps: [ HttpClient ]\r\n    },\r\n    isolate: false\r\n  }) ],\r\n  exports: [\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class TranslationModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ICard } from '@base/card/card.model';\r\n\r\n@Injectable()\r\nexport class CardService {\r\n  constructor() { }\r\n  get card(): ICard {\r\n    return {\r\n      title: 'Test title',\r\n      width: '320px',\r\n      image: 'https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png',\r\n      descriptionList: [\r\n        { name: 'Статус', value: 'Подтверждено'},\r\n        { name: 'Начало', value: '14.02.2020 16:15'},\r\n        { name: 'Окончание', value: '14.02.2020 18:00'},\r\n        { name: 'Номер', value: '22-17'},\r\n        { name: 'Помещение', value: 'Desk'},\r\n        { name: 'Отдел', value: '22-17'},\r\n      ],\r\n      tags: ['Монитор', 'Телевизор', 'Мягкий стул', 'Internet port', 'Проектор']\r\n    };\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, Input, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { IFilterCheckBoxOptions } from '@base/filters/models/filter-checkbox.model';\r\nimport { PerfectScrollbarComponent } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar/lib/perfect-scrollbar.interfaces';\r\nimport { PS_CONFIG } from '@base/filters/filters.uttils';\r\n\r\n@Component({\r\n  selector: 'app-filter-checkbox',\r\n  templateUrl: './filter-checkbox.component.html',\r\n  styleUrls: [ './filter-checkbox.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    ['class.filter-checkbox']: `true`\r\n  },\r\n  providers: [ {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => FilterCheckboxComponent),\r\n    multi: true\r\n  } ]\r\n})\r\nexport class FilterCheckboxComponent implements ControlValueAccessor {\r\n  private _value: any[] = [];\r\n  public disabled: boolean = false;\r\n  public psConfig: PerfectScrollbarConfigInterface = PS_CONFIG;\r\n  public options: IFilterCheckBoxOptions = [];\r\n  public filterOptionsValue: string | null = null;\r\n  public sourceOptions: IFilterCheckBoxOptions = [];\r\n  public onChange: (value: any[]) => void = (value: any[]) => {\r\n  };\r\n  public onTouched: () => void = () => {\r\n  };\r\n\r\n  @Input('options')\r\n  public set inputOptions(sourceOptions: IFilterCheckBoxOptions) {\r\n    this.sourceOptions = sourceOptions;\r\n    this.filterOptions();\r\n  }\r\n\r\n  @Input()\r\n  public placeholder: string = '';\r\n\r\n  @Input()\r\n  public maxHeight: string = 'auto';\r\n\r\n  @Input()\r\n  public label: TemplateRef<any> | null = null;\r\n\r\n  @Input()\r\n  public allowSearch: boolean = false;\r\n\r\n  @Input()\r\n  public emptyMessage: string = 'NoSelectableValues';\r\n\r\n  @Input()\r\n  public allowEmpty: boolean = true;\r\n\r\n  @Input()\r\n  public allowSelectAll: boolean = false;\r\n\r\n  public get value(): any[] {\r\n    return this._value;\r\n  }\r\n\r\n  @Input()\r\n  public set value(value: any[]) {\r\n    this._value = value;\r\n    this.onChange(this._value);\r\n\r\n    if (this.allowEmpty) {\r\n      return;\r\n    }\r\n\r\n    if (this.value.length === 1) {\r\n      this.options.filter(({ value }) => value === this.value[0]).forEach(option => option.disabled = true);\r\n    } else {\r\n      this.options.filter(({ disabled }) => disabled).forEach(option => option.disabled = false);\r\n    }\r\n  }\r\n\r\n  @ViewChild(PerfectScrollbarComponent, { static: false, read: ElementRef })\r\n  public set viewChildPerfectScrollbarComponent(perfectScrollbarComponent: ElementRef) {\r\n    try {\r\n      const nativeElement: HTMLElement = perfectScrollbarComponent.nativeElement;\r\n\r\n      nativeElement.style.maxHeight = this.maxHeight;\r\n      (nativeElement.querySelector('.ps') as HTMLElement).style.maxHeight = this.maxHeight;\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  public applyChanges(value: any, checked: boolean): void {\r\n    if (checked && !this.value.includes(value)) {\r\n      this.value = this.value.concat(value);\r\n      return;\r\n    }\r\n\r\n    if (!checked && this.value.includes(value)) {\r\n      this.value = this.value.filter(_value => _value !== value);\r\n      return;\r\n    }\r\n  }\r\n\r\n  public filterOptions(): void {\r\n    if (!this.filterOptionsValue) {\r\n      this.options = this.sourceOptions;\r\n      return;\r\n    }\r\n\r\n    const filterOptionsValue = this.filterOptionsValue.toLowerCase();\r\n\r\n    this.options = this.sourceOptions.filter(({ label }) =>\r\n      label.toLowerCase().includes(filterOptionsValue)\r\n    );\r\n  }\r\n\r\n  public registerOnChange(onChange: (value: any[]) => void): void {\r\n    this.onChange = onChange;\r\n  }\r\n\r\n  public registerOnTouched(onTouched: () => void): void {\r\n    this.onTouched = onTouched;\r\n  }\r\n\r\n  public writeValue(value: any[] | string): void {\r\n    if (value === '*') {\r\n      value = this.options?.map(({ value }) => value) || [];\r\n    }\r\n\r\n    this.value = value as any[];\r\n    this.updateCheckedOptions();\r\n  }\r\n\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  public selectAll(allSelected: boolean): void {\r\n    this.options\r\n      .filter((_, index) => this.allowEmpty || index > 0)\r\n      .forEach((option) => {\r\n        option.checked = allSelected;\r\n        this.applyChanges(option.value, allSelected);\r\n      });\r\n  }\r\n\r\n  private updateCheckedOptions(): void {\r\n    this.options.forEach(option =>\r\n      option.checked = this.value.includes(option.value)\r\n    );\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","<nz-form-item *ngIf=\"allowSearch\"\r\n              class=\"filter-checkbox__search\"\r\n>\r\n  <nz-input-group [nzSuffixIcon]=\"'search'\">\r\n    <input nz-input\r\n           placeholder=\"{{placeholder | dictionary | translate}}\"\r\n           [(ngModel)]=\"filterOptionsValue\"\r\n           (ngModelChange)=\"filterOptions()\"\r\n           [disabled]=\"sourceOptions.length === 0\"\r\n    />\r\n  </nz-input-group>\r\n</nz-form-item>\r\n\r\n<nz-form-item *ngIf=\"allowSelectAll\"\r\n              class=\"filter-checkbox__all\"\r\n>\r\n  <label nz-checkbox\r\n         [ngModel]=\"value.length === options.length\"\r\n         [nzIndeterminate]=\"value.length > 0 && value.length !== options.length\"\r\n         (ngModelChange)=\"selectAll($event)\"\r\n  >\r\n    {{'All' | dictionary | translate}}\r\n  </label>\r\n</nz-form-item>\r\n\r\n<perfect-scrollbar *ngIf=\"maxHeight !== 'auto'; else optionsTpl\"\r\n                   [config]=\"{suppressScrollX: true}\"\r\n                   [ngStyle]=\"{'max-height': maxHeight}\"\r\n                   class=\"app-list-filter-item__scroll\"\r\n>\r\n  <ng-container *ngTemplateOutlet=\"optionsTpl\"></ng-container>\r\n</perfect-scrollbar>\r\n\r\n<ng-template #optionsTpl>\r\n  <ng-container *ngFor=\"let option of options\">\r\n    <label nz-checkbox\r\n           [(ngModel)]=\"option.checked\"\r\n           [nzDisabled]=\"option.checked && !allowEmpty && value.length === 1\"\r\n           (ngModelChange)=\"applyChanges(option.value, $event)\"\r\n    >\r\n      <ng-container *ngTemplateOutlet=\"label || labelTpl; context: option\"></ng-container>\r\n    </label>\r\n  </ng-container>\r\n\r\n  <nz-empty *ngIf=\"!options?.length\"\r\n            [nzNotFoundContent]=\"emptyMessage | dictionary | translate\"\r\n  >\r\n  </nz-empty>\r\n</ng-template>\r\n\r\n<ng-template #labelTpl\r\n             let-label=\"label\"\r\n>\r\n  {{label}}\r\n</ng-template>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n} from '@angular/core';\r\nimport { INavigations } from '@app/layout/navigation/navigation.model';\r\nimport { HeaderService } from '@app/layout/header/header.service';\r\nimport { INotifications } from '@app/layout/header/components/header-notifications/header-notifications.model';\r\nimport { NzModalService } from 'ng-zorro-antd/modal';\r\nimport { ReservationByQRComponent } from '@src/app/base/reservation-by-qr/reservation-by-qr.component';\r\n\r\n@Component({\r\n  selector: 'app-navigation-mobile',\r\n  templateUrl: './navigation-mobile.component.html',\r\n  styleUrls: ['./navigation-mobile.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationMobileComponent {\r\n  @Input() readonly items: INavigations;\r\n  public notifications: INotifications;\r\n  constructor(\r\n    private $header: HeaderService,\r\n    private $modalService: NzModalService\r\n  ) {\r\n    this.notifications = this.$header.notifications;\r\n  }\r\n\r\n  showModal(): void {\r\n    this.$modalService.create({\r\n      nzStyle: {\r\n        top: '0',\r\n        color: 'red',\r\n        margin: '0',\r\n        padding: '0',\r\n        maxWidth: '100vw',\r\n        maxHeight: '100vh',\r\n        width: '100%',\r\n        height: '100%',\r\n      },\r\n      nzBodyStyle: {\r\n        height: '100%',\r\n        padding: '0'\r\n      },\r\n      nzContent: ReservationByQRComponent,\r\n      nzFooter: null\r\n    });\r\n  }\r\n}\r\n","<nav class=\"navigation-mobile\">\r\n  <ng-container *ngFor=\"let item of items\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        item.children?.length > 0 ? subItemTpl : itemTpl;\r\n        context: { item: item }\r\n      \"\r\n    ></ng-container>\r\n  </ng-container>\r\n  <a class=\"navigation-mobile__item\" nz-tooltip=\"Уведомления\">\r\n    <app-header-notifications\r\n      indentClass=\"bottom-indent\"\r\n    ></app-header-notifications>\r\n  </a>\r\n</nav>\r\n\r\n<ng-template #itemTpl let-item=\"item\">\r\n  <a\r\n    *ngIf=\"!item.openModal\"\r\n    [routerLink]=\"item.url\"\r\n    class=\"navigation-mobile__item\"\r\n    [nz-tooltip]=\"item.title\"\r\n  >\r\n    <i nz-icon [nzType]=\"item.icon\"></i>\r\n  </a>\r\n  <a\r\n    *ngIf=\"item.openModal\"\r\n    class=\"navigation-mobile__item\"\r\n    [nz-tooltip]=\"item.title\"\r\n    (click)=\"showModal()\"\r\n  >\r\n    <i nz-icon [nzType]=\"item.icon\"></i>\r\n  </a>\r\n</ng-template>\r\n<ng-template #subItemTpl let-item=\"item\">\r\n  <a\r\n    class=\"navigation-mobile__item\"\r\n    [nz-tooltip]=\"item.title\"\r\n    nz-dropdown\r\n    [nzDropdownMenu]=\"menu\"\r\n    [nzPlacement]=\"'topCenter'\"\r\n    nzTrigger=\"click\"\r\n    [nzOverlayClassName]=\"'navigation-mobile-dropdown'\"\r\n  >\r\n    <i nz-icon [nzType]=\"item.icon\"></i>\r\n  </a>\r\n  <nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n    <ul nz-menu>\r\n      <li\r\n        nz-menu-item\r\n        *ngFor=\"let child of item.children\"\r\n        [routerLink]=\"child.url\"\r\n      >\r\n        {{ child.title }}\r\n      </li>\r\n    </ul>\r\n  </nz-dropdown-menu>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CoreModule.forChild()\r\n  ],\r\n  providers: [\r\n    SettingsService\r\n  ]\r\n})\r\nexport class SettingsModule {\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'string'\r\n})\r\nexport class StringPipe implements PipeTransform {\r\n  public transform(value: any): string {\r\n    return String(value);\r\n  }\r\n}\r\n","import { Observable, Subscription } from 'rxjs';\r\nimport { CommonFunction } from '../types/function.type';\r\nimport { ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { detectCdr } from '@core/utils/decorators.utils';\r\n\r\nconst DESTROY_METHOD: string = 'ngOnDestroy';\r\n/*const DESTROY_IVY_METHOD: string = 'onDestroy';\r\nconst ECMP: string = 'ɵcmp';*/\r\n\r\n\r\nexport function Subscribe<T = any>(destroyMethodName: string = DESTROY_METHOD): any {\r\n  return (target: Function, key: string, descriptor?: PropertyDescriptor) => {\r\n    const instance = target.constructor.prototype;\r\n    const originalOnDestroy: () => void | null = instance[destroyMethodName];\r\n    const currentValue: symbol = Symbol('currentValue');\r\n    const currentSubscription: symbol = Symbol('currentSubscription');\r\n    const currentObservable: symbol = Symbol('currentObservable');\r\n\r\n    if (!originalOnDestroy){\r\n      console.error(`${target.constructor.name} is using Subscriptions decorator but doesn't implement ${destroyMethodName}`)\r\n    }\r\n\r\n    instance[destroyMethodName] = function newDestroyMethod(this: CommonFunction) {\r\n      dispose(this);\r\n\r\n      if (!!originalOnDestroy) {\r\n        originalOnDestroy.apply(this);\r\n      }\r\n    };\r\n\r\n    if (!descriptor) {\r\n      Object.defineProperty(target, key, {\r\n        configurable: true,\r\n        get: getterFactory<T>(),\r\n        set: setterFactory()\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (descriptor.set) {\r\n      descriptor.set = setterFactory(descriptor.set);\r\n    }\r\n\r\n    if (descriptor.get) {\r\n      descriptor.get = getterFactory<T>(descriptor.get);\r\n    }\r\n\r\n    function subscribe<T>(target: Function, observable: Observable<T>, originalSetter?: Function): void {\r\n      const cdr: ChangeDetectorRef = detectCdr(target);\r\n\r\n      if (target[currentObservable] !== observable) {\r\n        dispose(target);\r\n      }\r\n\r\n      if (!(observable instanceof Observable)) {\r\n        target[currentObservable] = null;\r\n        target[currentValue] = observable;\r\n        return;\r\n      }\r\n\r\n      target[currentObservable] = observable;\r\n      target[currentSubscription] = observable.subscribe(newValue => {\r\n        if (originalSetter) {\r\n          originalSetter.call(target, newValue);\r\n        } else {\r\n          target[currentValue] = newValue;\r\n        }\r\n\r\n        check(cdr);\r\n      });\r\n    }\r\n\r\n    function dispose(target: Function): void {\r\n      if (target[currentSubscription] instanceof Subscription) {\r\n        target[currentSubscription].unsubscribe();\r\n      }\r\n    }\r\n\r\n    function getterFactory<T>(originalGetter?: Function): () => T {\r\n      return function get(): T {\r\n        if (originalGetter) {\r\n          return originalGetter.call(this);\r\n        }\r\n\r\n        return this[currentValue];\r\n      };\r\n    }\r\n\r\n    function setterFactory<T>(originalSetter?: Function): (observable: any) => void {\r\n      return function set(observable: Observable<T>) {\r\n        subscribe<T>(this, observable, originalSetter);\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nfunction check(cdr: ChangeDetectorRef, checkType: 'markForCheck' | 'detectChanges' = 'markForCheck'): void {\r\n  if (cdr) {\r\n    switch (checkType) {\r\n      case 'detectChanges':\r\n        cdr.detectChanges();\r\n        break;\r\n\r\n      case 'markForCheck':\r\n        cdr.markForCheck();\r\n    }\r\n  }\r\n}\r\n","import { ISettings, ISettingsArray, Setting } from '@shared/settings/settings.model';\r\nimport { sortByFactory } from '@core/utils/sort.util';\r\n\r\nexport function getSettingsArray(settings: Partial<ISettings>): ISettingsArray {\r\n  return Object\r\n    .entries(settings)\r\n    .map(([name, value]: [Setting, any]) => ({name, value}))\r\n    .sort(sortByFactory('name'));\r\n}\r\n","import { CommonFunction } from '../types/function.type';\r\n\r\nexport function Debounce(delay: number = 300): MethodDecorator {\r\n  return (\r\n    target: any,\r\n    propertyKey: string,\r\n    descriptor: PropertyDescriptor\r\n  ): PropertyDescriptor => {\r\n    const timeoutMap: WeakMap<any, any> = new WeakMap<any, any>();\r\n    const originalMethod: CommonFunction = descriptor.value;\r\n\r\n    descriptor.value = function newMethod(...args): any {\r\n      clearTimeout(timeoutMap.get(this));\r\n      timeoutMap.set(\r\n        this,\r\n        setTimeout(() => {\r\n          originalMethod.apply(this, args);\r\n          timeoutMap.delete(this);\r\n        }, delay)\r\n      );\r\n    };\r\n\r\n    return descriptor;\r\n  };\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\n@Directive({\r\n  selector: '[appScroll]',\r\n})\r\nexport class PerfectScrollDirective {\r\n  public ps;\r\n  public container;\r\n\r\n  constructor(private element: ElementRef) {\r\n    this.container = element.nativeElement;\r\n    this.container.style.position = 'relative';\r\n\r\n    setTimeout(() => {\r\n      this.ps = new PerfectScrollbar(this.container, {\r\n        wheelPropagation: true,\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { ConfigService } from '@core/services/config.service';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { Injector } from '@angular/core';\r\nimport { DictionariesIndexedDb } from '@shared/dictionaries/dictionaries.indexed-db';\r\nimport { map, pluck, shareReplay, switchMap, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { DictionaryItemType, IDictionary } from '@shared/dictionaries/dictionaries.model';\r\n\r\n\r\nexport class DictionaryService<D extends IDictionary = IDictionary, V extends any = DictionaryItemType<D>> {\r\n  protected _value: V;\r\n  protected _dictionaryName: DictionaryName;\r\n  protected _value$: Observable<V>;\r\n\r\n  protected $config: ConfigService = this.injector.get(ConfigService);\r\n  protected $http: HttpService = this.injector.get(HttpService);\r\n  protected $localization: LocalizationService = this.injector.get(LocalizationService);\r\n  protected $indexedDb: DictionariesIndexedDb = this.injector.get(DictionariesIndexedDb);\r\n\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    this._value$ = this.$localization.currentLang$.pipe(\r\n      switchMap(lang =>\r\n        this.$indexedDb.getDictionaryItemByIndex(this._dictionaryName, 'lang', lang)\r\n      ),\r\n      switchMap(value => !!value\r\n        ? of(value)\r\n        : this.$indexedDb.getDictionaryItemByIndex(this._dictionaryName, 'default', 'true')\r\n      ),\r\n      shareReplay(1)\r\n    ) as Observable<V>;\r\n  }\r\n\r\n  protected get value$(): Observable<V> {\r\n    return this._value$;\r\n  }\r\n\r\n  protected get value(): V {\r\n    return this._value;\r\n  }\r\n\r\n  protected initialize(\r\n    urlKey: string = null,\r\n    defaultValues: D = [] as D\r\n  ): Observable<any> {\r\n    if (!this._dictionaryName) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.$indexedDb.getDictionary(this._dictionaryName).pipe(\r\n      switchMap((values) => !!values.length\r\n        ? of(true)\r\n        : of(this.$config.get<string>(urlKey)).pipe(\r\n          switchMap(url => !!url\r\n            ? this.loadDictionaryData(url)\r\n            : of(null)\r\n          ),\r\n          map((values) => values || defaultValues),\r\n          switchMap((values) =>\r\n            this.$indexedDb.addDictionary(this._dictionaryName, values)\r\n          )\r\n        )\r\n      ),\r\n      tap(() =>\r\n        this.value$.subscribe(value => this._value = value)\r\n      )\r\n    );\r\n  }\r\n\r\n  private loadDictionaryData(url: string): Observable<D> {\r\n    return this.$http.get(url).pipe(\r\n      pluck('data')\r\n    );\r\n  }\r\n}\r\n","export type SortByFunction<T extends object = Record<string, any>>\r\n  = (item1: T, item2: T) => number;\r\n\r\nexport function sortByFactory<T extends object = Record<string, any>>(\r\n  key: keyof T,\r\n  direction: number = 1\r\n): SortByFunction<T> {\r\n  return (item1: T, item2: T) =>\r\n    direction * (\r\n      item1[key] > item2[key] ? 1 : item1[key] < item2[key] ? -1 : 0\r\n    );\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {IEntry, IObjectComplexEntries, IObjectEntries} from '../models/common.model';\r\n\r\n@Pipe({\r\n  name: 'objectEntries'\r\n})\r\nexport class ObjectEntriesPipe implements PipeTransform {\r\n  public transform<T>(o: IEntry<T>, b: string, d: string): IObjectEntries;\r\n  public transform<T>(o: IEntry<T>, b: string, d: string, c: boolean): IObjectComplexEntries;\r\n  public transform<T>(\r\n    object: IEntry<T>,\r\n    orderBy: string = null,\r\n    orderDirection: string = 'ascend',\r\n    isComplexObject: boolean = false\r\n  ): IObjectEntries | IObjectComplexEntries {\r\n    let entries: IObjectEntries | IObjectComplexEntries;\r\n\r\n    if (typeof object !== 'object') {\r\n      return [];\r\n    } else if (typeof object === 'object' && Array.isArray(object)) {\r\n      return object;\r\n    }\r\n\r\n    entries = Object\r\n      .entries(object)\r\n      .map(([key, value]) =>\r\n        isComplexObject ? {...value, key} : {key, value}\r\n      );\r\n\r\n    if (orderBy !== null) {\r\n      const direction: number = orderDirection === 'descend' ? -1 : 1;\r\n      entries = entries.sort((a, b) => {\r\n        const orderByA = this.getPropertyByKeys(isComplexObject ? a : a.value, orderBy);\r\n        const orderByB = this.getPropertyByKeys(isComplexObject ? b : b.value, orderBy);\r\n\r\n        return orderByA > orderByB\r\n          ? direction\r\n          : (orderByA < orderByB\r\n              ? -direction\r\n              : 0\r\n          );\r\n      });\r\n    }\r\n\r\n    return entries;\r\n  }\r\n\r\n  private getPropertyByKeys(object: {}, keys: string | string[]): any {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    for (const key of keys) {\r\n      object = object[key] || {};\r\n    }\r\n\r\n    return object;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { setHours } from '@presentation/offices/offices-map/offices-map.utils';\r\nimport { addMilliseconds } from 'date-fns';\r\nimport { SupportTimeOptions } from 'ng-zorro-antd/date-picker/standard-types';\r\nimport { WORK_HOURS } from '../utils/filter-date.constants';\r\nimport {\r\n  disableDateFrom,\r\n  disableDateTo,\r\n  disableHoursFrom,\r\n  disableHoursTo,\r\n  disableMinutesFrom,\r\n  disableMinutesTo,\r\n  getDisabledHours,\r\n  timePickerDefaultOptions,\r\n} from '../utils/filter-date.utils';\r\n\r\n@Component({\r\n  selector: 'app-filter-date-time',\r\n  templateUrl: './filter-date-time.component.html',\r\n  styleUrls: ['./filter-date-time.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => FilterDateTimeComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class FilterDateTimeComponent implements ControlValueAccessor, OnInit {\r\n  @MarkForCheck\r\n  private _value: Array<Date | null> = [null, null];\r\n\r\n  @Input()\r\n  public format: string = 'yyyy-MM-dd';\r\n\r\n  @Input()\r\n  public workHours: number[] = WORK_HOURS;\r\n\r\n  @Input()\r\n  public minDuration: number = 3600000;\r\n\r\n  @Input()\r\n  public autoUpdateDateTo: boolean = false;\r\n\r\n  @Input()\r\n  public autoUpdateDateToFullDay: boolean = false;\r\n\r\n  private _disabledHours: number[] = [];\r\n  private _timePickerOptions: SupportTimeOptions;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  public get timePickerOptions(): SupportTimeOptions | null {\r\n    return this._timePickerOptions;\r\n  }\r\n\r\n  @Input()\r\n  public set value(value: Array<Date | null>) {\r\n    this._value = value;\r\n    this.onChange(this.value);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public get value(): Array<Date | null> {\r\n    return this._value;\r\n  }\r\n  public onChange: (value: Date[]) => void = (_value: Date[]) => {};\r\n  public onTouched: () => void = () => {};\r\n\r\n  public updateDateFrom(dateFrom: Date): void {\r\n    this.value[0] = dateFrom;\r\n\r\n    if (this.autoUpdateDateTo && this.value[1] < dateFrom) {\r\n      this.updateDateTo(\r\n        this.autoUpdateDateToFullDay\r\n          ? setHours(new Date(this.value[0]), this.workHours[1])\r\n          : addMilliseconds(this.value[0], this.minDuration)\r\n      );\r\n    } else {\r\n      this.updateValue();\r\n    }\r\n  }\r\n\r\n  public updateDateTo(dateTo: Date): void {\r\n    this.value[1] = dateTo;\r\n    this.updateValue();\r\n  }\r\n\r\n  public updateValue(): void {\r\n    this.value = this.value;\r\n  }\r\n\r\n  public registerOnChange(onChange: (value: Date[]) => void): void {\r\n    this.onChange = onChange;\r\n  }\r\n\r\n  public registerOnTouched(onTouched: () => void): void {\r\n    this.onTouched = onTouched;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._timePickerOptions = timePickerDefaultOptions(this.timePickerOptions);\r\n    this._disabledHours = getDisabledHours(this.workHours);\r\n  }\r\n\r\n  public disableDateFrom: (date: Date) => boolean = (date: Date): boolean => {\r\n    return disableDateFrom(date);\r\n  };\r\n\r\n  public disableDateTo: (date: Date) => boolean = (date: Date): boolean => {\r\n    return disableDateTo(date, this.value[0]);\r\n  };\r\n\r\n  public disableHoursFrom: () => number[] = (): number[] => {\r\n    return disableHoursFrom(this.value[0], this._disabledHours);\r\n  };\r\n\r\n  public disableHoursTo: () => number[] = (): number[] => {\r\n    return disableHoursTo(this.value[1], this.value[0], this._disabledHours);\r\n  };\r\n\r\n  public disableMinutesFrom: (hour: number) => number[] = (\r\n    hour: number\r\n  ): number[] => {\r\n    return disableMinutesFrom(\r\n      hour,\r\n      this.value[0],\r\n      disableHoursFrom(this.value[0], this._disabledHours)\r\n    );\r\n  };\r\n\r\n  public disableMinutesTo: (hour: number) => number[] = (\r\n    hour: number\r\n  ): number[] => {\r\n    return disableMinutesTo(\r\n      hour,\r\n      this.value[0],\r\n      this.value[1],\r\n      this._disabledHours\r\n    );\r\n  };\r\n\r\n  public writeValue(value: Array<Date | null> = []): void {\r\n    if (!value) {\r\n      this.value = [null, null];\r\n      return;\r\n    }\r\n\r\n    if (this.value[0] === value[0] && this.value[1] === value[1]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.value = value.map((item) =>\r\n        item instanceof Date ||\r\n        typeof item === 'string' ||\r\n        typeof item === 'number'\r\n          ? new Date(item)\r\n          : null\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n}\r\n","<form nz-form>\r\n  <nz-form-item>\r\n    <nz-form-label>{{ \"From\" | dictionary | translate }}</nz-form-label>\r\n    <nz-form-control>\r\n      <div class=\"date-time\">\r\n        <nz-date-picker\r\n          name=\"from-date\"\r\n          [nzPlaceHolder]=\"'From' | dictionary | translate\"\r\n          [nzFormat]=\"format\"\r\n          [nzDisabledDate]=\"disableDateFrom\"\r\n          [ngModel]=\"value[0]\"\r\n          (ngModelChange)=\"updateDateFrom($event)\"\r\n        >\r\n        </nz-date-picker>\r\n        <nz-time-picker\r\n          name=\"from-date-time\"\r\n          [ngModel]=\"value[0]\"\r\n          [nzDefaultOpenValue]=\"timePickerOptions.nzDefaultOpenValue\"\r\n          [nzFormat]=\"timePickerOptions.nzFormat\"\r\n          [nzMinuteStep]=\"timePickerOptions.nzMinuteStep\"\r\n          [nzHideDisabledOptions]=\"timePickerOptions.nzHideDisabledOptions\"\r\n          [nzDisabledHours]=\"disableHoursFrom\"\r\n          [nzDisabledMinutes]=\"disableMinutesFrom\"\r\n          (ngModelChange)=\"updateDateFrom($event)\"\r\n        ></nz-time-picker>\r\n      </div>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label>{{ \"To\" | dictionary | translate }}</nz-form-label>\r\n    <nz-form-control>\r\n      <div class=\"date-time\">\r\n        <nz-date-picker\r\n          name=\"to-date\"\r\n          [nzPlaceHolder]=\"'To' | dictionary | translate\"\r\n          [nzFormat]=\"format\"\r\n          [nzDisabledDate]=\"disableDateTo\"\r\n          [(ngModel)]=\"value[1]\"\r\n          (ngModelChange)=\"updateDateTo($event)\"\r\n        >\r\n        </nz-date-picker>\r\n        <nz-time-picker\r\n          name=\"to-date-time\"\r\n          [(ngModel)]=\"value[1]\"\r\n          [nzDefaultOpenValue]=\"timePickerOptions.nzDefaultOpenValue\"\r\n          [nzFormat]=\"timePickerOptions.nzFormat\"\r\n          [nzMinuteStep]=\"timePickerOptions.nzMinuteStep\"\r\n          [nzHideDisabledOptions]=\"timePickerOptions.nzHideDisabledOptions\"\r\n          [nzDisabledHours]=\"disableHoursTo\"\r\n          [nzDisabledMinutes]=\"disableMinutesTo\"\r\n          (ngModelChange)=\"updateDateTo($event)\"\r\n        ></nz-time-picker>\r\n      </div>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutComponent } from '@app/layout/layout/layout.component';\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\nimport { HeaderModule } from '@app/layout/header/header.module';\r\nimport { NavigationModule } from '@app/layout/navigation/navigation.module';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { BreadcrumbModule } from '@base/breadcrumb/breadcrumb.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NavigationMobileModule } from '@app/layout/navigation-mobile/navigation-mobile.module';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { TitleModule } from '@base/title/title.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LayoutComponent],\r\n  exports: [LayoutComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CoreModule,\r\n    HeaderModule,\r\n    NavigationModule,\r\n    NavigationMobileModule,\r\n    BreadcrumbModule,\r\n    TitleModule,\r\n    NzIconModule,\r\n    NzLayoutModule,\r\n    NzSpinModule,\r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","import {IEntry} from './common.model';\r\n\r\ntype UrlStringify = (params: object, preStringify?: boolean) => string;\r\ntype UrlIncludesParam = (key: string) => boolean;\r\ntype UrlIncludesParams = (...keys: string[]) => boolean;\r\n\r\nexport interface IUrl extends Object {\r\n  stringify: UrlStringify;\r\n  includesParam: UrlIncludesParam;\r\n  includesParams: UrlIncludesParams;\r\n}\r\n\r\nexport class Url implements IUrl {\r\n  public stringify: UrlStringify;\r\n\r\n  private _includesParam: UrlIncludesParam;\r\n  private _includesParams: UrlIncludesParams;\r\n  private _pattern: string;\r\n\r\n  public constructor(\r\n    pattern: string,\r\n    params: IEntry<string> | null,\r\n    stringify: UrlStringify,\r\n    includesParam?: UrlIncludesParam,\r\n    includesParams?: UrlIncludesParams\r\n  ) {\r\n    this._pattern = pattern;\r\n    this.stringify = stringify;\r\n    this._includesParam = includesParam;\r\n    this._includesParams = includesParams;\r\n\r\n    if (params && Object.keys(params).length) {\r\n      this._pattern = this.stringify(params, true);\r\n    }\r\n  }\r\n\r\n  public get pattern(): string {\r\n    return this._pattern;\r\n  }\r\n\r\n  public includesParam(key: string): boolean | null {\r\n    if (typeof this._includesParam === 'function') {\r\n      return this.includesParam(key);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public includesParams(key: string[]): boolean | null;\r\n  public includesParams(key: string, ...keys: string[]): boolean | null;\r\n  public includesParams(key: string | string[], ...keys: string[]): boolean | null {\r\n    keys = key instanceof Array ? key : [].concat(key, keys);\r\n\r\n    if (typeof this._includesParams === 'function') {\r\n      return this.includesParams(keys);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { IndexedDbModule } from '@app/shared/indexed-db/indexed-db.module';\r\nimport { APP_DICTIONARY } from '@core/core.tokens';\r\nimport { SharedDictionary } from '@app/shared/shared.dictionary';\r\nimport { HttpModule } from '@app/shared/http/http.module';\r\nimport { DictionariesModule } from '@app/shared/dictionaries/dictionaries.module';\r\nimport { SharedService } from '@shared/shared.service';\r\nimport { SettingsModule } from '@shared/settings/settings.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [\r\n    DictionariesModule,\r\n    IndexedDbModule,\r\n    HttpModule,\r\n    SettingsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_DICTIONARY,\r\n      useValue: SharedDictionary,\r\n      multi: true\r\n    },\r\n    SharedService\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BaseApi } from '../../common/base/base.api';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { IHttpResponse } from '@src/app/core/models/http.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DpaApiService extends BaseApi {\r\n  private _apiUrl = environment.apiUrl;\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  assignDPA(params: Record<string, any> = {}): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/assignDPA', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  checkLastDPA(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/checkLastDPA', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  getLastDPA(): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getLastDPA')\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n}\r\n","export interface IUser {\r\n  id: number;\r\n  name: string;\r\n  avatarUrl: string;\r\n  tokenUUID?: string;\r\n  authorization?: string;\r\n  deviceId?: string;\r\n  labelGroups?: number[];\r\n  labelGroupsManager?: number[];\r\n  managers?: number[];\r\n\r\n  setLabelGroupsManager?(labelGroups: Record<string, any>[]): void;\r\n}\r\n\r\nexport class User implements IUser {\r\n  authorization?: string;\r\n  avatarUrl: string;\r\n  deviceId?: string;\r\n  id: number;\r\n  labelGroupsManager: number[];\r\n  labelGroups: number[];\r\n  name: string;\r\n  tokenUUID?: string;\r\n  managers?: number[] = [];\r\n  buildingsSequence?: number[];\r\n  floorMapsSequence?: number[];\r\n\r\n  constructor(user: Partial<IUser>) {\r\n    Object.assign(this, user);\r\n  }\r\n\r\n  setLabelGroupsManager(labelGroups: Record<string, any>[]): this {\r\n    this.labelGroupsManager = labelGroups\r\n      .filter(labelGroup => labelGroup.managers.includes(this.id))\r\n      .map(({ id }) => id);\r\n\r\n    return this;\r\n  }\r\n\r\n  setManagers(labelGroups: Record<string, any>[]): this {\r\n    this.managers = this.labelGroups\r\n      .flatMap(labelGroup =>\r\n        labelGroups.find(({ id }) => id === labelGroup)?.managers || []\r\n      )\r\n      .filter(((value, index, self) => self.indexOf(value) === index))\r\n      .sort();\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport class Users extends Array<User> {\r\n  constructor(users: Array<Partial<IUser>>) {\r\n    if (typeof users === 'number') {\r\n      super(users);\r\n      return;\r\n    }\r\n\r\n    super(users.length || 0);\r\n    users.forEach((user, index) => this[index] = new User(user));\r\n  }\r\n\r\n  public getUserById(id: number): User | null {\r\n    return this.find(user => user.id === id) || null;\r\n  }\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\nimport { DB_CACHE_RESPONSE_HEADER, LOCALIZATION_RESPONSE_REGEX } from '@shared/http/utils/constants.util';\r\n\r\nexport function checkInterceptCondition(\r\n  request: HttpRequest<any>,\r\n  cacheMeta: boolean,\r\n  cacheLocalization: boolean\r\n): boolean {\r\n  return (cacheMeta && request.headers.has(DB_CACHE_RESPONSE_HEADER))\r\n    || (cacheLocalization && LOCALIZATION_RESPONSE_REGEX.test(request.url))\r\n}\r\n","import { HttpRequestHeaders, IHttpError, IHttpResponse } from '../models/http.model';\r\nimport { IEntry } from '../models/common.model';\r\nimport { State } from '../types/state.type';\r\nimport { MonoTypeOperatorFunction, Observable, of, OperatorFunction, throwError } from 'rxjs';\r\nimport { filter, mergeMap } from 'rxjs/operators';\r\nimport { DictionaryService } from '../services/dictionary.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nexport function processResponseError(error: IHttpError): string | null {\r\n  return error?.message;\r\n}\r\n\r\nexport const HttpErrorCode: IEntry<string> = {\r\n  default: 'unknownServerError',\r\n  0: 'connectionFailed',\r\n  400: 'badRequest',\r\n  403: 'accessDenied',\r\n  404: 'notFound',\r\n  500: 'internalServerError',\r\n  503: 'serverUnavailable'\r\n};\r\n\r\nexport function filterHttpEventByState<T>(state: State | string): MonoTypeOperatorFunction<IHttpResponse<T>> {\r\n  return filter(({ state: resState }: IHttpResponse<any>) =>\r\n    state.startsWith('!')\r\n      ? resState !== state.replace('!', '')\r\n      : resState === state\r\n  );\r\n}\r\n\r\nexport function filterSuccessHttpEvent<T>(): MonoTypeOperatorFunction<IHttpResponse<T>> {\r\n  return filterHttpEventByState<T>('success');\r\n}\r\n\r\nexport function filterNoProgressHttpEvent<T>(): MonoTypeOperatorFunction<IHttpResponse<T>> {\r\n  return filterHttpEventByState<T>('!pending');\r\n}\r\n\r\nexport function throwHttpError<T = any>(error?: string): OperatorFunction<IHttpResponse<any>, IHttpResponse<T>> {\r\n  return mergeMap((response: IHttpResponse<any>): Observable<IHttpResponse<T>> => {\r\n    error = error || response.error?.message || response.error || DictionaryService.get(HttpErrorCode.default);\r\n\r\n    return response.success\r\n      ? of(response)\r\n      : throwError(error);\r\n  });\r\n}\r\n\r\nexport function mergeHttpHeaders(source: HttpRequestHeaders = {}, extra: HttpRequestHeaders = {}): HttpHeaders {\r\n  if (!(source instanceof HttpHeaders)) {\r\n    source = Object.entries(source).reduce(\r\n      (_headers, [ key, value ]) => _headers.append(key, value),\r\n      new HttpHeaders({})\r\n    );\r\n  }\r\n\r\n  if (extra instanceof HttpHeaders) {\r\n    extra.keys().forEach(key =>\r\n      source = source.append(key, extra.get(key))\r\n    );\r\n  } else {\r\n    try {\r\n      Object.entries(extra).forEach(([ key, value ]) =>\r\n        source = source.append(key, value)\r\n      )\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  return source as HttpHeaders;\r\n}\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy} from '@angular/core';\r\nimport {INotifications} from '@app/layout/header/components/header-notifications/header-notifications.model';\r\nimport {HeaderNotificationsService} from '@app/layout/header/components/header-notifications/header-notifications.service';\r\nimport {Subscriptions} from '@core/decorators/subscriptions.decorator';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-header-notifications',\r\n  templateUrl: './header-notifications.component.html',\r\n  styleUrls: ['./header-notifications.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderNotificationsComponent implements OnDestroy {\r\n  items: INotifications;\r\n  showElements: number[] = [];\r\n\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n\r\n  @Input() indentClass: string = '';\r\n\r\n  constructor(private $service: HeaderNotificationsService, private cdr: ChangeDetectorRef) {\r\n    this.sub = $service.userNotifications$.subscribe((items) => {\r\n      this.items = items;\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  removeById(id: string): void {\r\n    const updateItems = this.items.filter((item) => item.id !== id);\r\n    this.$service.userNotifications$.next(updateItems);\r\n  }\r\n\r\n  removeAll(): void {\r\n    this.$service.userNotifications$.next([]);\r\n  }\r\n\r\n  showItem(index: number): boolean {\r\n    return this.showElements.includes(index);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n}\r\n","<nz-badge [nzCount]=\"items.length\" [nzOverflowCount]=\"9\" class=\"notifications\">\r\n  <i\r\n    nz-icon\r\n    nzType=\"bell\"\r\n    nzTheme=\"outline\"\r\n    class=\"notifications__icon\"\r\n    nz-popover\r\n    nzPopoverPlacement=\"bottomRight\"\r\n    [nzPopoverContent]=\"notificationsTpl\"\r\n    [nzPopoverOverlayClassName]=\"'notifications-dropdown ' + indentClass\"\r\n    [nzPopoverTrigger]=\"'click'\"\r\n  ></i>\r\n</nz-badge>\r\n\r\n<ng-template #dropdownMenuAvailabilityTpl>\r\n  <ul nz-menu class=\"notifications__items\">\r\n    <li\r\n      *ngFor=\"let item of items; index as i\"\r\n      nz-menu-item\r\n      class=\"notifications__item\"\r\n    >\r\n      <app-header-notifications-item\r\n        [type]=\"item.type\"\r\n        [message]=\"item.message\"\r\n        [id]=\"item.id\"\r\n        (remove)=\"removeById($event)\"\r\n      ></app-header-notifications-item>\r\n    </li>\r\n  </ul>\r\n  <button nz-button nzType=\"primary\" class=\"notifications__item-delete-all\" (click)=\"removeAll()\">Удалить все уведомления</button>\r\n</ng-template>\r\n<ng-template #dropdownMenuAbsenceTpl>\r\n  <nz-empty class=\"light-fon\" [nzNotFoundContent]=\"'Уведомления отсутсвуют'\"></nz-empty>\r\n</ng-template>\r\n\r\n<ng-template #notificationsTpl>\r\n  <ng-container *ngTemplateOutlet=\"items.length > 0 ? dropdownMenuAvailabilityTpl : dropdownMenuAbsenceTpl\"></ng-container>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavigationMobileComponent } from '@app/layout/navigation-mobile/navigation-mobile.component';\r\nimport { HeaderModule } from '@app/layout/header/header.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { ReservationByQRModule } from '@src/app/base/reservation-by-qr/reservation-by-qr.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NavigationMobileComponent],\r\n  exports: [NavigationMobileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    HeaderModule,\r\n    ReservationByQRModule,\r\n    NzIconModule,\r\n    NzToolTipModule,\r\n    NzDropDownModule,\r\n  ]\r\n})\r\nexport class NavigationMobileModule { }\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BaseApi } from '../../common/base/base.api';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { IHttpResponse } from '@src/app/core/models/http.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LogApiService extends BaseApi {\r\n  private _apiUrl = environment.apiUrl;\r\n\r\n  constructor(protected injector: Injector) {\r\n    super(injector);\r\n  }\r\n\r\n  putLogData(params: Record<string, any> = {}): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/putLogData', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n  getLogData(params: Record<string, any> = {}): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .get(this._apiUrl + '/putLogData', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { DB_STORE_RESPONSE } from '@app/shared/indexed-db/indexed-db.utils';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { IIndexedDbResponse } from '@app/shared/indexed-db/indexed-db.model';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { AppService } from '@app/app.service';\r\nimport { checkInterceptCondition } from '@shared/http/utils/common.util';\r\n\r\n@Injectable()\r\nexport class CacheResponseInterceptor implements HttpInterceptor {\r\n\r\n  public constructor(\r\n    private $indexedDb: NgxIndexedDBService,\r\n    private $config: ConfigService,\r\n    private $app: AppService\r\n  ) {\r\n    this.$app.configReady$.subscribe(() => {\r\n      this._cacheMeta = this.$config.get<boolean>('cacheMetaResponse', false);\r\n      this._cacheLocalization = this.$config.get<boolean>('cacheLocalizationResponse', false);\r\n    });\r\n  }\r\n  private _cacheMeta: boolean = false;\r\n  private _cacheLocalization: boolean;\r\n\r\n  private static responseFromIndexedDb(indexedDbResponse: IIndexedDbResponse): Observable<HttpResponse<any>> {\r\n    return of(new HttpResponse({ status: 200, body: indexedDbResponse.data }));\r\n  }\r\n\r\n  public intercept(request: HttpRequest<any>, handler: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (checkInterceptCondition(request, this._cacheMeta, this._cacheLocalization)) {\r\n      return this.$indexedDb.getByIndex(DB_STORE_RESPONSE, 'url', request.url).pipe(\r\n        switchMap(response => response && response.data\r\n          ? CacheResponseInterceptor.responseFromIndexedDb(response)\r\n          : this.nativeResponse(request, handler)\r\n        )\r\n      );\r\n    }\r\n\r\n    return handler.handle(request);\r\n  }\r\n\r\n  private nativeResponse(request: HttpRequest<any>, handler: HttpHandler): Observable<HttpEvent<any>> {\r\n    return handler.handle(request).pipe(\r\n      tap((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse && event.body) {\r\n          this.addResponseToIndexedDb(request.url, event.body);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private addResponseToIndexedDb(url: string, data: any): void {\r\n    this.$indexedDb.add(DB_STORE_RESPONSE, { url, data });\r\n  }\r\n}\r\n","export const SETTINGS_URL_KEY: string = 'settingsUrl';\r\nexport const SETTINGS = [\r\n  'applicationMarketUrlAndroid',\r\n  'workplaceReservationTimeStepMinutes',\r\n  'calendarAppointmentCreationHoursRangeMax',\r\n  'userMessagesRestRequestMaxRangeDays',\r\n  'workplaceReservationResetHour',\r\n  'supportPhone',\r\n  'maxRoomBookDurationMinutes',\r\n  'smsAuthCodeLifetimeSeconds',\r\n  'navigineLocationId',\r\n  'workplaceReservationDurationMaxDays',\r\n  'workplaceReservationEndHourDefault',\r\n  'sendingSensorsValuesPeriodSeconds',\r\n  'navigineUserHash',\r\n  'autorefreshMobileAppSettingsPeriodSeconds',\r\n  'calendarAppointmentDefaultSubject',\r\n  'workplaceColorFree',\r\n  'applicationBackgroundPinSessionTimeoutSeconds',\r\n  'calendarAppointmentCreationHoursRangeMin',\r\n  'workplaceReservationTimeoutFactorSeconds',\r\n  'itServiceMail',\r\n  'workplaceColorReservedByUser',\r\n  'autorefreshLabelUsersDictionaryDataPeriodSeconds',\r\n  'workplaceUIType',\r\n  'workplaceColorReservedByMeNotConfirmed',\r\n  'logSenderMails',\r\n  'workplaceColorReservedByMe',\r\n  'trackingDataProcessingMethod',\r\n  'applicationMarketUrlIos',\r\n  'supportMails',\r\n  'oktaIssuerUrl',\r\n  'sendingBeaconsDataPeriodSeconds',\r\n  'uiAutorefreshPeriodSeconds',\r\n  'beaconsDataArrayMaxLength',\r\n  'navigineServerUrl',\r\n  'workplaceReservationDurationMinSeconds',\r\n  'RESULT_SUCCESS',\r\n  'workplaceColorDisabled',\r\n  'restApiCallsStatisticPeriodSeconds',\r\n  'workplaceReservationBeginHourDefault',\r\n  'itServicePhone',\r\n  'autorefreshDynamicDataPeriodSeconds',\r\n  'restApiCallsMinSuccessPercentage',\r\n  'workplaceReservationDelayMaxDays',\r\n  'workplaceReservationConfirmationMethod'\r\n] as const;\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { IUser } from '@core/models/user.model';\r\nimport { AuthService } from '@presentation/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IndexedDbService } from '@shared/indexed-db/indexed-db.service';\r\nimport { NavigationService } from '@core/services/navigation.service';\r\n\r\n@Component({\r\n  selector: 'app-header-profile',\r\n  templateUrl: './header-profile.component.html',\r\n  styleUrls: [ './header-profile.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderProfileComponent implements OnInit {\r\n  currentUser$: Observable<IUser>;\r\n\r\n  constructor(\r\n    private $user: UserService,\r\n    private $auth: AuthService,\r\n    private $indexedDb: IndexedDbService,\r\n    private $nav: NavigationService\r\n  ) {\r\n    this.currentUser$ = this.$user.info$;\r\n  }\r\n\r\n  public clearDatabase(): void {\r\n    this.$indexedDb.clearAll().subscribe(() => {\r\n      this.$nav\r\n        .go('/', {})\r\n        .then(() =>\r\n          window.location.reload()\r\n        );\r\n    });\r\n  }\r\n\r\n  public logout(): void {\r\n    this.$auth.logout();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n}\r\n","<figure\r\n  nz-dropdown\r\n  [nzDropdownMenu]=\"menu\"\r\n  [nzTrigger]=\"'click'\"\r\n  class=\"profile\"\r\n>\r\n  <ng-container *ngIf=\"(currentUser$ | async) as currentUser\">\r\n    <nz-avatar nzIcon=\"user\" [nzSrc]=\"currentUser.avatarUrl | imageBlob | async\" class=\"profile__avatar\"></nz-avatar>\r\n    <span class=\"profile__name\">{{ currentUser.name }}</span>\r\n    <i nz-icon nzType=\"more\" nzTheme=\"outline\" class=\"profile__icon\"></i>\r\n  </ng-container>\r\n</figure>\r\n\r\n<nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n  <ul nz-menu>\r\n    <li nz-menu-item>\r\n      <a routerLink=\"/profile\" class=\"link-reset\">\r\n        <i nz-icon nzType=\"user\" nzTheme=\"outline\"></i>\r\n        Профиль\r\n      </a>\r\n    </li>\r\n    <li nz-menu-item>\r\n      <a href=\"javascript:void(0)\"\r\n         class=\"link-reset\"\r\n         (click)=\"clearDatabase()\"\r\n      >\r\n        <i nz-icon nzType=\"reload\" nzTheme=\"outline\"></i>\r\n        Обновить справочники\r\n      </a>\r\n    </li>\r\n    <li nz-menu-item (click)=\"logout()\"><i nz-icon nzType=\"logout\" nzTheme=\"outline\"></i> Выйти</li>\r\n  </ul>\r\n</nz-dropdown-menu>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { PresentationRoutingModule } from '@presentation/presentation-routing.module';\r\nimport { UserCardModule } from '@composite/user-card/user-card.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule.forChild(),\r\n    PresentationRoutingModule,\r\n    UserCardModule,\r\n  ]\r\n})\r\nexport class PresentationModule {\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { GlobalLoaderService } from '@core/services/global-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-root, [app-root]',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.app-root]': `true`\r\n  }\r\n})\r\nexport class AppComponent {\r\n  constructor(public $loader: GlobalLoaderService) {}\r\n}\r\n","<div [ngClass]=\"{ 'd-none': $loader.globalLoading$ | async }\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<div *ngIf=\"$loader.globalLoading$ | async\" class=\"global-loader\"></div>\r\n","import {InjectionToken} from '@angular/core';\r\nimport {Tokens} from './enums/tokens.enum';\r\n\r\nexport const APP_CONFIG_URL: InjectionToken<string> = new InjectionToken(Tokens.configUrl);\r\nexport const APP_CONFIG_VALUES: InjectionToken<string> = new InjectionToken(Tokens.configValues);\r\nexport const APP_DEFAULT_LANG: InjectionToken<string> = new InjectionToken(Tokens.defaultLang);\r\nexport const APP_LANGS: InjectionToken<string[]> = new InjectionToken(Tokens.langs);\r\nexport const APP_DICTIONARY: InjectionToken<string> = new InjectionToken(Tokens.dictionary);\r\n","import { NgModule } from '@angular/core';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { DictionariesService } from '@app/shared/dictionaries/dictionaries.service';\r\nimport { DictionariesIndexedDb } from '@app/shared/dictionaries/dictionaries.indexed-db';\r\nimport { BuildingsService } from '@shared/dictionaries/services/buildings.service';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\n\r\n@NgModule( {\r\n  declarations: [],\r\n  imports: [\r\n    CoreModule.forChild()\r\n  ],\r\n  providers: [\r\n    DictionariesService,\r\n    FloorMapsService,\r\n    BuildingsService,\r\n    DictionariesIndexedDb\r\n  ]\r\n} )\r\nexport class DictionariesModule {\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appCardFormControl]'\r\n})\r\nexport class CardFormControlDirective {\r\n  @Input(\"appCardFormControl\") name: string = \"\";\r\n\r\n  constructor(public templateRef: TemplateRef<unknown>) { }\r\n\r\n}\r\n","import {BaseApi} from '@shared/common/base/base.api';\r\nimport {Injectable, Injector} from '@angular/core';\r\nimport {LocalizationService} from '@core/services/localization.service';\r\nimport {Observable} from 'rxjs';\r\nimport {INavigations} from '@app/layout/navigation/navigation.model';\r\nimport {map, pluck, switchMap} from 'rxjs/operators';\r\nimport {filterSuccessHttpEvent} from '@core/utils/http.util';\r\n\r\n@Injectable()\r\nexport class NavigationApi extends BaseApi {\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $localization: LocalizationService\r\n  ) {\r\n    super(injector);\r\n\r\n  }\r\n\r\n  public get mainNavigation$(): Observable<INavigations> {\r\n    return this.$config.getOne$('navigationUrl').pipe(\r\n      switchMap((url: string) =>\r\n        this.$localization.currentLang$.pipe(\r\n          map(lang => this.$url.createUrl(url, {lang}))\r\n        )\r\n      ),\r\n      switchMap((url) => this.$http.get(url)),\r\n      filterSuccessHttpEvent(),\r\n      pluck('data')\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { BreadcrumbComponent } from './breadcrumb.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ BreadcrumbComponent ],\r\n  exports: [ BreadcrumbComponent ],\r\n  imports: [\r\n    CoreModule.forChild(),\r\n    RouterModule\r\n  ]\r\n})\r\nexport class BreadcrumbModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { ILabelGroups, IUser } from '@shared/http/models/database.model';\r\nimport { DEFAULT_USER_AVATAR } from '@shared/http/utils/images.const';\r\nimport { ICard, IDescription } from '@base/card/card.model';\r\nimport { MaskPipe } from 'ngx-mask';\r\nimport { BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { catchError, delay, finalize, map, tap } from 'rxjs/operators';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { UserCardFormGroup } from './user-card.model';\r\nimport { MessagesService } from '@src/app/core/services/messages.service';\r\n\r\n@Injectable()\r\nexport class UserCardService {\r\n  constructor(\r\n    private $dictionary: DictionariesService,\r\n    private _maskPipe: MaskPipe,\r\n    private $api: ReservationsApiService,\r\n    private fb: FormBuilder,\r\n    private $messages: MessagesService\r\n  ) {}\r\n  private _user: IUser;\r\n  private _user$ = new BehaviorSubject<Partial<IUser>>(null);\r\n  private _users: IUser[];\r\n  private _labelGroups: ILabelGroups[];\r\n  private _activeLabels: any[];\r\n  private _userCardForm: UserCardFormGroup = new FormGroup({});\r\n\r\n  private _isLoading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(\r\n    false\r\n  );\r\n  public isLoading$ = this._isLoading$.asObservable();\r\n\r\n  public get user() {\r\n    return this._user$.value;\r\n  }\r\n\r\n  private setUser(value: IUser) {\r\n    this._user = value;\r\n    this._user$.next(value);\r\n  }\r\n\r\n  public user$ = this._user$.asObservable();\r\n\r\n  userData(id: number): Promise<IUser> {\r\n    return forkJoin({\r\n      user: this.$dictionary.getDictionaryItemByKey<IUser>('labels', id),\r\n      users: this.$dictionary.getDictionary<IUser[]>('labels'),\r\n      labelGroups:\r\n        this.$dictionary.getDictionary<ILabelGroups[]>('labelGroups'),\r\n      lifeData: this.$api.getLiveData('activeLabels'),\r\n    })\r\n      .pipe(\r\n        tap(({ user, users, labelGroups, lifeData }) => {\r\n          this._users = users;\r\n          this._labelGroups = labelGroups;\r\n          this._activeLabels = lifeData.data.activeLabels.map((_al) => _al.id);\r\n          this.setUser({\r\n            ...user,\r\n            mainPhone: user.mainPhone.slice(1),\r\n          });\r\n        }),\r\n        map(({ user }) => user)\r\n      )\r\n      .toPromise();\r\n  }\r\n  default(): ICard {\r\n    return {\r\n      title: 'UserCard.User is not found',\r\n      width: '100%',\r\n      image: DEFAULT_USER_AVATAR,\r\n      descriptionList: [],\r\n      tags: [],\r\n      form: new FormGroup({ mainPhone: new FormControl() }),\r\n    };\r\n  }\r\n\r\n  generateDescriptionList(): IDescription[] {\r\n    const result: IDescription[] = [];\r\n    result.push({\r\n      name: 'Телефон',\r\n      value: this._maskPipe.transform(\r\n        this._user.mainPhone,\r\n        '+0 (000) 000-00-00'\r\n      ),\r\n      formControlTpl: 'phoneControl',\r\n    });\r\n    result.push({\r\n      name: 'email',\r\n      value: this._user.mail,\r\n    });\r\n    const managerIds = this._labelGroups\r\n      .filter((_l) => this._user.labelGroups.includes(_l.id))\r\n      .reduce((acc, lab) => {\r\n        acc.push(...lab.managers);\r\n        return acc;\r\n      }, []);\r\n    const leaders = this._users.filter((user) => managerIds.includes(user.id));\r\n    result.push({\r\n      name: 'Управляющие',\r\n      value: leaders.map((_l) => _l.name).join('; '),\r\n    });\r\n    result.push({\r\n      name: 'Дополнительная информация',\r\n      value: this._user.description,\r\n    });\r\n    result.push({\r\n      name: 'Статус',\r\n      value: this._activeLabels.includes(this._user.id) ? 'В офисе' : 'Дома',\r\n    });\r\n    if (this._user.post) {\r\n      result.push({\r\n        name: 'Должность',\r\n        value: this._user.post,\r\n      });\r\n    }\r\n    if (this._user.description) {\r\n      result.push({\r\n        name: 'Подразделение',\r\n        value: this._user.description,\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  convertUserToCard(): ICard {\r\n    this._userCardForm = this.fb.group({\r\n      mainPhone: [\r\n        this._user.mainPhone,\r\n        [Validators.maxLength(11), Validators.minLength(11)],\r\n      ],\r\n    });\r\n\r\n    return {\r\n      title: this._user.name,\r\n      width: '100%',\r\n      image: this._user.avatarImageUrl || DEFAULT_USER_AVATAR,\r\n      descriptionList: this.generateDescriptionList(),\r\n      tags: [],\r\n      form: this._userCardForm,\r\n    };\r\n  }\r\n\r\n  updateUserData(id: number, userData: Partial<IUser>) {\r\n    this._isLoading$.next(true);\r\n    const prevUserValue = { ...this._user };\r\n    this.setUser({ ...prevUserValue, ...userData });\r\n\r\n    userData.phones = '+' + userData.mainPhone;\r\n    delete userData.mainPhone;\r\n\r\n    return this.$dictionary.patchDictionaryItem('labels', id, userData).pipe(\r\n      tap(({ success, data }) => {\r\n        if (!success) {\r\n          this.setUser({ ...prevUserValue });\r\n          this._userCardForm.reset(this._user);\r\n          this.$messages.error('Ошибка обновления');\r\n        } else {\r\n          this.$dictionary.updateDictionaryItem('labels', data);\r\n        }\r\n      }),\r\n      catchError((e) => {\r\n        console.log(e);\r\n        return of(null);\r\n      }),\r\n      finalize(() => this._isLoading$.next(false))\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserCardComponent } from '@composite/user-card/user-card.component';\r\nimport { CardModule } from '@base/card/card.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaskPipe, NgxMaskModule } from 'ngx-mask';\r\nimport { ImagesModule } from '@shared/images/images.module';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [UserCardComponent],\r\n  exports: [UserCardComponent],\r\n  providers: [MaskPipe],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CardModule,\r\n    TranslateModule,\r\n    ImagesModule,\r\n    NzFormModule,\r\n    NgxMaskModule.forChild(),\r\n  ]\r\n})\r\nexport class UserCardModule {}\r\n","export const DB_STORE_RESPONSE: string = 'response';\r\nexport const DB_STORE_OPTIONS: string = 'options';\r\nexport const DB_STORE_SETTINGS: string = 'settings';\r\nexport const DB_STORE_VERSION: string = 'version';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TitleComponent } from './title.component';\r\n\r\n@NgModule({\r\n  declarations: [TitleComponent],\r\n  exports: [\r\n    TitleComponent\r\n  ],\r\n    imports: [\r\n        CommonModule\r\n    ]\r\n})\r\nexport class TitleModule { }\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { WORK_HOURS } from '@src/app/base/filters/utils/filter-date.constants';\r\nimport { SupportTimeOptions } from 'ng-zorro-antd/date-picker/standard-types';\r\nimport {\r\n  disableDate,\r\n  disableTime,\r\n  getDisabledHours,\r\n  getRangeDateFrom,\r\n  getRangeDateTo,\r\n  getRangeTimeFrom,\r\n  getRangeTimeTo,\r\n  timePickerDefaultOptions,\r\n} from '@src/app/base/filters/utils/filter-date.utils';\r\nimport { DisabledTimeConfig } from 'ng-zorro-antd/date-picker';\r\nimport { Debounce } from '@core/decorators/debounce.decorator';\r\nimport { MarkForCheck } from '@core/decorators/async.decorator';\r\nimport { setHours } from '@presentation/offices/offices-map/offices-map.utils';\r\nimport { addMilliseconds, differenceInCalendarDays } from 'date-fns';\r\nimport { DisabledTimeFn } from 'ng-zorro-antd/date-picker';\r\n\r\n@Component({\r\n  selector: 'app-filter-date',\r\n  templateUrl: './filter-date.component.html',\r\n  styleUrls: ['./filter-date.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => FilterDateComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  host: {\r\n    '[class.filter-date]': `true`,\r\n    '[class._horizontal]': `layout === \"horizontal\"`,\r\n    '[class._vertical]': `layout === \"vertical\"`,\r\n  },\r\n})\r\nexport class FilterDateComponent implements ControlValueAccessor, OnInit {\r\n  disableAllDay = false;\r\n\r\n  @MarkForCheck\r\n  public allDay: boolean = false;\r\n  private _value: Array<Date | null> = [null, null];\r\n\r\n  @Input()\r\n  public minDateTime: Date | null = null;\r\n\r\n  @Input()\r\n  public maxDateTime: Date | null = null;\r\n\r\n  @Input()\r\n  public layout: 'vertical' | 'horizontal' = 'vertical';\r\n\r\n  @Input()\r\n  public format: string = 'yyyy-MM-dd';\r\n\r\n  @Input()\r\n  public workHours: number[] = WORK_HOURS;\r\n\r\n  @Input()\r\n  public minDuration: number = 300000;\r\n\r\n  @Input()\r\n  public allowAllDay: boolean = false;\r\n\r\n  @Input()\r\n  public autoUpdateDateTo: boolean = false;\r\n\r\n  @Input()\r\n  public autoUpdateDateToFullDay: boolean = false;\r\n\r\n  @Input()\r\n  public staticDisabled: boolean = false;\r\n\r\n  private _rangeDateFrom: Array<Date | null> = [null, null];\r\n  private _rangeTimeFrom: Array<Date | null> = [null, null];\r\n  private _rangeDateTo: Array<Date | null> = [null, null];\r\n  private _rangeTimeTo: Array<Date | null> = [null, null];\r\n  private _disabledHours: number[] = [];\r\n  private _timePickerOptions: SupportTimeOptions;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  public get timePickerOptions(): SupportTimeOptions | null {\r\n    return !this.allDay ? this._timePickerOptions : null;\r\n  }\r\n\r\n  @Input()\r\n  public set value(value: Array<Date | null>) {\r\n    this._value = value;\r\n    this.onChange(this.value);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public get value(): Array<Date | null> {\r\n    return this._value;\r\n  }\r\n\r\n  @Input('timePickerOptions')\r\n  public set inputTimePickerOptions(timePickerOptions: SupportTimeOptions) {\r\n    if (!timePickerOptions) {\r\n      this._timePickerOptions = null;\r\n      return;\r\n    }\r\n\r\n    this._timePickerOptions = {\r\n      ...this.timePickerOptions,\r\n      ...timePickerOptions,\r\n    };\r\n  }\r\n\r\n  public onChange: (value: Date[]) => void = (_value: Date[]) => {};\r\n  public onTouched: () => void = () => {};\r\n\r\n  @Debounce(100)\r\n  public toggleAllDay(allDay: boolean): void {\r\n    this.allDay = allDay;\r\n\r\n    if (this.allDay) {\r\n      this.setAllDay();\r\n    }\r\n\r\n    this.updateRangeFrom();\r\n    this.updateRangeTo();\r\n  }\r\n\r\n  public updateDateFrom(dateFrom: Date): void {\r\n    this.value[0] = dateFrom;\r\n    this.checkAllDayEnabled(dateFrom);\r\n    if (this.allDay) {\r\n      this.setAllDay();\r\n    } else if (this.autoUpdateDateTo && this.value[1] < dateFrom) {\r\n      this.updateDateTo(\r\n        this.autoUpdateDateToFullDay\r\n          ? setHours(new Date(this.value[0]), this.workHours[1])\r\n          : addMilliseconds(this.value[0], this.minDuration)\r\n      );\r\n    } else {\r\n      this.updateValue();\r\n    }\r\n\r\n    this.updateRangeTo();\r\n  }\r\n\r\n  checkAllDayEnabled(dateFrom: Date) {\r\n    let checkDateFrom = new Date(dateFrom);\r\n    checkDateFrom.setHours(0);\r\n    checkDateFrom.setMinutes(0);\r\n    checkDateFrom.setSeconds(0);\r\n    checkDateFrom.setMilliseconds(0);\r\n    let now = new Date();\r\n    now.setHours(0);\r\n    now.setMinutes(0);\r\n    now.setSeconds(0);\r\n    now.setMilliseconds(0);\r\n    if (+checkDateFrom === +now) {\r\n      this.allDay = false;\r\n      this.disableAllDay = true;\r\n    } else {\r\n      this.disableAllDay = false;\r\n    }\r\n  }\r\n\r\n  public updateDateTo(dateTo: Date): void {\r\n    this.value[1] = dateTo;\r\n    this.updateValue();\r\n    this.updateRangeFrom();\r\n  }\r\n\r\n  public updateValue(): void {\r\n    this.value = this.value;\r\n  }\r\n\r\n  public registerOnChange(onChange: (value: Date[]) => void): void {\r\n    this.onChange = onChange;\r\n  }\r\n\r\n  public registerOnTouched(onTouched: () => void): void {\r\n    this.onTouched = onTouched;\r\n  }\r\n\r\n  public writeValue(value: Array<Date | null> = []): void {\r\n    if (!value) {\r\n      this.value = [null, null];\r\n      return;\r\n    }\r\n\r\n    if (this.value[0] === value[0] && this.value[1] === value[1]) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.value = value.map((item) =>\r\n        item instanceof Date ||\r\n        typeof item === 'string' ||\r\n        typeof item === 'number'\r\n          ? new Date(item)\r\n          : null\r\n      );\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    this.checkAllDayEnabled(this.value[0]);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._timePickerOptions = timePickerDefaultOptions(this.timePickerOptions);\r\n    this._disabledHours = getDisabledHours(this.workHours);\r\n  }\r\n\r\n  public disabledDate = (current: Date): boolean =>\r\n    differenceInCalendarDays(current, this.minDateTime) < 0 ||\r\n    differenceInCalendarDays(current, this.maxDateTime) > 0;\r\n\r\n  public disabledDateTime: DisabledTimeFn = (current: Date) => {\r\n    let minutesRange: number[] = [];\r\n    if (current) {\r\n      if (\r\n        current.getHours() > this.minDateTime.getHours() &&\r\n        current.getHours() < this.maxDateTime.getHours()\r\n      ) {\r\n        minutesRange = this.range(0, 0);\r\n      } else if (current.getHours() === this.minDateTime.getHours()) {\r\n        minutesRange = this.range(0, this.minDateTime.getMinutes() - 1);\r\n      } else if (current.getHours() === this.maxDateTime.getHours()) {\r\n        minutesRange = this.range(this.maxDateTime.getMinutes() + 1, 60);\r\n      }\r\n    }\r\n    return {\r\n      nzDisabledHours: () => [\r\n        ...this.range(0, this.minDateTime.getHours()),\r\n        ...this.range(this.maxDateTime.getHours() + 1, 24),\r\n      ],\r\n      nzDisabledMinutes: () => minutesRange,\r\n      nzDisabledSeconds: () => [],\r\n    };\r\n  };\r\n\r\n  // public disabledDateTimeMax: DisabledTimeFn = (current: Date) => {\r\n  //   return {\r\n  //     nzDisabledHours: () => [\r\n  //       ...this.range(0, this.minDateTime.getHours()),\r\n  //       ...this.range(this.maxDateTime.getHours() + 1, 24),\r\n  //     ],\r\n  //     nzDisabledMinutes: () =>\r\n  //       (current ? current.getHours() : 0) !== this.maxDateTime.getHours()\r\n  //         ? this.range(0, 0)\r\n  //         : this.range(0, this.maxDateTime.getMinutes()),\r\n  //     nzDisabledSeconds: () => [],\r\n  //   };\r\n  // };\r\n\r\n  public disableDateFrom: (date: Date) => boolean = (date: Date): boolean => {\r\n    return disableDate(date, this._rangeDateFrom);\r\n  };\r\n\r\n  public disableDateTo: (date: Date) => boolean = (date: Date): boolean => {\r\n    return disableDate(date, this._rangeDateTo);\r\n  };\r\n\r\n  public disableTimeFrom: (date: Date) => DisabledTimeConfig = (\r\n    date: Date\r\n  ): DisabledTimeConfig => {\r\n    return disableTime(date, this._rangeTimeFrom, this._disabledHours);\r\n  };\r\n\r\n  public disableTimeTo: (date: Date) => DisabledTimeConfig = (\r\n    date: Date\r\n  ): DisabledTimeConfig => {\r\n    return disableTime(date, this._rangeTimeTo, this._disabledHours);\r\n  };\r\n\r\n  public updateRangeFrom(): void {\r\n    this._rangeDateFrom = getRangeDateFrom(\r\n      this.minDateTime,\r\n      this.minDateTime,\r\n      this.value[1],\r\n      this.minDuration,\r\n      this.workHours,\r\n      this.allDay || this.autoUpdateDateTo\r\n    );\r\n    this._rangeTimeFrom = getRangeTimeFrom(\r\n      this.minDateTime,\r\n      this.minDateTime,\r\n      this.value[1],\r\n      this.minDuration,\r\n      this.allDay || this.autoUpdateDateTo\r\n    );\r\n  }\r\n\r\n  public updateRangeTo(): void {\r\n    this._rangeDateTo = getRangeDateTo(\r\n      this.minDateTime,\r\n      this.minDateTime,\r\n      this.value[0],\r\n      this.minDuration,\r\n      this.workHours\r\n    );\r\n    this._rangeTimeTo = getRangeTimeTo(\r\n      this.minDateTime,\r\n      this.minDateTime,\r\n      this.value[0],\r\n      this.minDuration\r\n    );\r\n  }\r\n\r\n  private setAllDay(): void {\r\n    const startHours: number = this.workHours[0] || 0;\r\n    const endHours: number = this.workHours[1] || 23;\r\n    const startDate: Date = this.value[0] || new Date();\r\n\r\n    this.value[0] = new Date(startDate.setHours(startHours, 0, 0, 0));\r\n    this.value[1] = new Date(startDate.setHours(endHours, 0, 0, 0));\r\n\r\n    this.updateValue();\r\n  }\r\n\r\n  private range(start: number, end: number): number[] {\r\n    const result: number[] = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","<nz-date-picker\r\n  [nzPlaceHolder]=\"'From' | dictionary | translate\"\r\n  [nzShowTime]=\"timePickerOptions\"\r\n  [nzFormat]=\"format\"\r\n  [nzDisabledDate]=\"\r\n    (!staticDisabled && disableDateFrom) || (staticDisabled && disabledDate)\r\n  \"\r\n  [nzDisabledTime]=\"\r\n    (!staticDisabled && disableTimeFrom) || (staticDisabled && disabledDateTime)\r\n  \"\r\n  [ngModel]=\"value[0]\"\r\n  (ngModelChange)=\"updateDateFrom($event)\"\r\n>\r\n</nz-date-picker>\r\n\r\n<nz-date-picker\r\n  [nzPlaceHolder]=\"'To' | dictionary | translate\"\r\n  [nzShowTime]=\"timePickerOptions\"\r\n  [nzFormat]=\"format\"\r\n  [nzDisabled]=\"allDay\"\r\n  [nzDisabledDate]=\"\r\n    (!staticDisabled && disableDateTo) || (staticDisabled && disabledDate)\r\n  \"\r\n  [nzDisabledTime]=\"\r\n    (!staticDisabled && disableTimeTo) || (staticDisabled && disabledDateTime)\r\n  \"\r\n  [(ngModel)]=\"value[1]\"\r\n  (ngModelChange)=\"updateDateTo($event); updateRangeFrom()\"\r\n>\r\n</nz-date-picker>\r\n\r\n<label\r\n  *ngIf=\"allowAllDay\"\r\n  nz-checkbox\r\n  [ngModel]=\"false\"\r\n  [disabled]=\"disableAllDay\"\r\n  (ngModelChange)=\"toggleAllDay($event)\"\r\n>\r\n  {{ \"AllDay\" | dictionary | translate }}\r\n</label>\r\n","import { MetaApiService } from '@shared/http/services/meta-api.service';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport { UserApiService } from '@shared/http/services/user-api.service';\r\nimport { LiveDataApiService } from '@shared/http/services/live-data-api.service';\r\nimport { LogApiService } from './services/log-api.service';\r\nimport { DpaApiService } from './services/dpa-api.service';\r\n\r\nexport const API_SERVICES: any[] = [\r\n  LiveDataApiService,\r\n  MetaApiService,\r\n  ReservationsApiService,\r\n  UserApiService,\r\n  LogApiService,\r\n  DpaApiService,\r\n];\r\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { Subscribe } from '@core/decorators/subscribe.decorator';\r\nimport { NavigationService } from '@core/services/navigation.service';\r\nimport { delay, switchMap } from 'rxjs/operators';\r\nimport { SharedService } from '@shared/shared.service';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-loading-dictionaries',\r\n  templateUrl: './loading-dictionaries.component.html',\r\n  styleUrls: [ './loading-dictionaries.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoadingDictionariesComponent implements OnInit, OnDestroy {\r\n  @Subscribe<number>()\r\n  public progress: number = this.$dictionaries.progress$ as any;\r\n\r\n  constructor(\r\n    private $dictionaries: DictionariesService,\r\n    private $shared: SharedService,\r\n    private $navigation: NavigationService,\r\n    private $settings: SettingsService,\r\n    private _cdr: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.$settings.initialize()\r\n      .pipe(\r\n        switchMap(() => this.$shared.loadDictionaries()),\r\n        delay(500)\r\n      )\r\n      .subscribe(() => this.$navigation.reload());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n}\r\n","<h6 nz-typography>\r\n  {{'WaitPleaseResourcesLoading' | dictionary | translate}}...\r\n</h6>\r\n\r\n<nz-progress [nzPercent]=\"progress\"\r\n             [nzStrokeColor]=\"{ '0%': '#108ee9', '100%': '#87d068' }\"\r\n>\r\n</nz-progress>\r\n","import { Injectable } from '@angular/core';\r\nimport { Url } from '../models/url.model';\r\nimport { IEntry } from '../models/common.model';\r\nimport { isEmpty } from '../utils/instanceOf.utilI';\r\n\r\n/* url-pattern example\r\n *\r\n * with replaced parameter\r\n * [http://host:port]/{:path-parameter}/page?q={:query-parameter}\r\n */\r\n\r\nconst PARAM_REGEX: RegExp = /:[a-zA-Z][a-zA-Z0-9_]+/g;\r\nconst HTTP_PROTOCOL_SEP: string = '://';\r\n\r\n@Injectable()\r\nexport class UrlService {\r\n  public concat(hostUrl: string, pathUrl: string): string {\r\n    if (hostUrl.endsWith('/')) {\r\n      hostUrl = hostUrl.slice(0, -1);\r\n    }\r\n\r\n    if (pathUrl && pathUrl.startsWith('/')) {\r\n      pathUrl = pathUrl.slice(1);\r\n    }\r\n\r\n    if (!pathUrl) {\r\n      return hostUrl;\r\n    }\r\n\r\n    return `${hostUrl}/${pathUrl}`;\r\n  }\r\n\r\n  public create(pattern: string = null, params: {} = null): Url {\r\n    if (isEmpty(pattern)) {\r\n      console.error('Cannot create Url-object with empty pattern');\r\n      pattern = '';\r\n    }\r\n\r\n    return new Url(pattern, params, urlStringify);\r\n  }\r\n\r\n  public createUrl(pattern: string, params: IEntry<any> = {}): string | null {\r\n    if (!pattern) {\r\n      return null;\r\n    }\r\n\r\n    return this.stringify(this.create(pattern), params);\r\n  }\r\n\r\n  public stringify(url: Url, params: IEntry<any>): string {\r\n    return url.stringify(params);\r\n  }\r\n}\r\n\r\nfunction urlStringify(params: object, preStringify: boolean = false): string {\r\n  let url: string = this.pattern;\r\n  const paramsMatch: string[] = this.pattern.match(PARAM_REGEX);\r\n\r\n  if (paramsMatch && paramsMatch.length > 0) {\r\n    url = urlStringifyParams(url, paramsMatch, params);\r\n  }\r\n\r\n  if (preStringify) {\r\n    return url;\r\n  }\r\n\r\n  url = url.replace(PARAM_REGEX, '');\r\n\r\n  if (!url.includes(HTTP_PROTOCOL_SEP)) {\r\n    return url.replace(/\\/\\//g, '/');\r\n  }\r\n\r\n  url = url\r\n    .split(HTTP_PROTOCOL_SEP)\r\n    .map((part) => part.replace(/\\/\\//g, '/'))\r\n    .join(HTTP_PROTOCOL_SEP);\r\n\r\n  return url;\r\n}\r\n\r\nfunction urlStringifyParams(\r\n  url: string,\r\n  paramsMatch: string[],\r\n  params: object\r\n): string {\r\n  paramsMatch.forEach((paramMatch) => {\r\n    const paramName = paramMatch.startsWith(':')\r\n      ? paramMatch.slice(1)\r\n      : paramMatch;\r\n\r\n    if (\r\n      typeof params[paramName] !== 'undefined' &&\r\n      params[paramName] !== null &&\r\n      params[paramName] !== ''\r\n    ) {\r\n      url = url.replace(paramMatch, params[paramName]);\r\n    }\r\n  });\r\n\r\n  return url;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, LOCALE_ID, NgModule } from '@angular/core';\r\nimport { TranslatePipe } from '@ngx-translate/core';\r\nimport { AppComponent } from './app.component';\r\nimport { en_US, NZ_I18N, ru_RU } from 'ng-zorro-antd/i18n';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport ru from '@angular/common/locales/ru';\r\nimport en from '@angular/common/locales/en';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { PresentationModule } from '@presentation/presentation.module';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { LayoutSharedModule } from '@app/layout/layout-shared.module';\r\nimport { NZ_CONFIG } from 'ng-zorro-antd/core/config';\r\nimport { NG_ZORRO_CONFIG } from '@core/antd/antd.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { AppService } from '@app/app.service';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { APP_CONFIG_URL, APP_CONFIG_VALUES } from '@core/core.tokens';\r\nimport { environment } from '@src/environments/environment';\r\nimport { SharedModule } from '@app/shared/shared.module';\r\nimport { AuthInterceptor } from '@shared/http/interceptors/auth.interceptor';\r\nimport { NotificationsService } from '@core/services/notifications.service';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { MessagesService } from '@core/services/messages.service';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nregisterLocaleData(en);\r\nregisterLocaleData(ru);\r\n\r\nexport function AppBootstrapServiceFactory($app: AppService): () => Promise<any> {\r\n  return () => $app.bootstrap();\r\n}\r\n\r\nexport function NzI18NFactory(localeId: string): any {\r\n  switch (localeId) {\r\n    case 'en-US':\r\n      return en_US;\r\n\r\n    case 'ru-RU':\r\n      return ru_RU;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ AppComponent ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    PresentationModule,\r\n    SharedModule,\r\n    CoreModule.forRoot(),\r\n    LayoutSharedModule,\r\n    RouterModule,\r\n    IonicModule.forRoot(),\r\n    NgxMaskModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    MessagesService,\r\n    NzMessageService,\r\n    NotificationsService,\r\n    TranslatePipe,\r\n    DatePipe,\r\n    {\r\n      provide: NZ_I18N,\r\n      useFactory: NzI18NFactory,\r\n      deps: [ LOCALE_ID ]\r\n    },\r\n    {\r\n      provide: NZ_CONFIG,\r\n      useValue: NG_ZORRO_CONFIG\r\n    },\r\n    {\r\n      provide: APP_CONFIG_VALUES,\r\n      useValue: [],\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_CONFIG_URL,\r\n      useValue: environment.bootConfigUrl,\r\n      multi: false\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: AppBootstrapServiceFactory,\r\n      multi: true,\r\n      deps: [ AppService, ConfigService, HttpService, LocalizationService ]\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    },\r\n    { provide: 'Window',  useValue: window }\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HeaderService } from '@app/layout/header/header.service';\r\n\r\n@Component({\r\n  selector: 'app-header-notifications-item',\r\n  templateUrl: './header-notifications-item.component.html',\r\n  styleUrls: ['./header-notifications-item.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeaderNotificationsItemComponent implements OnInit {\r\n  notificationIcons: Record<string, string> = this.$header.notificationIconsMap;\r\n  itemClasses: string[] = [];\r\n  @Input() readonly id: string;\r\n  @Input() readonly type: string;\r\n  @Input() readonly message: string;\r\n  @Output() readonly remove: EventEmitter<string> = new EventEmitter<string>();\r\n  constructor(private $header: HeaderService) {}\r\n  ngOnInit(): void {\r\n    this.itemClasses.push('_' + this.type);\r\n  }\r\n\r\n  removeOutput(event: Event): void {\r\n    event.stopPropagation();\r\n    this.remove.emit(this.id);\r\n  }\r\n  showFullMessage(): void {\r\n    if (!this.itemClasses.includes('_show')) {\r\n      this.itemClasses.push('_show');\r\n    }\r\n  }\r\n  get itemIcon(): string {\r\n    return this.notificationIcons[this.type];\r\n  }\r\n}\r\n","<div [ngClass]=\"itemClasses\" class=\"notifications-item\" (click)=\"showFullMessage()\">\r\n  <i nz-icon [nzType]=\"itemIcon\" nzTheme=\"outline\" class=\"notifications-item__icon\"></i>\r\n  <div class=\"notifications-item__content\">\r\n    <h5 class=\"notifications-item__title\">{{ type | titlecase }}</h5>\r\n    <p class=\"notifications-item__message\">{{ message }}</p>\r\n  </div>\r\n  <i nz-icon nzType=\"delete\" nzTheme=\"outline\" class=\"notifications-item__delete\" (click)=\"removeOutput($event)\"></i>\r\n</div>\r\n\r\n","import { DBConfig } from 'ngx-indexed-db';\r\nimport { indexedDbMigrationFactory } from './indexed-db-migration.factory';\r\nimport {\r\n  DB_STORE_OPTIONS,\r\n  DB_STORE_RESPONSE,\r\n  DB_STORE_SETTINGS,\r\n  DB_STORE_VERSION\r\n} from '@app/shared/indexed-db/indexed-db.utils';\r\nimport { getDictionariesDbConfig } from '@app/shared/dictionaries/dictionaries.utils';\r\n\r\nexport const indexedDbConfig: DBConfig = {\r\n  name: 'smartOfficeDb',\r\n  version: 3,\r\n  objectStoresMeta: [\r\n    {\r\n      store: DB_STORE_RESPONSE,\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'url', keypath: 'url', options: { unique: true } },\r\n        { name: 'data', keypath: 'data', options: { unique: false } }\r\n      ]\r\n    },\r\n    {\r\n      store: DB_STORE_OPTIONS,\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'name', keypath: 'name', options: { unique: true } }\r\n      ]\r\n    },\r\n    {\r\n      store: DB_STORE_SETTINGS,\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'name', keypath: 'name', options: { unique: true } }\r\n      ]\r\n    },\r\n    {\r\n      store: DB_STORE_VERSION,\r\n      storeConfig: { keyPath: 'id', autoIncrement: true },\r\n      storeSchema: [\r\n        { name: 'version', keypath: 'version', options: { unique: true } }\r\n      ]\r\n    },\r\n    ...getDictionariesDbConfig()\r\n  ],\r\n  migrationFactory: indexedDbMigrationFactory\r\n};\r\n","import {\r\n  DEFAULT_TIME_PICKER_OPTIONS,\r\n  HOURS,\r\n  MINUTES,\r\n} from '@src/app/base/filters/utils/filter-date.constants';\r\nimport { getEndDate, getMinDate, getStartDate } from '@core/utils/date.utils';\r\nimport {\r\n  DisabledTimeConfig,\r\n  SupportTimeOptions,\r\n} from 'ng-zorro-antd/date-picker';\r\n\r\nexport function timePickerDefaultOptions(\r\n  options: SupportTimeOptions\r\n): SupportTimeOptions {\r\n  return {\r\n    ...DEFAULT_TIME_PICKER_OPTIONS,\r\n    ...options,\r\n  };\r\n}\r\n\r\nexport function getDisabledHours(workHours: number[]): number[] {\r\n  return HOURS.filter((hour) => hour < workHours[0] || hour > workHours[1]);\r\n}\r\n\r\nexport function getRangeDateFrom(\r\n  minDate: Date | null,\r\n  maxDate: Date | null,\r\n  dateTo: Date | null,\r\n  minDuration: number = 0,\r\n  workHours: number[] = [],\r\n  notUseDateTo: boolean = false\r\n): Array<Date | null> {\r\n  if (!notUseDateTo) {\r\n    maxDate = getMinDate(maxDate, dateTo);\r\n  }\r\n\r\n  if (maxDate) {\r\n    const maxDateWithoutDurationHours: number = new Date(\r\n      maxDate.getTime() - minDuration\r\n    ).getHours();\r\n\r\n    if (\r\n      typeof workHours[0] !== 'undefined' &&\r\n      maxDateWithoutDurationHours < workHours[0]\r\n    ) {\r\n      maxDate.setDate(maxDate.getDate() - 1);\r\n    }\r\n\r\n    maxDate = new Date(getEndDate(maxDate));\r\n  }\r\n\r\n  if (minDate) minDate = new Date(getStartDate(minDate));\r\n\r\n  return [minDate, maxDate];\r\n}\r\n\r\nexport function getRangeTimeFrom(\r\n  minDate: Date | null,\r\n  maxDate: Date | null,\r\n  dateTo: Date | null,\r\n  minDuration: number = 0,\r\n  notUseDateTo: boolean = false\r\n): Array<Date | null> {\r\n  const range: Array<Date | null> = [null, null];\r\n\r\n  if (!notUseDateTo) {\r\n    maxDate = getMinDate(maxDate, dateTo);\r\n  }\r\n\r\n  if (minDate) range[0] = minDate;\r\n  if (maxDate) range[1] = new Date(maxDate.getTime() - minDuration);\r\n\r\n  return range;\r\n}\r\n\r\nexport function getRangeDateTo(\r\n  minDate: Date | null,\r\n  maxDate: Date | null,\r\n  dateFrom: Date | null,\r\n  minDuration: number = 0,\r\n  workHours: number[] = []\r\n): Array<Date | null> {\r\n  minDate = getMinDate(minDate, dateFrom);\r\n\r\n  if (minDate) {\r\n    const minDateWithDurationHours: number = new Date(\r\n      minDate.getTime() + minDuration\r\n    ).getHours();\r\n\r\n    if (\r\n      typeof workHours[1] !== 'undefined' &&\r\n      minDateWithDurationHours >= workHours[1]\r\n    ) {\r\n      minDate.setDate(minDate.getDate() + 1);\r\n    }\r\n\r\n    minDate = new Date(getStartDate(minDate));\r\n  }\r\n\r\n  if (maxDate) maxDate = new Date(getEndDate(maxDate));\r\n\r\n  return [minDate, maxDate];\r\n}\r\n\r\nexport function getRangeTimeTo(\r\n  minDate: Date | null,\r\n  maxDate: Date | null,\r\n  dateFrom: Date | null,\r\n  minDuration: number = 0\r\n): Array<Date | null> {\r\n  const range: Array<Date | null> = [null, null];\r\n\r\n  if (maxDate) range[1] = maxDate;\r\n  if ((!minDate && dateFrom) || (minDate && dateFrom && dateFrom > minDate))\r\n    minDate = dateFrom;\r\n  if (minDate) range[0] = new Date(minDate.getTime() + minDuration);\r\n\r\n  return range;\r\n}\r\n\r\nexport function disableDate(\r\n  date: Date,\r\n  [from, to]: Array<Date | null>\r\n): boolean {\r\n  return (from && date < from) || (to && date > to);\r\n}\r\n\r\nexport function disableTime(\r\n  date: Date,\r\n  [from, to]: Array<Date | null>,\r\n  disabledHours: number[]\r\n): DisabledTimeConfig {\r\n  const dateHours: number = date?.getHours();\r\n  let disabledMinutes: number[] = [];\r\n\r\n  if (from && getStartDate(date) === getStartDate(from)) {\r\n    const fromHours: number = from.getHours();\r\n    disabledHours = HOURS.filter(\r\n      (hour) => disabledHours.includes(hour) || hour < fromHours\r\n    );\r\n\r\n    if (dateHours === fromHours) {\r\n      const fromMinutes: number = from.getMinutes();\r\n      disabledMinutes = MINUTES.filter((minute) => minute < fromMinutes);\r\n    }\r\n  }\r\n\r\n  if (to && getEndDate(date) === getEndDate(to)) {\r\n    const toHours: number = to.getHours();\r\n    disabledHours = HOURS.filter(\r\n      (hour) => disabledHours.includes(hour) || hour > toHours\r\n    );\r\n\r\n    if (dateHours === toHours) {\r\n      const toMinutes: number = to.getMinutes();\r\n      disabledMinutes = MINUTES.filter((minute) => minute > toMinutes);\r\n    }\r\n  }\r\n\r\n  return {\r\n    nzDisabledHours(): number[] {\r\n      return disabledHours;\r\n    },\r\n    nzDisabledMinutes(hour: number): number[] {\r\n      return disabledHours.includes(hour) ? MINUTES : disabledMinutes;\r\n    },\r\n    nzDisabledSeconds(hour: number, minute: number): number[] {\r\n      return [];\r\n    },\r\n  };\r\n}\r\n\r\nexport function disableDateFrom(date: Date): boolean {\r\n  const now = new Date();\r\n  return date?.getDate() < now.getDate();\r\n}\r\n\r\nexport function disableDateTo(date: Date, from: Date): boolean {\r\n  return date?.getDate() < from?.getDate();\r\n}\r\n\r\nexport function disableHoursFrom(\r\n  date: Date,\r\n  disabledHours: number[]\r\n): number[] {\r\n  const now = new Date();\r\n  if (date?.getDate() === now.getDate()) {\r\n    const nowHour = now.getHours();\r\n    disabledHours = HOURS.filter(\r\n      (hour) => disabledHours.includes(hour) || hour < nowHour\r\n    );\r\n  }\r\n\r\n  return disabledHours;\r\n}\r\n\r\nexport function disableHoursTo(\r\n  to: Date,\r\n  from: Date,\r\n  disabledHours: number[]\r\n): number[] {\r\n  if (to?.getDate() === from?.getDate()) {\r\n    const fromDate = from.getHours();\r\n    disabledHours = HOURS.filter(\r\n      (hour) => disabledHours.includes(hour) || hour < fromDate\r\n    );\r\n  }\r\n\r\n  return disabledHours;\r\n}\r\n\r\nexport function disableMinutesFrom(\r\n  dateHour: number,\r\n  from: Date,\r\n  disabledHours: number[]\r\n): number[] {\r\n  let disabledMinutes: number[] = [];\r\n  const now = new Date();\r\n\r\n  if (from.getDate() === now.getDate()) {\r\n    const nowHour: number = now.getHours();\r\n    if (dateHour === nowHour) {\r\n      const nowMinute: number = now.getMinutes();\r\n      disabledMinutes = MINUTES.filter((minute) => minute < nowMinute);\r\n    }\r\n  }\r\n\r\n  return disabledHours.includes(dateHour) ? MINUTES : disabledMinutes;\r\n}\r\n\r\nexport function disableMinutesTo(\r\n  dateHour: number,\r\n  from: Date,\r\n  to: Date,\r\n  disabledHours: number[]\r\n): number[] {\r\n  let disabledMinutes: number[] = [];\r\n\r\n  if (from?.getDate() === to?.getDate()) {\r\n    if (from?.getHours() === dateHour) {\r\n      const fromMinute = from?.getMinutes();\r\n      disabledMinutes = MINUTES.filter((minute) => minute < fromMinute);\r\n    }\r\n  }\r\n\r\n  return disabledHours.includes(dateHour) ? MINUTES : disabledMinutes;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionaryService } from '@core/services/dictionary.service';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\n\r\nconst ITEM_REGEXP: RegExp = /\\${[^}]*}/g;\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  constructor(\r\n    private $dictionary: DictionaryService,\r\n    private $localization: LocalizationService\r\n  ) {\r\n  }\r\n\r\n  public concat(...values: string[]): string {\r\n    let separator: string = '';\r\n\r\n    if (values.length > 2) {\r\n      separator = values.pop();\r\n    }\r\n\r\n    return values\r\n      .map(value => this.transformValue(value))\r\n      .join(separator);\r\n  }\r\n\r\n  public construct(template: string, vars: Record<string, string>): string {\r\n    const valuesMatch: RegExpMatchArray = template.match(ITEM_REGEXP);\r\n    const values = valuesMatch.map(value => this.transformValue(value.slice(2, -1)));\r\n\r\n    valuesMatch.forEach((valueMatch, index) => {\r\n      template = template.replace(valueMatch, vars?.[values[index]] || values[index]);\r\n    });\r\n\r\n    return template;\r\n  }\r\n\r\n  private transformValue(value: string): string {\r\n    return this.$localization.translate(\r\n      this.$dictionary.get(value, value)\r\n    );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { RendererOptions, RendererType } from './renderer.model';\r\nimport { ActionParams } from '@core/models/actions.model';\r\n\r\n@Component({\r\n  selector: 'app-renderer, [app-renderer]',\r\n  templateUrl: './renderer.component.html',\r\n  styleUrls: [ './renderer.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    '[class.app-renderer]': `true`\r\n  }\r\n})\r\nexport class RendererComponent<T extends RendererOptions = RendererOptions> {\r\n  @Input()\r\n  public data: Record<string, any> | null = null;\r\n\r\n  @Input()\r\n  public type: RendererType | null = null;\r\n\r\n  @Input()\r\n  public options: T | null = null;\r\n\r\n  @Input()\r\n  public value: any = null;\r\n\r\n  @Input()\r\n  public lang: string | null = null;\r\n\r\n  @Output()\r\n  public actionCall: EventEmitter<ActionParams>\r\n    = new EventEmitter<ActionParams>();\r\n\r\n  public get isFormatter(): boolean {\r\n    return this.type === 'datetime' || this.type === 'number';\r\n  }\r\n\r\n  public emitActionCall($event: ActionParams | Event): void {\r\n    this.actionCall.emit($event as ActionParams);\r\n  }\r\n}\r\n","<ng-container [ngSwitch]=\"isFormatter\">\r\n  <app-formatter-renderer *ngSwitchCase=\"true\"\r\n                          [type]=\"type\"\r\n                          [options]=\"options\"\r\n                          [value]=\"value\"\r\n\r\n  >\r\n  </app-formatter-renderer>\r\n\r\n  <ng-container *ngSwitchDefault\r\n                [ngSwitch]=\"type\"\r\n  >\r\n    <app-link-renderer *ngSwitchCase=\"'link'\"\r\n                       [options]=\"options\"\r\n                       [value]=\"value\"\r\n                       [data]=\"data\"\r\n    >\r\n    </app-link-renderer>\r\n\r\n    <app-map-renderer *ngSwitchCase=\"'map'\"\r\n                      [options]=\"options\"\r\n                      [value]=\"value\"\r\n    >\r\n    </app-map-renderer>\r\n\r\n    <app-status-renderer *ngSwitchCase=\"'status'\"\r\n                         [options]=\"options\"\r\n                         [value]=\"value\"\r\n    >\r\n    </app-status-renderer>\r\n\r\n    <app-template-renderer *ngSwitchCase=\"'template'\"\r\n                         [options]=\"options\"\r\n                         [data]=\"data\"\r\n    >\r\n    </app-template-renderer>\r\n\r\n    <app-action-renderer *ngSwitchCase=\"'action'\"\r\n                         [options]=\"options\"\r\n                         [data]=\"data\"\r\n                         (actionCall)=\"emitActionCall($event)\"\r\n    >\r\n    </app-action-renderer>\r\n\r\n    <app-actions-renderer *ngSwitchCase=\"'actions'\"\r\n                          [options]=\"options\"\r\n                          [data]=\"data\"\r\n                          (actionCall)=\"emitActionCall($event)\"\r\n    >\r\n    </app-actions-renderer>\r\n\r\n    <ng-container *ngSwitchDefault>\r\n      {{value}}\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { HeaderComponent } from '@app/layout/header/header.component';\r\nimport { HeaderNotificationsComponent } from '@app/layout/header/components/header-notifications/header-notifications.component';\r\nimport { HeaderProfileComponent } from '@app/layout/header/components/header-profile/header-profile.component';\r\nimport { HeaderSearchComponent } from '@app/layout/header/components/header-search/header-search.component';\r\nimport { HeaderNotificationsItemComponent } from './components/header-notifications/header-notifications-item/header-notifications-item.component';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { TranslationModule } from '@shared/translation/translation.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ImagesModule } from '@shared/images/images.module';\r\nimport { NzListModule } from 'ng-zorro-antd/list';\r\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\r\nimport { HeaderLocaleComponent } from '@app/layout/header/components/header-locale/header-locale.component';\r\nimport { GlobalSearchModule } from '@shared/global-search/global-search.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    HeaderNotificationsComponent,\r\n    HeaderNotificationsItemComponent,\r\n    HeaderProfileComponent,\r\n    HeaderSearchComponent,\r\n    HeaderLocaleComponent,\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    HeaderNotificationsComponent,\r\n    HeaderNotificationsItemComponent,\r\n    HeaderProfileComponent,\r\n    HeaderSearchComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule.forChild(),\r\n    TranslationModule,\r\n    RouterModule,\r\n    ImagesModule,\r\n    NzAutocompleteModule,\r\n    NzListModule,\r\n    GlobalSearchModule\r\n  ]\r\n})\r\nexport class HeaderModule {\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpEvent, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, startWith } from 'rxjs/operators';\r\nimport { DictionaryService } from './dictionary.service';\r\nimport {\r\n  HttpRequestHeaders,\r\n  IHttpError,\r\n  IHttpErrorResponse,\r\n  IHttpProgressResponse,\r\n  IHttpRequestOptions,\r\n  IHttpResponse,\r\n  IHttpSuccessResponse\r\n} from '../models/http.model';\r\nimport { HttpErrorCode, mergeHttpHeaders } from '../utils/http.util';\r\nimport { IEntry } from '../models/common.model';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n  public constructor(\r\n    public native: HttpClient,\r\n    @Inject(DictionaryService) private $dictionary: DictionaryService\r\n  ) {\r\n  }\r\n\r\n  private static createHeader(name: string, value: string): HttpHeaders {\r\n    return new HttpHeaders({ [name]: value });\r\n  }\r\n\r\n  private static handlerResponse<T>(\r\n    request: Observable<any>\r\n  ): Observable<IHttpResponse<T>> {\r\n    return request.pipe(\r\n      startWith({ state: 'pending', nativeEvent: null }),\r\n      map((httpEvent: HttpEvent<T> | HttpErrorResponse) =>\r\n        httpEvent instanceof HttpResponse\r\n          ? HttpService.handlerSuccessResponse<T>(httpEvent)\r\n          : httpEvent instanceof HttpErrorResponse\r\n          ? HttpService.handlerErrorResponse(httpEvent)\r\n          : HttpService.handlerProgressResponse(httpEvent)\r\n      ),\r\n      catchError(err =>\r\n        of(HttpService.handlerErrorResponse(err))\r\n      )\r\n    );\r\n  }\r\n\r\n  private static handlerErrorResponse(httpErrorResponse: HttpErrorResponse): IHttpErrorResponse {\r\n    const {error, message, status}: HttpErrorResponse = httpErrorResponse;\r\n\r\n    return {\r\n      data: null,\r\n      connection: !!status,\r\n      error: HttpService.handlerError(error || message, status),\r\n      state: 'error',\r\n      success: false,\r\n      nativeEvent: httpErrorResponse\r\n    };\r\n  }\r\n\r\n  private static handlerProgressResponse(httpEvent: HttpEvent<any>): IHttpProgressResponse {\r\n    return {\r\n      state: 'pending',\r\n      nativeEvent: httpEvent\r\n    };\r\n  }\r\n\r\n  private static handlerSuccessResponse<T>(httpResponse: HttpResponse<T>): IHttpSuccessResponse<T> {\r\n    return {\r\n      data: httpResponse.body as T,\r\n      state: 'success',\r\n      success: true,\r\n      nativeEvent: httpResponse\r\n    };\r\n  }\r\n\r\n  private static handlerError(error: Record<string, any>, status: number): IHttpError {\r\n    const code: string = !status\r\n      ? HttpErrorCode[0]\r\n      : HttpErrorCode[status] || HttpErrorCode.default;\r\n\r\n    if (typeof error === 'string') {\r\n      return { code: HttpErrorCode.default, message: error };\r\n    }\r\n\r\n    if (error instanceof ProgressEvent) {\r\n      return null;\r\n    }\r\n\r\n    if (error?.error && typeof error?.error === 'object') {\r\n      error = error.error;\r\n    }\r\n\r\n    return { code, message: error?.error || error?.message || DictionaryService.get(code) };\r\n  }\r\n\r\n  public delete<T>(\r\n    url: string,\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    return this.request<T>('delete', url, {}, options, headers);\r\n  }\r\n\r\n  public get<T>(\r\n    url: string,\r\n    params: IEntry<any> = {},\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    if (params) {\r\n      options.params = params as HttpParams;\r\n    }\r\n\r\n    return this.request<T>('get', url, {}, options, headers);\r\n  }\r\n\r\n  public getText(\r\n    url: string,\r\n    params: IEntry<any> = {},\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<string>> {\r\n    options.responseType = 'text';\r\n\r\n    return this.get<string>(url, params, options, headers);\r\n  }\r\n\r\n  public head<T>(\r\n    url: string,\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    return this.request<T>('head', url, {}, options, headers);\r\n  }\r\n\r\n  public post<T>(\r\n    url: string,\r\n    data: any = {},\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    return this.request('post', url, data, options, headers);\r\n  }\r\n\r\n  public postForm<T>(\r\n    url: string,\r\n    data: {} = {},\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    const formData: string = Object.entries(data)\r\n      .reduce((urlSearchParams: URLSearchParams, [ name, value ]) => {\r\n          urlSearchParams.append(name, value as string);\r\n          return data;\r\n        },\r\n        new URLSearchParams()\r\n      )\r\n      .toString();\r\n\r\n    options.headers = HttpService.createHeader('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\r\n\r\n    return this.post<T>(url, formData, options, headers);\r\n  }\r\n\r\n  public put<T>(\r\n    url: string,\r\n    data: {} = {},\r\n    options: IHttpRequestOptions = {},\r\n    headers: HttpRequestHeaders = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    return this.request<T>('put', url, data, options, headers);\r\n  }\r\n\r\n  public request<T>(\r\n    type: string,\r\n    url: string,\r\n    data: {} = {},\r\n    httpOptions: Record<string, any> = {},\r\n    headers: {} = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    let request$: Observable<HttpEvent<T> | HttpErrorResponse | any>;\r\n    httpOptions.headers = mergeHttpHeaders(httpOptions.headers, headers);\r\n\r\n    if (!httpOptions.observe) {\r\n      httpOptions.observe = 'response';\r\n    }\r\n\r\n    if (httpOptions.responseType === 'json' || !httpOptions.responseType) {\r\n      httpOptions.headers = httpOptions.headers.append('Content-Type', 'application/json;charset=UTF-8');\r\n    }\r\n\r\n    switch (type) {\r\n      case 'delete':\r\n        request$ = this.native.delete<T>(url, httpOptions);\r\n        break;\r\n\r\n      case 'head':\r\n        request$ = this.native.head<T>(url, httpOptions);\r\n        break;\r\n\r\n      case 'post':\r\n        request$ = this.native.post<T>(url, data, httpOptions);\r\n        break;\r\n\r\n      case 'put':\r\n        request$ = this.native.put<T>(url, data, httpOptions);\r\n        break;\r\n\r\n      default:\r\n        request$ = this.native.get<T>(url, httpOptions);\r\n    }\r\n\r\n    return HttpService.handlerResponse<T>(request$);\r\n  }\r\n}\r\n\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Injector,\r\n  Input, OnDestroy,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { Subscription } from 'rxjs';\r\nimport { Subscribe } from '@core/utils/subcriptions.util';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: [ './filter.component.less' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FilterComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  public formGroup: FormGroup;\r\n\r\n  @Output()\r\n  public valuesChange: EventEmitter<Record<string, any>> = new EventEmitter<Record<string, any>>();\r\n\r\n  @Subscriptions()\r\n  protected _subscriptions: Subscription;\r\n  protected cdr: ChangeDetectorRef = this.injector.get(ChangeDetectorRef);\r\n\r\n  constructor(protected injector: Injector) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._subscriptions = Subscribe(\r\n      this.formGroup.valueChanges,\r\n      values => this.valuesChange.emit(values)\r\n    );\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n  }\r\n\r\n  protected control(name: string): FormControl | null {\r\n    return this.formGroup.controls?.[name] as FormControl;\r\n  }\r\n\r\n  protected assignControls(suffix: string = 'Control'): void {\r\n    Object\r\n      .entries(this.formGroup.controls)\r\n      .forEach(([ name, control ]) =>\r\n        this[`${name}${suffix}`] = control\r\n      );\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeUrl'\r\n})\r\nexport class SafeUrlPipe implements PipeTransform {\r\n  public constructor(\r\n    private domSanitizer: DomSanitizer\r\n  ) {\r\n  }\r\n\r\n  public transform(url) {\r\n    return this.domSanitizer\r\n      .bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nexport function detectCdr(target: object): ChangeDetectorRef {\r\n  return Object.values(target).find(property =>\r\n    '_appRef' in property\r\n  )\r\n}\r\n","import { INavigations } from '@app/layout/navigation/navigation.model';\r\n\r\nconst TEAM_NAV_URL_KEY: string = 'team';\r\nconst QR_NAV_ID: string = '7';\r\nconst QR_CONF_METHOD_NAME: string = 'QR_CODE';\r\n\r\nexport function filterNavigation(\r\n  navigations: INavigations,\r\n  labelGroups: number[]\r\n): INavigations {\r\n  return navigations.filter(\r\n    ({ url }) => !url.includes(TEAM_NAV_URL_KEY) || labelGroups.length\r\n  );\r\n}\r\n\r\nexport function showHideQRNavigation(\r\n  navigations: INavigations,\r\n  confirmationMethod: string\r\n): INavigations {\r\n  if (confirmationMethod !== QR_CONF_METHOD_NAME) {\r\n    return navigations.filter((nav) => nav.id !== QR_NAV_ID);\r\n  }\r\n  return navigations;\r\n}\r\n","import { Observable, Subscription } from 'rxjs';\r\nimport { IEntry } from '../models/common.model';\r\nimport { CommonFunction } from '@core/types/function.type';\r\n\r\ntype SubscriptionFactory = <T>(observable: Observable<T>, callback: Function) => Subscription;\r\n\r\nexport function destroy(subscriptions: Subscription | IEntry<Subscription> | Array<Subscription>): void;\r\nexport function destroy(...subscriptions: Array<Subscription>);\r\nexport function destroy(...subscriptions: any) {\r\n  if (subscriptions instanceof Subscription) {\r\n    subscriptions.unsubscribe();\r\n    return;\r\n  }\r\n\r\n  try {\r\n    subscriptions = subscriptions instanceof Array ? subscriptions : Object.values(subscriptions);\r\n    subscriptions.forEach(destroy);\r\n  } catch (e) {\r\n  }\r\n}\r\n\r\n\r\nexport const Subscribe: SubscriptionFactory = <T>(\r\n  observable: Observable<T>,\r\n  callback: CommonFunction<T, void>\r\n): Subscription => {\r\n  return observable.subscribe(callback);\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalLoaderService {\r\n  public globalLoading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public headerLoading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public menuLoading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public contentLoading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n}\r\n","import { Location } from '@angular/common';\r\nimport {Component, ChangeDetectionStrategy, Input} from '@angular/core';\r\nimport {IBreadcrumbs} from './breadcrumb.model';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BreadcrumbComponent {\r\n  @Input() items: IBreadcrumbs;\r\n  @Input() back: boolean = false;\r\n  constructor(private _location: Location) { }\r\n\r\n  goBack(): void {\r\n    this._location.back();\r\n  }\r\n}\r\n","<nz-breadcrumb class=\"breadcrumbs\">\r\n  <nz-breadcrumb-item *ngIf=\"back\">\r\n    <button [style.padding.px]=\"0\" nz-button nzType=\"text\" (click)=\"goBack()\">\r\n      <i nz-icon nzType=\"arrow-left\"></i>{{ 'Back' | translate }}\r\n    </button>\r\n  </nz-breadcrumb-item>\r\n  <nz-breadcrumb-item *ngFor=\"let item of items; last as last\" class=\"breadcrumbs__item\">\r\n    <a [routerLink]=\"item.url\" *ngIf=\"!last\">{{ item.title }}</a>\r\n    <span *ngIf=\"last\">{{ item.title }}</span>\r\n  </nz-breadcrumb-item>\r\n</nz-breadcrumb>\r\n","import { ColorAlias } from '@src/theme/ts';\r\nimport { IStatusRendererOptions } from '@base/renderer/renderer.model';\r\n\r\nexport class StatusService {\r\n  public mapColor(options: IStatusRendererOptions, value: any): string {\r\n    const mappedColor: string = options.map[value].color;\r\n\r\n    if (mappedColor && mappedColor.startsWith('#')) {\r\n      return mappedColor;\r\n    }\r\n\r\n    return ColorAlias[mappedColor] || ColorAlias.default;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { isEmpty } from '@core/utils/common.util';\r\n\r\n@Pipe( {\r\n  name: 'highlight'\r\n} )\r\nexport class HighlightPipe implements PipeTransform {\r\n  constructor(\r\n    private $sanitizer: DomSanitizer\r\n  ) {\r\n  }\r\n\r\n  transform( text: string, query: string, color?: string ): string | SafeHtml {\r\n    if (isEmpty( query )) {\r\n      return text;\r\n    }\r\n\r\n    const queryRegexp: RegExp = new RegExp( query, 'gi' );\r\n    const matches: RegExpMatchArray = text.match( queryRegexp );\r\n\r\n    if (!matches) {\r\n      return text;\r\n    }\r\n\r\n    text = text.replace( queryRegexp, () => {\r\n      if (!color) {\r\n        return `<strong>${matches[ 0 ]}</strong>`;\r\n      }\r\n\r\n      return `<strong style=\"color: ${color}\">${matches[ 0 ]}</strong>`;\r\n    } );\r\n\r\n    return this.$sanitizer.bypassSecurityTrustHtml( text );\r\n  }\r\n}\r\n","import { SUCCESS_KEY } from '@shared/http/utils/constants.util';\r\n\r\nexport function isEmpty(value: any): boolean {\r\n  return value === ''\r\n    || value === null\r\n    || !isDefined(value);\r\n}\r\n\r\nexport function isDefined(value: any): boolean {\r\n  return typeof value !== 'undefined';\r\n}\r\n\r\nexport function objectsEquals(\r\n  source?: Object,\r\n  target?: Object,\r\n  strict: boolean = true\r\n): boolean {\r\n  if (!source) { source = {}; }\r\n  if (!target) { target = {}; }\r\n\r\n  return Object.entries(source).every(([ key, value ]) =>\r\n    (strict && target[key] === value) || target[key] == value\r\n  );\r\n}\r\n\r\nexport function processSuccessResponseObject<T = any>(source: any): T | null {\r\n  if (!source || typeof source !== 'object') {\r\n    return null;\r\n  }\r\n\r\n  const successValue = source[SUCCESS_KEY];\r\n  delete source[SUCCESS_KEY];\r\n\r\n  const keys = Object.keys(source);\r\n  if (keys.length === 1) {\r\n    const firstKey: string = keys.shift();\r\n    return !firstKey ? null : source[firstKey];\r\n  } else {\r\n    return {\r\n      ...source,\r\n      [SUCCESS_KEY]: successValue\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\r\nimport { IUser, User } from '../models/user.model';\r\nimport { IAppointment, ILabelGroups } from '@shared/http/models/database.model';\r\nimport { DEFAULT_USER_AVATAR } from '@shared/http/utils/images.const';\r\nimport { switchMap, switchMapTo } from 'rxjs/operators';\r\nimport { IDictionaryLabelsItem } from '@shared/dictionaries/dictionaries.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  public isOauthLoggedIn: boolean = false;\r\n  private _user$ = new ReplaySubject<User>(1);\r\n  private _user: User;\r\n  private _authorization: string = '';\r\n  private _tokenUUID: string = '';\r\n  private _deviceId: string = '';\r\n  private _isManager: boolean = null;\r\n  private _label: IDictionaryLabelsItem = null;\r\n\r\n  constructor(private _dictionaries: DictionariesService) {}\r\n\r\n  get label(): IDictionaryLabelsItem | null {\r\n    return this._label;\r\n  }\r\n\r\n  get isAuth(): boolean {\r\n    return Boolean(this._user);\r\n  }\r\n\r\n  get info(): IUser {\r\n    return this._user;\r\n  }\r\n\r\n  get info$(): Observable<IUser> {\r\n    return this._user$.asObservable();\r\n  }\r\n\r\n  get authorization(): string {\r\n    return this._authorization;\r\n  }\r\n\r\n  get tokenUUID(): string {\r\n    return this._tokenUUID;\r\n  }\r\n\r\n  get deviceId(): string {\r\n    return this._deviceId;\r\n  }\r\n\r\n  get isManager(): boolean {\r\n    return this._isManager;\r\n  }\r\n\r\n  get label$(): Observable<IDictionaryLabelsItem> {\r\n    return this._user$.pipe(switchMap(() => this.getLabel$()));\r\n  }\r\n\r\n  setUser(\r\n    id: number,\r\n    deviceId: string,\r\n    uuid: string,\r\n    credentials: string\r\n  ): void {\r\n    this._authorization = `Basic ${credentials}`;\r\n    this._tokenUUID = uuid;\r\n    this._deviceId = deviceId;\r\n\r\n    this._dictionaries.already$\r\n      .pipe(\r\n        switchMap(() =>\r\n          forkJoin([\r\n            this._dictionaries.getDictionary<ILabelGroups[]>('labelGroups'),\r\n            this.getLabel$(id),\r\n          ])\r\n        )\r\n      )\r\n      .subscribe(([labelGroupsDict, label]) => {\r\n        const { name, avatarImageUrl, labelGroups }: IDictionaryLabelsItem =\r\n          label;\r\n\r\n        this.setManager(labelGroupsDict, id);\r\n        this._user = new User({\r\n          id,\r\n          name,\r\n          deviceId,\r\n          labelGroups,\r\n          tokenUUID: this._tokenUUID,\r\n          avatarUrl: avatarImageUrl || DEFAULT_USER_AVATAR,\r\n          authorization: this._authorization,\r\n        });\r\n        this._user.setLabelGroupsManager(labelGroupsDict);\r\n        this._label = label;\r\n        this.updateUser$();\r\n      });\r\n  }\r\n\r\n  setManager(groups: ILabelGroups[], userId: number): void {\r\n    const managerIds = groups.reduce((acc, item) => {\r\n      acc.push(...item.managers);\r\n      return acc;\r\n    }, []);\r\n    this._isManager = managerIds.includes(userId);\r\n  }\r\n\r\n  updateUser$(): void {\r\n    this._user$.next(this._user);\r\n  }\r\n\r\n  private getLabel$(id = this._user.id): Observable<IDictionaryLabelsItem> {\r\n    return this._dictionaries.getDictionaryItemByKey('labels', id);\r\n  }\r\n\r\n  isAppointmentOrganizer(appointment: IAppointment): boolean {\r\n    if (appointment && this._label) {\r\n      return (\r\n        this._label.mail.toLowerCase() ===\r\n        appointment.appointmentOrganizerMail.toLowerCase()\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GlobalLoaderService } from '@core/services/global-loader.service';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { TeamProfileWorkplaceTableMeta } from '@presentation/team/team-profile/team-profile.model';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { IBuilding, IFloor, IUser, IWorkplace, IWorkplaceReservation } from '@shared/http/models/database.model';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport { UserOfficesService } from '@src/app/core/services/user-offices.service';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TeamProfileService {\r\n  constructor(\r\n    private $route: ActivatedRoute,\r\n    private $dictionaries: DictionariesService,\r\n    private $userOffices: UserOfficesService,\r\n    private $loader: GlobalLoaderService,\r\n    private $api: ReservationsApiService,\r\n    private $measurements: MeasurementsService,\r\n    private $user: UserService\r\n  ) {}\r\n\r\n  private _user: IUser;\r\n  private _workplaceReservations: IWorkplaceReservation[];\r\n  private _workplaces: IWorkplace[];\r\n  private _buildings: IBuilding[];\r\n  private _floors: IFloor[];\r\n  private _statuses: Record<string, any>;\r\n  get userId$(): Observable<number> {\r\n    return this.$route.paramMap.pipe(\r\n      switchMap((params) => of(Number(params.get('userId') || this.$user.info.id)))\r\n    );\r\n  }\r\n  get user$(): Observable < IUser > {\r\n    return this.userId$.pipe(\r\n      tap(() => this.$loader.contentLoading$.next(true)),\r\n      switchMap((id) => this.$dictionaries.getDictionaryItemByKey<IUser>('labels', id)),\r\n      tap((_u) => this._user = _u)\r\n    );\r\n  }\r\n  get workplace$(): Observable < { workplaceReservations: IWorkplaceReservation[]; floors: IFloor[]; buildings: IBuilding[]; workplaces: IWorkplace[]; statuses: any[]; } > {\r\n    return this.user$.pipe(\r\n      switchMap((user) => forkJoin({\r\n        workplaceReservations: this.$api.getWorkplaceReservations({\r\n          labelId: user.id\r\n        }),\r\n        workplaces: this.$dictionaries.getDictionary<IWorkplace[]>('workplaces'),\r\n        floors: this.$userOffices.getMyOrderedFloors<IFloor[]>(),\r\n        buildings: this.$userOffices.getMyOrderedBuildings<IBuilding[]>(),\r\n        statuses: this.$dictionaries.getDictionary('statuses'),\r\n      })),\r\n      tap(({ workplaceReservations, workplaces, floors, buildings, statuses }) => {\r\n        this._workplaceReservations = workplaceReservations;\r\n        this._workplaces = workplaces;\r\n        this._floors = floors;\r\n        this._buildings = buildings;\r\n        this._statuses = statuses[0].statuses.reduce((acc, status) => {\r\n          acc[status.code] = {\r\n            value: status.name,\r\n            color: status.color\r\n          };\r\n          return acc;\r\n        }, {});\r\n      }),\r\n    );\r\n  }\r\n  get workplaceTableMeta$(): Observable<TeamProfileWorkplaceTableMeta[]> {\r\n    return this.workplace$.pipe(\r\n      map(({ workplaceReservations, workplaces, floors, buildings  }) => {\r\n        return workplaceReservations.map((_r) => {\r\n          const workplace = workplaces.find((_w) => _w.id === _r.workplaceId);\r\n          const floor = floors.find((_f) => _f.id === workplace?.floorMapId);\r\n          const building = buildings.find((_b) => _b.id === floor?.buildingId);\r\n          return {\r\n            reservationId: _r.id,\r\n            floorId: floor?.id || 0,\r\n            placeId: workplace?.id || 0,\r\n            building: building?.name || '-',\r\n            floor: floor?.name || '-',\r\n            place: workplace?.name || '-',\r\n            startDate: _r.dateTimeFrom,\r\n            endDate: _r.dateTimeTo,\r\n            status: {\r\n              value: _r.status,\r\n              options: { map: this._statuses }\r\n            }\r\n          };\r\n        });\r\n      }),\r\n      tap(() => this.$loader.contentLoading$.next(false)),\r\n    );\r\n  }\r\n  get workplaceReservations(): IWorkplaceReservation[] {\r\n    return this._workplaceReservations;\r\n  }\r\n  get workplaces(): IWorkplace[] {\r\n    return this._workplaces;\r\n  }\r\n  get floors(): IFloor[] {\r\n    return this._floors;\r\n  }\r\n  get buildings(): IBuilding[] {\r\n    return this._buildings;\r\n  }\r\n  get dateFormat(): string {\r\n    return this.$measurements.getMeasurementByName('dateTime');\r\n  }\r\n  get statuses(): any {\r\n    return this._statuses;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { DictionaryService } from '@shared/dictionaries/services/dictionary.service';\r\nimport { IDictionaryStatuses, IStatuses, IStatusesMap } from '@shared/dictionaries/models/statuses.model';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  STATUSES_DEFAULT_VALUES,\r\n  STATUSES_DICT_NAME,\r\n  STATUSES_URL_KEY\r\n} from '@shared/dictionaries/constants/statuses.constant';\r\nimport { pluck } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StatusesService extends DictionaryService<IDictionaryStatuses> {\r\n  constructor(\r\n    protected injector: Injector\r\n  ) {\r\n    super(injector);\r\n    this._dictionaryName = STATUSES_DICT_NAME;\r\n  }\r\n\r\n  public get statuses$(): Observable<IStatuses> {\r\n    return this.value$.pipe(\r\n      pluck('statuses')\r\n    );\r\n  }\r\n\r\n  public get statuses(): IStatuses {\r\n    return this.value.statuses;\r\n  }\r\n\r\n  public get statusesMap(): IStatusesMap {\r\n    const map: IStatusesMap = new Map();\r\n\r\n    this.statuses.forEach((status) => map.set(status.code, status));\r\n\r\n    return map;\r\n  }\r\n\r\n  public get allStatusesCodes(): string[] {\r\n    return this.statuses.map(({ code }) => code);\r\n  }\r\n\r\n  public initialize(): Observable<any> {\r\n    return super.initialize(STATUSES_URL_KEY, STATUSES_DEFAULT_VALUES);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { combineLatest, forkJoin, Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { IStoreItem, IStoreItems } from '@shared/indexed-db/indexed-db.model';\r\nimport { indexedDbConfig } from '@shared/indexed-db/indexed-db.config';\r\n\r\n@Injectable()\r\nexport class IndexedDbService {\r\n  constructor(\r\n    private $indexedDb: NgxIndexedDBService,\r\n  ) {\r\n  }\r\n\r\n  public getStore(name: string): Observable<IStoreItems> {\r\n    return this.$indexedDb.getAll(name);\r\n  }\r\n\r\n  public getStoreItemByKey<T extends any = IStoreItems>(name: string, id: number): Observable<T> {\r\n    return this.$indexedDb.getByKey(name, id);\r\n  }\r\n\r\n  public getStoreItemByIndex<T extends any = IStoreItem>(name: string, index: string, value: any): Observable<T> {\r\n    return this.$indexedDb.getByIndex(name, index, value).pipe(\r\n      catchError((error) => {\r\n        console.error(`Error get item by index from store '${name} with index '${index}' with value '${value}'`, error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public clearAll(): Observable<any> {\r\n    return forkJoin(\r\n      indexedDbConfig.objectStoresMeta.map(({ store }) => this.clear(store))\r\n    );\r\n  }\r\n\r\n  public clear(storeName: string): Observable<boolean> {\r\n    return this.$indexedDb.clear(storeName).pipe(\r\n      map(() => true),\r\n      catchError(error => {\r\n        console.error(`Error clear dictionary store '${storeName}' in indexeddb`, error);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  public addStoreItems(storeName: string, items: IStoreItems): Observable<any> {\r\n    return combineLatest(\r\n      items.map(item => this.addStoreItem(storeName, item, item.id))\r\n    ).pipe(\r\n      catchError(error => {\r\n        console.error(`Error adding records to the directory ${name}`, error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public addStoreItem(storeName: string, value: IStoreItem, id?: number): Observable<any> {\r\n    return this.$indexedDb.add(storeName, value).pipe(\r\n      catchError(error => {\r\n        console.error(`Error adding an entry with id ${id} to the directory ${storeName}`, error);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n  public updateStoreItem(storeName: string, value: IStoreItem, key?: any): Observable<any> {\r\n    return this.$indexedDb.update(storeName, value, key);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IUser } from '@core/models/user.model';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { ReservationsApiService } from '@shared/http/services/reservations-api.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthKey } from '@src/app/core/enums/auth-key.enum';\r\nimport { AuthMethod } from '@presentation/auth/auth.model';\r\nimport { UrlService } from '@core/services/url.service';\r\nimport { IConfigValues } from '@core/models/config.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private _login$ = new BehaviorSubject<boolean>(false);\r\n  private _authMethod: AuthMethod = 'basic';\r\n  private userCaptcha$ = new BehaviorSubject<boolean>(false);\r\n  private authNumberAttempts: number = 0;\r\n  private _oauth2AuthorizationUrl: string;\r\n  private _serverLogout: string;\r\n  private _oauth2Available: boolean = false;\r\n  private _hostUrl: string;\r\n\r\n  constructor(\r\n    private $router: Router,\r\n    private _api: ReservationsApiService,\r\n    private _cookie: CookieService,\r\n    private _user: UserService,\r\n    private $config: ConfigService,\r\n    private $settings: SettingsService,\r\n    private $url: UrlService\r\n  ) {\r\n    const userStr = _cookie.get(this._cookieName);\r\n    if (userStr) {\r\n      const { id, deviceId, tokenUUID, authorization }: IUser =\r\n        JSON.parse(userStr);\r\n      _user.setUser(id, deviceId, tokenUUID, authorization.split(' ')[1]);\r\n      this._login$.next(true);\r\n    }\r\n\r\n    this.$config\r\n      .getOne$<AuthMethod>('authMethod')\r\n      .subscribe(authMethod => {\r\n        this._authMethod = authMethod;\r\n      });\r\n\r\n    this.$config\r\n      .getOne$()\r\n      .subscribe((configValues: IConfigValues) => {\r\n        this.configureAuth(configValues);\r\n      });\r\n  }\r\n\r\n  static base64credentials(login, password): string {\r\n    return window.btoa(unescape(encodeURIComponent(`${login}:${password}`)));\r\n  }\r\n\r\n  public get isLoggedIn(): boolean {\r\n    return this._login$.getValue();\r\n  }\r\n\r\n  public get isLoggedIn$(): Observable<boolean> {\r\n    return this._login$;\r\n  }\r\n\r\n  public get authMethod(): AuthMethod {\r\n    return this._authMethod;\r\n  }\r\n\r\n  public get isBotDetected$(): Observable<boolean> {\r\n    return this.userCaptcha$;\r\n  }\r\n\r\n  public get oauth2Available(): boolean {\r\n    return this.$config.get('oauth2Available');\r\n  }\r\n\r\n  public get oauth2AuthorizationUrl(): string {\r\n    const hostUrl: string = this.$config.get('hostUrl');\r\n    const oauth2AuthorizationUrl: string = this.$config.get('oauth2AuthorizationUrl');\r\n\r\n    return this.$url.concat(hostUrl, oauth2AuthorizationUrl);\r\n  }\r\n\r\n  private checkNumberAttempts(): void {\r\n    this.authNumberAttempts++;\r\n    if (this.authNumberAttempts === this.maxAuthNumberAttempts) {\r\n      this.userCaptcha$.next(true);\r\n    }\r\n  }\r\n\r\n  public get oauthSuccessRoute(): string {\r\n    return this.$config.get<string>('oauth2SuccessLoginPage');\r\n  }\r\n\r\n  public get maxAuthNumberAttempts(): number {\r\n    return this.$config.get<number>('authNumberAttempts') || 3;\r\n  }\r\n\r\n  public getOtpCode(authKey: string, credentials: string): Observable<any> {\r\n    const headers: Record<string, string> = {};\r\n    headers.Authorization = `Basic ${credentials}`;\r\n    const body: Record<string, any> = {};\r\n    body.authKeyType = AuthKey.PHONE;\r\n    body.authKey = authKey;\r\n    return this._api.getOtpToken(body, headers);\r\n  }\r\n\r\n  public login(credentials: string): Observable<any> {\r\n    const headers: Record<string, string> = {};\r\n    this.checkNumberAttempts();\r\n\r\n    switch (this._authMethod) {\r\n      case 'basic':\r\n        headers.Authorization = `Basic ${credentials}`;\r\n        break;\r\n\r\n      case 'ad_token':\r\n        headers.ad_token = credentials;\r\n        break;\r\n    }\r\n\r\n    return this._api.getUserToken({ deviceOs: 'ANGULAR' }, headers); // isDpaAutoAssign = false\r\n  }\r\n\r\n  public checkOtpCode(authKey: string, authCode: string): Observable<any> {\r\n    const body: Record<string, any> = {};\r\n    body.authKeyType = AuthKey.PHONE;\r\n    body.authKey = authKey;\r\n    body.authCode = authCode;\r\n    this.checkNumberAttempts();\r\n    return this._api.checkOtpToken(body);\r\n  }\r\n\r\n  public logout(): void {\r\n    this.setLogin(false);\r\n\r\n    if (this._user.isOauthLoggedIn) {\r\n      this.oauth2Logout();\r\n    }\r\n\r\n    this.$router.navigateByUrl('/auth');\r\n  }\r\n\r\n  public goToMainUrl(): void {\r\n    this.$router.navigateByUrl('/');\r\n  }\r\n\r\n  public initializeSettings(): Observable<any> {\r\n    return this.$settings.initialize().pipe(tap(() => this.goToMainUrl()));\r\n  }\r\n\r\n  setLogin(login: boolean): void {\r\n    this._login$.next(login);\r\n\r\n    if (login) {\r\n      this._user.info$.subscribe((user) => {\r\n        const days =\r\n          +this.$config.get<number>('authTokenCookieTime') /\r\n          1000 /\r\n          60 /\r\n          60 /\r\n          24; // calculate count of days\r\n        const cookieTime = days || 0.1;\r\n        this._cookie.set(this._cookieName, JSON.stringify(user), cookieTime);\r\n      });\r\n    } else {\r\n      this._cookie.delete(this._cookieName);\r\n    }\r\n    this.resetAuthAttempts();\r\n  }\r\n\r\n  private configureAuth({ hostUrl, oauth2Available, authMethod, oauth2AuthorizationUrl, serverLogoutUrl }: IConfigValues): void {\r\n    this._authMethod = authMethod;\r\n    this._oauth2Available = oauth2Available;\r\n    this._serverLogout = this.$url.concat(hostUrl, serverLogoutUrl);\r\n\r\n    if (oauth2Available) {\r\n      this.configureOauth2(hostUrl, oauth2AuthorizationUrl);\r\n    }\r\n  }\r\n\r\n  public configureOauth2(hostUrl: string, oauth2AuthorizationUrl: string): void {\r\n    this._oauth2AuthorizationUrl = this.$url.concat(hostUrl, oauth2AuthorizationUrl);\r\n  }\r\n\r\n  private get _cookieName(): string {\r\n    return this.$config.get<string>('authTokenCookieName') || 'auth';\r\n  }\r\n\r\n  private resetAuthAttempts(): void {\r\n    this.authNumberAttempts = 0;\r\n    this.userCaptcha$.next(false);\r\n  }\r\n\r\n  private oauth2Logout(): void {\r\n    this._user.isOauthLoggedIn = false;\r\n    window.location.href = this._serverLogout;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Pipe({\r\n  name: 'delay'\r\n})\r\nexport class DelayPipe implements PipeTransform {\r\n  public transform<T>(value: T, delayIn: number = 0, delayOut: number = 0): Observable<T> {\r\n    return of(value).pipe(delay(!!value ? delayIn : delayOut));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { NavigationComponent } from '@app/layout/navigation/navigation.component';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NavigationService } from '@app/layout/navigation/navigation.service';\r\nimport { NavigationApi } from '@app/layout/navigation/navigation.api';\r\n\r\n@NgModule({\r\n  declarations: [NavigationComponent],\r\n  exports: [NavigationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NzMenuModule,\r\n    NzIconModule,\r\n    RouterModule,\r\n    NzSpinModule,\r\n  ],\r\n  providers: [\r\n    NavigationApi,\r\n    NavigationService\r\n\r\n  ]\r\n})\r\nexport class NavigationModule { }\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { CardEditModeEvent, CardType, IDescription } from './card.model';\r\nimport { CardService } from '@base/card/card.service';\r\nimport { CardFormControlDirective } from './card-form-control.directive';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CALENDAR_ICON } from '@src/app/shared/http/utils/images.const';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.less'],\r\n  providers: [CardService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CardComponent implements AfterContentInit {\r\n  CALENDAR_ICON = CALENDAR_ICON;\r\n  @Input() public title = this.$service.card.title;\r\n  @Input() public width = this.$service.card.width;\r\n  @Input() public image = this.$service.card.image;\r\n  @Input() public descriptionList: IDescription[] =\r\n    this.$service.card.descriptionList;\r\n  @Input() public tags: string[] = this.$service.card.tags;\r\n  @Input() type: CardType = 'flex';\r\n  @Input() public showEditControls: boolean = false;\r\n  @Input() public editModeEnabled: boolean = false;\r\n  @Input() public loading: boolean = false;\r\n  @Input() public cardForm: FormGroup = new FormGroup({});\r\n  @Input() public calendarLink: string;\r\n\r\n  @Output() public editModeChange: EventEmitter<CardEditModeEvent> =\r\n    new EventEmitter();\r\n\r\n  @ContentChildren(CardFormControlDirective)\r\n  formControls: QueryList<CardFormControlDirective>;\r\n  readonly formControlsHash: Record<string, TemplateRef<unknown>> = {};\r\n\r\n  constructor(private $service: CardService, private route: Router) {}\r\n\r\n  ngAfterContentInit() {\r\n    this.formControls.forEach(\r\n      (item) => (this.formControlsHash[item.name] = item.templateRef)\r\n    );\r\n  }\r\n\r\n  enableEditMode() {\r\n    this.editModeChange.emit(CardEditModeEvent.Enable);\r\n  }\r\n  saveEdit() {\r\n    this.editModeChange.emit(CardEditModeEvent.Save);\r\n  }\r\n  cancelEdit() {\r\n    this.editModeChange.emit(CardEditModeEvent.Cancel);\r\n  }\r\n\r\n  onLink(link: string) {\r\n    this.route.navigate([link]);\r\n  }\r\n}\r\n","<ng-container *ngTemplateOutlet=\"type === 'flex' ? flex : table\"></ng-container>\r\n\r\n<ng-template #table>\r\n  <nz-card [style.width]=\"width\" [nzCover]=\"coverTpl\">\r\n    <nz-descriptions class=\"description-list\" [nzTitle]=\"title\" [nzColumn]=\"1\">\r\n      <nz-descriptions-item\r\n        *ngFor=\"let desc of descriptionList\"\r\n        [nzTitle]=\"desc.name\"\r\n      >\r\n        {{ desc.value }}\r\n      </nz-descriptions-item>\r\n    </nz-descriptions>\r\n    <div>\r\n      <nz-tag class=\"mb-10\" *ngFor=\"let tag of tags\">{{ tag }}</nz-tag>\r\n    </div>\r\n  </nz-card>\r\n</ng-template>\r\n\r\n<ng-template #flex>\r\n  <nz-card [style.width]=\"width\" [nzCover]=\"coverTpl\">\r\n    <h5 class=\"card__title\">\r\n      {{ title }}\r\n      <div [title]=\"'Meeting room calendar' | translate\">\r\n        <img\r\n          class=\"card__calendar\"\r\n          *ngIf=\"calendarLink\"\r\n          (click)=\"onLink(calendarLink)\"\r\n          [src]=\"CALENDAR_ICON\"\r\n          [alt]=\"'Meeting room calendar' | translate\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"card__edit-controls\"\r\n        *ngIf=\"showEditControls && descriptionList\"\r\n      >\r\n        <nz-spin nzSimple *ngIf=\"loading\"></nz-spin>\r\n        <ng-container *ngIf=\"!loading\">\r\n          <button\r\n            *ngIf=\"!editModeEnabled\"\r\n            nz-button\r\n            nzSize=\"small\"\r\n            nzShape=\"circle\"\r\n            (click)=\"enableEditMode()\"\r\n          >\r\n            <i nz-icon nzType=\"edit\" nzTheme=\"outline\"></i>\r\n          </button>\r\n          <button\r\n            *ngIf=\"editModeEnabled\"\r\n            [disabled]=\"!cardForm.valid\"\r\n            nz-button\r\n            nzSize=\"small\"\r\n            nzShape=\"circle\"\r\n            (click)=\"saveEdit()\"\r\n          >\r\n            <i nz-icon nzType=\"check\" nzTheme=\"outline\"></i>\r\n          </button>\r\n          <button\r\n            *ngIf=\"editModeEnabled\"\r\n            nz-button\r\n            nzSize=\"small\"\r\n            nzShape=\"circle\"\r\n            (click)=\"cancelEdit()\"\r\n          >\r\n            <i nz-icon nzType=\"close\" nzTheme=\"outline\"></i>\r\n          </button>\r\n        </ng-container>\r\n      </div>\r\n    </h5>\r\n    <form nz-form [formGroup]=\"cardForm\">\r\n      <div class=\"card__description-list\">\r\n        <div\r\n          class=\"card__description-item\"\r\n          [ngClass]=\"{\r\n            'card__form--enabled': editModeEnabled && desc.formControlTpl\r\n          }\"\r\n          *ngFor=\"let desc of descriptionList\"\r\n        >\r\n          <div class=\"card__description-title\">\r\n            <ng-container *ngIf=\"desc.nameTpl\">\r\n              <ng-container *ngTemplateOutlet=\"desc.nameTpl\"></ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"desc.name && !desc.nameTpl\">\r\n              {{ desc.name }}:\r\n            </ng-container>\r\n          </div>\r\n          <div class=\"card__description-value\">\r\n            <ng-container\r\n              *ngIf=\"\r\n                editModeEnabled && desc.formControlTpl;\r\n                else elseEditModeEnabledBlock\r\n              \"\r\n            >\r\n              <nz-form-item>\r\n                <nz-form-control>\r\n                  <ng-container\r\n                    *ngTemplateOutlet=\"formControlsHash[desc.formControlTpl]\"\r\n                  ></ng-container>\r\n                </nz-form-control>\r\n              </nz-form-item>\r\n            </ng-container>\r\n            <ng-template #elseEditModeEnabledBlock>\r\n              <ng-container *ngTemplateOutlet=\"desc.valueTpl\"></ng-container>\r\n              <ng-container *ngIf=\"desc.value && !desc.valueTpl\">\r\n                <ng-container *ngIf=\"!desc.link; else isLink\">\r\n                  {{ desc.value }}\r\n                </ng-container>\r\n                <ng-template #isLink>\r\n                  <a (click)=\"onLink(desc.link)\">{{ desc.value }}</a>\r\n                </ng-template>\r\n              </ng-container>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div class=\"card__tags\">\r\n      <nz-tag class=\"mb-10\" *ngFor=\"let tag of tags\">{{ tag }}</nz-tag>\r\n    </div>\r\n  </nz-card>\r\n</ng-template>\r\n\r\n<ng-template #coverTpl>\r\n  <img *ngIf=\"image\" [alt]=\"title\" [src]=\"image\" />\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { IUser } from '@shared/http/models/database.model';\r\nimport { DictionaryName } from '@src/app/shared/dictionaries/dictionaries.constants';\r\nimport { IDictionary, IDictionaryItem, IDictionaryLabelsItem } from '@src/app/shared/dictionaries/dictionaries.model';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserOfficesService {\r\n  constructor(\r\n    private $dictionary: DictionariesService,\r\n    private $user: UserService\r\n  ) {\r\n  }\r\n\r\n  get label(): IDictionaryLabelsItem {\r\n    return this.$user.label;\r\n  }\r\n\r\n  get user$(): Observable<IUser> {\r\n    return this.$dictionary.getDictionaryItemByKey<IUser>(\r\n      'labels',\r\n      this.userId\r\n    );\r\n  }\r\n\r\n  get userId(): number {\r\n    return this.$user.info?.id;\r\n  }\r\n\r\n  public getUserWorkplaceGroups(): Observable<number[]> {\r\n    return this.user$.pipe(\r\n      map((user) => {\r\n        return user.workplaceGroups;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getMyOrderedBuildings<T>(): Observable<T> {\r\n    return forkJoin([\r\n      this.user$,\r\n      this.getDictionaryByName<T>('buildings'),\r\n    ]).pipe(\r\n      map(([ user, buildings ]) => {\r\n        return this.getSortedItems(buildings, user.buildingsSequence);\r\n      })\r\n    );\r\n  }\r\n\r\n  public getMyOrderedFloors<T>(): Observable<T> {\r\n    return forkJoin([\r\n      this.user$,\r\n      this.getDictionaryByName<T>('floorMaps'),\r\n    ]).pipe(\r\n      map(([ user, floors ]) => {\r\n        return this.getSortedItems(floors, user.floorMapsSequence);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getDictionaryByName<T>(name: DictionaryName): Observable<T> {\r\n    return this.$dictionary.getDictionary<T>(name);\r\n  }\r\n\r\n  private getSortedItems<T = IDictionary>(items: any, sequence: number[]): T {\r\n    return  items.sort(\r\n      (a: any, b: any) => sequence.indexOf(a.id) - sequence.indexOf(b.id)\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  HttpMethod,\r\n  IHttpResponse,\r\n  IHttpResponseNotificationMessages,\r\n} from '@core/models/http.model';\r\nimport { pluck, tap } from 'rxjs/operators';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport {\r\n  IWorkplaceReservation,\r\n  ReservationsType,\r\n} from '@shared/http/models/database.model';\r\nimport { BaseApi } from '@shared/common/base/base.api';\r\nimport { ReservationType } from '@shared/http/models/meta.model';\r\nimport {\r\n  IOrganizerAppointmentsRequest,\r\n  IParkingLotsReservationsRequest,\r\n} from '@shared/http/models/request.model';\r\nimport {\r\n  IOrganizerAppointmentsResponse,\r\n  IParkingLotsReservationsResponse,\r\n} from '@shared/http/models/response.model';\r\nimport { LiveDataKey } from '@shared/http/models/live-data.model';\r\n\r\n@Injectable()\r\nexport class ReservationsApiService extends BaseApi {\r\n  private _apiUrl = environment.apiUrl;\r\n  private _getOrganizerAppointmentsUrl: string;\r\n  private _getParkingLotReservationsUrl: string;\r\n\r\n  constructor(protected injector: Injector, private _user: UserService) {\r\n    super(injector);\r\n\r\n    this.$config.getOne$<any>('metaUrl').subscribe(() => {\r\n      this._getOrganizerAppointmentsUrl = this.$config.get<string>(\r\n        'getOrganizerAppointmentsUrl'\r\n      );\r\n      this._getParkingLotReservationsUrl = this.$config.get<string>(\r\n        'getParkingLotReservationsUrl'\r\n      );\r\n    });\r\n  }\r\n\r\n  getUserToken(\r\n    params: Record<string, any> = {},\r\n    headers: Record<string, string> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getUserToken', params, {}, headers)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  getOtpToken(\r\n    params: Record<string, any> = {},\r\n    headers: Record<string, string> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/kioskAuthorizationGetOtp', params, {}, headers)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  checkOtpToken(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/kioskAuthorizationGetTokenByOtp', params, {}, {})\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  getQRAction(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getQRAction', params, {}, {})\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  setLabelBuildingsSequence(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/setLabelBuildingsSequence', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  setLabelFloorMapsSequence(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/setLabelFloorMapsSequence', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  get getCommonLiveData$(): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getCommonLiveData')\r\n      .pipe(filterNoProgressHttpEvent(), pluck('data'));\r\n  }\r\n\r\n  get getWorkplacesDisabled$(): Observable<number[]> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getWorkplacesDisabled')\r\n      .pipe(filterNoProgressHttpEvent(), pluck('data'));\r\n  }\r\n\r\n  get getParkingLotsDisabled$(): Observable<number[]> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getParkingLotsDisabled')\r\n      .pipe(filterNoProgressHttpEvent(), pluck('data'));\r\n  }\r\n\r\n  getLiveData(\r\n    key: LiveDataKey,\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .get(\r\n        `${this._apiUrl}/liveData/${key}`,\r\n        params,\r\n        {},\r\n        {\r\n          tokenUuid: this._user.info.tokenUUID,\r\n          deviceId: this._user.info.deviceId,\r\n        }\r\n      )\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  putReservationsByType<T = any>(\r\n    type: ReservationType,\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    switch (type) {\r\n      case 'appointment':\r\n        return this.putAppointments(params);\r\n      case 'parking':\r\n        return this.putParkingLotReservations(params);\r\n      case 'workplace':\r\n      default:\r\n        return this.putWorkplaceReservations(params);\r\n    }\r\n  }\r\n\r\n  putWorkplaceReservations<T = any>(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<T>> {\r\n    return this.$http\r\n      .post<T>(this._apiUrl + '/putWorkplaceReservations', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  putParkingLotReservations(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/putParkingLotReservations', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  putAppointments(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/putAppointments', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  putWorkplaceReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/putWorkplaceReservation', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  putParkingLotReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/putParkingLotReservation', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  // TODO What is the difference between getOrganizerAppointments and getRoomsAppointments\r\n  getReservationsByType(\r\n    type: ReservationType,\r\n    params: Record<string, any> = {}\r\n  ): Observable<ReservationsType<typeof type>> {\r\n    switch (type) {\r\n      case 'appointment':\r\n        return this.getOrganizerAppointments(\r\n          params as IOrganizerAppointmentsRequest\r\n        );\r\n      case 'parking':\r\n        return this.getParkingLotsReservations(\r\n          params as IParkingLotsReservationsRequest\r\n        );\r\n      default:\r\n        return this.getWorkplaceReservations(params);\r\n    }\r\n  }\r\n\r\n  getMapReservationsByType(\r\n    type: ReservationType,\r\n    params: Record<string, any> = {}\r\n  ): Observable<ReservationsType<typeof type>> {\r\n    switch (type) {\r\n      case 'appointment':\r\n        return this.getRoomsAppointments(params);\r\n      case 'parking':\r\n        return this.getParkingLotsReservations(params);\r\n      default:\r\n        return this.getWorkplaceReservations(params);\r\n    }\r\n  }\r\n\r\n  getOrganizerAppointments(\r\n    params: IOrganizerAppointmentsRequest\r\n  ): Observable<IOrganizerAppointmentsResponse> {\r\n    return this.$http\r\n      .post<IOrganizerAppointmentsResponse>(\r\n        this._getOrganizerAppointmentsUrl,\r\n        params\r\n      )\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({}),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  getRoomsAppointments(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getRoomsAppointments', params)\r\n      .pipe(filterNoProgressHttpEvent(), pluck('data'));\r\n  }\r\n\r\n  getRoomAppointments(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getRoomAppointments', params)\r\n      .pipe(filterNoProgressHttpEvent(), pluck('data'));\r\n  }\r\n\r\n  getParkingLotsReservations(\r\n    params: IParkingLotsReservationsRequest = {}\r\n  ): Observable<IParkingLotsReservationsResponse> {\r\n    return this.$http\r\n      .post<IParkingLotsReservationsResponse>(\r\n        this._getParkingLotReservationsUrl,\r\n        params\r\n      )\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({}),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  getWorkplaceReservations(\r\n    params: Record<string, any> = {},\r\n    messages: IHttpResponseNotificationMessages = {}\r\n  ): Observable<IWorkplaceReservation[]> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getWorkplaceReservations', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification(messages),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  getWorkplacesDisabledExpanded(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getWorkplacesDisabledExpanded', params)\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  confirmReservation(\r\n    type: ReservationType,\r\n    id: string\r\n  ): Observable<IHttpResponse<any>> {\r\n    const params: Record<string, any> = {};\r\n    switch (type) {\r\n      case 'parking':\r\n        params.parkingLotReservationId = id;\r\n        return this.confirmParkingLotReservation(params);\r\n      case 'workplace':\r\n      default:\r\n        params.workplaceReservationId = id;\r\n        return this.confirmWorkplaceReservation(params);\r\n    }\r\n  }\r\n\r\n  confirmWorkplaceReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/confirmWorkplaceReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  confirmParkingLotReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/confirmParkingLotReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  approveReservation(\r\n    type: ReservationType,\r\n    id: string\r\n  ): Observable<IHttpResponse<any>> {\r\n    const params: Record<string, any> = {};\r\n    switch (type) {\r\n      case 'parking':\r\n        params.parkingLotReservationId = id;\r\n        return this.approveParkingLotReservation(params);\r\n      case 'workplace':\r\n      default:\r\n        params.workplaceReservationId = id;\r\n        return this.approveWorkplaceReservation(params);\r\n    }\r\n  }\r\n\r\n  approveWorkplaceReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/approveWorkplaceReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  approveParkingLotReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/approveParkingLotReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  cancelReservation(\r\n    type: ReservationType,\r\n    id: string\r\n  ): Observable<IHttpResponse<any>> {\r\n    const params: Record<string, any> = {};\r\n    switch (type) {\r\n      case 'parking':\r\n        params.parkingLotReservationId = id;\r\n        return this.cancelParkingLotReservation(params);\r\n      case 'workplace':\r\n      default:\r\n        params.workplaceReservationId = id;\r\n        return this.cancelWorkplaceReservation(params);\r\n    }\r\n  }\r\n\r\n  cancelWorkplaceReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/cancelWorkplaceReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  cancelParkingLotReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/cancelParkingLotReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  denyReservation(\r\n    type: ReservationType,\r\n    id: string\r\n  ): Observable<IHttpResponse<any>> {\r\n    const params: Record<string, any> = {};\r\n    switch (type) {\r\n      case 'parking':\r\n        params.parkingLotReservationId = id;\r\n        return this.denyParkingLotReservation(params);\r\n      case 'workplace':\r\n      default:\r\n        params.workplaceReservationId = id;\r\n        return this.denyWorkplaceReservation(params);\r\n    }\r\n  }\r\n\r\n  denyWorkplaceReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/denyWorkplaceReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  denyParkingLotReservation(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/denyParkingLotReservation', params)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({})\r\n      );\r\n  }\r\n\r\n  getUserAppointments(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getUserAppointments', params)\r\n      .pipe(filterNoProgressHttpEvent(), pluck('data'));\r\n  }\r\n\r\n  callReservationAction<\r\n    T extends any = Record<string, any>,\r\n    U extends any = Record<string, any>\r\n  >(\r\n    url: string,\r\n    method: HttpMethod,\r\n    data: T,\r\n    messages: IHttpResponseNotificationMessages\r\n  ): Observable<IHttpResponse<U>> {\r\n    return this.$http\r\n      .request<U>(method, url, data)\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification(messages)\r\n      );\r\n  }\r\n\r\n  getAppointmentById(id): Observable<any> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/getAppointmentById', {\r\n        appointmentId: decodeURIComponent(id),\r\n      })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({}),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  saveAppointmentEmails(\r\n    id: string,\r\n    emails: string[]\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/addAppointmentAttendees', {\r\n        appointmentId: id,\r\n        appointmentAttendees: emails,\r\n      })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({\r\n          successTitle: 'Успех',\r\n          successMessage: 'Участники сохранены',\r\n          errorTitle: 'Ошибка',\r\n          errorMessage: 'Не удалось выполнить сораниние участников',\r\n        }),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  closeAppointment(id: string): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/closeAppointment', {\r\n        appointmentId: id,\r\n      })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({\r\n          successTitle: 'Успех',\r\n          successMessage: 'Встреча успешно закрыта',\r\n          errorTitle: 'Ошибка',\r\n          errorMessage: 'Не удалось выполнить закрытие встречи',\r\n        }),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  confirmAppointment(id: string): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/confirmAppointment', {\r\n        appointmentId: id,\r\n      })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({\r\n          successTitle: 'Успех',\r\n          successMessage: 'Встреча успешно подтвержена',\r\n          errorTitle: 'Ошибка',\r\n          errorMessage: 'Не удалось выполнить подтверждение встречи',\r\n        }),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  deleteAppointment(id: string): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/cancelAppointment', {\r\n        appointmentId: id,\r\n      })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({\r\n          successTitle: 'Успех',\r\n          successMessage: 'Встреча успешно удалена',\r\n          errorTitle: 'Ошибка',\r\n          errorMessage: 'Не удалось выполнить удаление встречи',\r\n        }),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  checkAppointmentAttendeesAvailability(\r\n    from: string,\r\n    to: string,\r\n    emails: string[],\r\n    id: string\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/checkAppointmentAttendeesAvailability', {\r\n        requestDateFrom: from,\r\n        requestDateTo: to,\r\n        appointmentAttendees: emails,\r\n        requestAppointmentId: id,\r\n      })\r\n      .pipe(\r\n        filterNoProgressHttpEvent(),\r\n        this.$httpHelper.responseNotification({\r\n          errorTitle: 'Ошибка',\r\n          errorMessage: 'Не удалось проверить статусы пользователей',\r\n        }),\r\n        pluck('data')\r\n      );\r\n  }\r\n\r\n  getK2Scenarios(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/k2GetScenarios', params, {}, {})\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  openK2Session(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/k2OpenSession', params, {}, {})\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  putK2SessionStep(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/k2PutSessionStep', params, {}, {})\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n\r\n  commitK2Session(\r\n    params: Record<string, any> = {}\r\n  ): Observable<IHttpResponse<any>> {\r\n    return this.$http\r\n      .post(this._apiUrl + '/k2CommitSession', params, {}, {})\r\n      .pipe(filterNoProgressHttpEvent());\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport {isFunction} from 'rxjs/internal-compatibility';\r\n\r\nconst DESTROY_METHOD: string = 'ngOnDestroy';\r\n/*const DESTROY_IVY_METHOD: string = 'onDestroy';\r\nconst ECMP: string = 'ɵcmp';*/\r\n\r\nexport function Subscriptions(destroyMethodName: string = DESTROY_METHOD): any {\r\n  return (target: any, key: string) => {\r\n    const subscriptionsSymbol: symbol = Symbol('__subscriptions');\r\n    const originalOnDestroy: () => void | null = target[destroyMethodName];\r\n\r\n    Object.defineProperty(target, key, {\r\n      configurable: false,\r\n      get(): Subscription[] {\r\n        return this[subscriptionsSymbol] || [];\r\n      },\r\n      set(newSub: Subscription): void {\r\n        if (!this[subscriptionsSymbol]) {\r\n          this[subscriptionsSymbol] = [];\r\n        }\r\n\r\n        this[subscriptionsSymbol].push(newSub);\r\n      }\r\n    });\r\n\r\n    target[destroyMethodName] = function(...args: any[]): void {\r\n      if (originalOnDestroy && isFunction(originalOnDestroy)) {\r\n        originalOnDestroy.apply(this, args);\r\n      }\r\n\r\n      if (this[subscriptionsSymbol]?.length) {\r\n        this[subscriptionsSymbol].splice(0).forEach(sub => sub.unsubscribe());\r\n      }\r\n    };\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private $router: Router, private $auth: AuthService) {\r\n  }\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.$auth.isLoggedIn || this.$router.parseUrl('/auth');\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { APP_CONFIG_URL, APP_CONFIG_VALUES } from '../core.tokens';\r\nimport { DictionaryService } from './dictionary.service';\r\nimport { ConfigKey, IConfigItems, IConfigValues } from '../models/config.model';\r\nimport { IEntry } from '../models/common.model';\r\nimport { filterNoProgressHttpEvent } from '../utils/http.util';\r\nimport { ConfigValue } from '@core/types/config.type';\r\nimport { first, map, pluck } from 'rxjs/operators';\r\nimport { isEmpty } from '@core/utils/common.util';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  private _values: IConfigValues = {};\r\n  private _values$: BehaviorSubject<IConfigValues> = new BehaviorSubject<IConfigValues>({});\r\n  private _initialized$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  private _initializationError$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\r\n\r\n  public constructor(\r\n    private $http: HttpService,\r\n    private $dictionary: DictionaryService,\r\n    @Inject(APP_CONFIG_URL) private _url: string,\r\n    @Inject(APP_CONFIG_VALUES) private _initialValues: Array<IConfigItems | IEntry<any> | null>,\r\n  ) {\r\n  }\r\n\r\n  public get all(): IConfigValues {\r\n    return this._values;\r\n  }\r\n\r\n  public get initialized$(): Observable<boolean> {\r\n    return this._initialized$.asObservable();\r\n  }\r\n\r\n  public get values$(): Observable<IConfigValues> {\r\n    return this._values$.asObservable();\r\n  }\r\n\r\n  public get initializationError$(): Observable<string | null> {\r\n    return this._initializationError$.asObservable();\r\n  }\r\n\r\n  public get initializationError(): string | null {\r\n    return this._initializationError$.getValue();\r\n  }\r\n\r\n  public get$(): Observable<IConfigValues>;\r\n  public get$<T extends any = any>(key: ConfigKey | string): Observable<T>;\r\n  public get$<T extends any = any>(key?: ConfigKey | string): Observable<T | IConfigValues> {\r\n    return this.values$.pipe(\r\n      map(values => key ? values[key] : values)\r\n    );\r\n  }\r\n\r\n  public getOne$(): Observable<IConfigValues>;\r\n  public getOne$<T extends any = any>(key: ConfigKey | string): Observable<T>;\r\n  public getOne$<T extends any = any>(key?: ConfigKey | string): Observable<T | IConfigValues> {\r\n    if (key) {\r\n      return this.get$<T>(key).pipe(\r\n        first(value => !isEmpty(value))\r\n      );\r\n    }\r\n    return this\r\n      .get$()\r\n      .pipe(\r\n        first((values: IConfigValues) =>\r\n          Object.keys(values).length > 2\r\n        )\r\n      );\r\n  }\r\n\r\n  public get<T>(key: ConfigKey | string = null, whenNull: any = null): T | null {\r\n    const value: ConfigValue = this._values[key];\r\n\r\n    return typeof value !== 'undefined' ? value : whenNull;\r\n  }\r\n\r\n  public getValues(keys: Array<ConfigKey | string>, ...anyKeys: string[]): Record<ConfigKey | string, any> {\r\n    keys = [].concat(keys, anyKeys);\r\n\r\n    return keys.reduce((values: IEntry<any | null>, key: string) =>\r\n        ({ ...values, [key]: this.get(key) }),\r\n      {}\r\n    );\r\n  }\r\n\r\n  public setValues(newValues: IConfigItems | IEntry<any>, mode: 'append' | 'merge' | 'replace' = 'append'): void {\r\n    if (!(newValues instanceof Array)) {\r\n      newValues = Object.entries(newValues).map(([ code, value ]) => ({ code, value }));\r\n    }\r\n\r\n    if (mode === 'replace') {\r\n      this._values = {};\r\n    } else if (mode === 'append') {\r\n      newValues = newValues.filter(({ code }) => !(code in this._values));\r\n    }\r\n\r\n    newValues.forEach(({ code, value }) =>\r\n      this._values[code] = value\r\n    );\r\n\r\n    this._values$.next(this._values);\r\n  }\r\n\r\n  public initialize(initialValues: IConfigItems | IEntry<any> | null = null): Observable<boolean> {\r\n    if (this._initialValues || initialValues) {\r\n      this.setInitialValues(initialValues);\r\n    }\r\n\r\n    if (!this._url) {\r\n      this.setInitialized();\r\n      return this.initialized$;\r\n    }\r\n\r\n    if (!this.initialized) {\r\n      this.$http.get<any>(this._url)\r\n        .pipe(filterNoProgressHttpEvent())\r\n        .subscribe(({ success, data, error }) => {\r\n          this.setValues(data || []);\r\n\r\n          if (!success) {\r\n            console.error(DictionaryService.get('configLoadingError'));\r\n            this._initializationError$.next(error.message);\r\n          }\r\n\r\n          this.setInitialized();\r\n          this._initializationError$.complete();\r\n        });\r\n    }\r\n\r\n    return this.initialized$;\r\n  }\r\n\r\n  private get initialized(): boolean {\r\n    return this._initialized$.getValue();\r\n  }\r\n\r\n  private setInitialized(): void {\r\n    this._initialized$.next(true);\r\n    this._initialized$.complete();\r\n  }\r\n\r\n  private setInitialValues(initialValues: IConfigItems | IEntry<any> = []): void {\r\n    const values: Array<IConfigItems | IEntry<any>> = [].concat(this._initialValues, initialValues);\r\n\r\n    values\r\n      .filter(Boolean)\r\n      .forEach((_initialValues) => this.setValues(_initialValues));\r\n  }\r\n}\r\n\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[blur]'\r\n})\r\nexport class BlurDirective {\r\n  constructor(private elRef: ElementRef) {\r\n  }\r\n\r\n  @HostListener('click')\r\n  public click(): void {\r\n    this.elRef.nativeElement.blur();\r\n  }\r\n}\r\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { ISettings, ISettingsArray } from '@shared/settings/settings.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { SETTINGS_URL_KEY } from '@shared/settings/settings.constants';\r\nimport { DB_STORE_SETTINGS } from '@shared/indexed-db/indexed-db.utils';\r\nimport { catchError, delay, map, pluck, switchMap } from 'rxjs/operators';\r\nimport { IndexedDbService } from '@shared/indexed-db/indexed-db.service';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { getSettingsArray } from '@shared/settings/settings.utils';\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n  private _settings: ISettings = {} as ISettings;\r\n\r\n  constructor(\r\n    private $indexedDb: IndexedDbService,\r\n    private $config: ConfigService,\r\n    private $http: HttpService\r\n  ) {\r\n  }\r\n\r\n  public get settings$(): Observable<ISettings> {\r\n    return of(this._settings);\r\n  }\r\n\r\n  public get settings(): ISettings {\r\n    return this._settings;\r\n  }\r\n\r\n  public getSettingByName$<T = any>(name: string): Observable<T | null> {\r\n    return this.$indexedDb\r\n      .getStoreItemByIndex(DB_STORE_SETTINGS, 'name', name)\r\n      .pipe(\r\n        pluck('value'),\r\n        catchError(() => of(null))\r\n      );\r\n  }\r\n\r\n  public getSettingByName<T = any>(name: string): T | null {\r\n    const value: T = this._settings[name];\r\n    return typeof value !== 'undefined' ? value : null\r\n  }\r\n\r\n  public initialize(): Observable<any> {\r\n    const url: string = this.$config.get<string>(SETTINGS_URL_KEY);\r\n\r\n    return !url\r\n      ? of(null)\r\n      : this.$http.post<ISettings>(url).pipe(\r\n        filterNoProgressHttpEvent(),\r\n        switchMap(({ success, data }) =>\r\n          !success\r\n            ? of({})\r\n            : this.$indexedDb\r\n              .clear(DB_STORE_SETTINGS)\r\n              .pipe(\r\n                map(() => this._settings = data)\r\n              )\r\n        ),\r\n        map((settings: Partial<ISettings>) => getSettingsArray(settings)),\r\n        switchMap((settingsArray: ISettingsArray) =>\r\n          this.$indexedDb.addStoreItems(DB_STORE_SETTINGS, settingsArray)\r\n        ),\r\n        catchError((err) => {\r\n          console.error('Error loading settings', err);\r\n          return of(null);\r\n        }),\r\n        delay(250)\r\n      )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CardComponent } from './card.component';\r\nimport {NzCardModule} from 'ng-zorro-antd/card';\r\nimport {NzTagModule} from 'ng-zorro-antd/tag';\r\nimport { NzDescriptionsModule } from 'ng-zorro-antd/descriptions';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { CardFormControlDirective } from './card-form-control.directive';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CardComponent, CardFormControlDirective],\r\n  exports: [CardComponent, CardFormControlDirective],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NzCardModule,\r\n    NzTagModule,\r\n    NzIconModule,\r\n    NzButtonModule,\r\n    NzFormModule,\r\n    NzDescriptionsModule,\r\n    NzSpinModule,\r\n    NgxMaskModule.forChild(),\r\n    TranslateModule,\r\n  ],\r\n})\r\nexport class CardModule {}\r\n","import {animate, AnimationTriggerMetadata, state, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const fadeInOutAnimation: any[] = [getFadeInOutAnimation()];\r\n\r\nexport function getFadeInOutAnimation(name: string = 'fadeInOut', inDelay: number = .35, outDelay: number = .35): AnimationTriggerMetadata {\r\n  return trigger(name, [\r\n    transition(':enter', [\r\n        style({opacity: 0}),\r\n        animate(\r\n          `${inDelay}s ease-out`,\r\n          style({opacity: 1})\r\n        )\r\n      ]\r\n    ),\r\n    transition(':leave', [\r\n      style({opacity: 1}),\r\n      animate(\r\n        `${outDelay}s ease-out`,\r\n        style({opacity: 0})\r\n      )\r\n    ]),\r\n    state('in', style({\r\n      opacity: 1\r\n    })),\r\n    state('out', style({\r\n      opacity: 0\r\n    })),\r\n    transition('out => in', [\r\n      animate(`${inDelay}s ease-out`)\r\n    ]),\r\n    transition('in => out', [\r\n      animate(`${outDelay}s ease-out`)\r\n    ]),\r\n  ]);\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { MessageType } from '../types/message.type';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { LocalizationService } from './localization.service';\r\n\r\nconst DURATION: number = 5000;\r\n\r\n@Injectable()\r\nexport class MessagesService {\r\n  constructor(\r\n    private $message: NzMessageService,\r\n    private $localization: LocalizationService\r\n  ) {\r\n  }\r\n\r\n  public create(content: string, type: MessageType = 'info', duration: number = DURATION): string {\r\n    content = this.$localization.translate(content);\r\n\r\n    return this.$message.create(type, content, { nzDuration: duration }).messageId;\r\n  }\r\n\r\n  public remove(messageId: string): void {\r\n    this.$message.remove(messageId);\r\n  }\r\n\r\n  public error(content: string, duration: number = DURATION): string {\r\n    return this.create(content, 'error', duration);\r\n  }\r\n\r\n  public info(content: string, duration: number = DURATION): string {\r\n    return this.create(content, 'info', duration);\r\n  }\r\n\r\n  public success(content: string, duration: number = DURATION): string {\r\n    return this.create(content, 'success', duration);\r\n  }\r\n\r\n  public warning(content: string, duration: number = DURATION): string {\r\n    return this.create(content, 'warning', duration);\r\n  }\r\n\r\n  public loading(content: string, duration: number = 0): string {\r\n    return this.create(content, 'loading', duration);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IImage } from '@app/layout/header/header.model';\r\nimport { INotifications } from '@app/layout/header/components/header-notifications/header-notifications.model';\r\n\r\n@Injectable()\r\nexport class HeaderService {\r\n  constructor() { }\r\n  get logo(): IImage {\r\n    return {\r\n      src: './assets/images/logo.svg',\r\n      alt: 'Meru-Software',\r\n      title: 'Meru-Software',\r\n    };\r\n  }\r\n  get notifications(): INotifications {\r\n    return [\r\n      {\r\n        id: '1',\r\n        type: 'success',\r\n        message: 'Авторизация прошла успешно',\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'info',\r\n        message: 'Рады приветствовать вас в нашей системе',\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'warning',\r\n        message: 'Подтвердите вашу электронную почту',\r\n      },\r\n      {\r\n        id: '4',\r\n        type: 'error',\r\n        message: 'Произошла ошибка на сервере',\r\n      },\r\n    ];\r\n  }\r\n  get notificationIconsMap(): Record<string, string> {\r\n    return {\r\n      info: 'info-circle',\r\n      error: 'close-circle',\r\n      success: 'check-circle',\r\n      warning: 'warning',\r\n    };\r\n  }\r\n}\r\n","export enum Tokens {\r\n  configUrl = 'APP_CONFIG_URL',\r\n  configValues = 'APP_CONFIG_VALUES',\r\n  defaultLang = 'APP_DEFAULT_LANG',\r\n  langs = 'APP_LANGS',\r\n  dictionary = 'APP_DICTIONARY'\r\n}\r\n","export enum InitialWords {\r\n  alreadyExist = 'Already exist',\r\n  configLoadingError = 'Config error: config load failed. Initialization front ' +\r\n    'application was aborted. Please reload this page for repeat.',\r\n  configValueError = 'Config error: value with code $code in not exist in values.',\r\n  coreModuleAlreadyLoaded = 'CoreModule has already been loaded',\r\n  coreModuleNotLoaded = 'CoreModule has not loaded',\r\n  localStorageBadParsing = 'Local storage error: Bad parsing localstorage object with name $name.',\r\n  localStorageBadStringify = 'Local storage error: Bad stringify object with name $name before stringify.',\r\n  localStorageObjectNotSaved = 'Local storage error: Object with name $name not saved.',\r\n  theWordWithKey = 'The word with key',\r\n\r\n  /*Http errors*/\r\n  accessDenied = 'Access denied',\r\n  badRequest = 'Bad request',\r\n  connectionFailed = 'Connection failed',\r\n  internalServerError = 'Internal server error',\r\n  notFound = 'Not found',\r\n  unknownServerError = 'Unknown server error',\r\n  serverUnavailable = 'Server unavailable now',\r\n  'lang-ru' = 'Русский',\r\n  'lang-en' = 'English'\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { merge, Observable, of, partition } from 'rxjs';\r\nimport { catchError, filter, switchMap, tap } from 'rxjs/operators';\r\nimport { SettingsService } from '@shared/settings/settings.service';\r\nimport { MeasurementsService } from '@shared/dictionaries/services/measurements.service';\r\nimport { StatusesService } from '@shared/dictionaries/services/statuses.service';\r\nimport { UserService } from '@core/services/user.service';\r\nimport { DB_STORE_RESPONSE, DB_STORE_VERSION } from '@shared/indexed-db/indexed-db.utils';\r\nimport { IndexedDbService } from '@shared/indexed-db/indexed-db.service';\r\nimport { debuglog } from 'util';\r\n\r\n@Injectable()\r\nexport class SharedService {\r\n  constructor(\r\n    private $config: ConfigService,\r\n    private $dictionaries: DictionariesService,\r\n    private $settings: SettingsService,\r\n    private $measurements: MeasurementsService,\r\n    private $statuses: StatusesService,\r\n    private $user: UserService,\r\n    private $indexedDb: IndexedDbService\r\n  ) {\r\n  }\r\n\r\n  public initialize(): Observable<any> {\r\n    return of(null).pipe(\r\n      switchMap(() => this.$dictionaries.checkAlreadyDictionaries()),\r\n      switchMap(() => this.$measurements.initialize()),\r\n      switchMap(() => this.$statuses.initialize()),\r\n      switchMap(() => this.$user.isAuth ? this.$settings.initialize() : of(null)),\r\n      catchError(() => of(null)),\r\n    );\r\n  }\r\n\r\n  public loadDictionaries(): Observable<any> {\r\n    return of(null).pipe(\r\n      switchMap(() => this.$dictionaries.cacheDictionaries()),\r\n      catchError(() => of(null)),\r\n    );\r\n  }\r\n\r\n  public checkVersion(): Observable<any> {\r\n    const currentVersion: string = this.$config.get<string>('version');\r\n    const [notNeedUpdate$, needUpdate$] = partition(\r\n      this.$indexedDb.getStoreItemByIndex(DB_STORE_VERSION, 'version', currentVersion),\r\n      Boolean\r\n    );\r\n\r\n    return merge(\r\n      notNeedUpdate$,\r\n      needUpdate$.pipe(\r\n        switchMap(() => this.clearIndexedDbStores()),\r\n        catchError(() => {\r\n          console.error('Error clear indexed-db');\r\n          return of(null);\r\n        }),\r\n        tap(() =>\r\n          this.$indexedDb.addStoreItem(DB_STORE_VERSION, { version: currentVersion })\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  private clearIndexedDbStores(): Observable<any> {\r\n    return this.$indexedDb\r\n      .clear(DB_STORE_VERSION)\r\n      .pipe(\r\n        switchMap(() => this.$indexedDb.clear(DB_STORE_RESPONSE))\r\n      );\r\n  }\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { IBreadcrumbs } from '@base/breadcrumb/breadcrumb.model';\r\nimport { filter, map, shareReplay, tap } from 'rxjs/operators';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { ICurrentRouteData } from '@app/layout/layout-shared.model';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LayoutSharedService {\r\n  private _title: string = '';\r\n  private _breadcrumbs: IBreadcrumbs = [];\r\n  private _extra: BehaviorSubject<TemplateRef<any> | null> =\r\n    new BehaviorSubject<TemplateRef<any> | null>(null);\r\n  private _scrollTop: Subject<void> = new Subject<void>();\r\n  private _lastComponentName: string | null = null;\r\n\r\n  constructor(private $router: Router) {\r\n    this.navigationEnd$\r\n      .pipe(\r\n        filter(\r\n          () =>\r\n            !this.currentRouteRoot.data.componentName ||\r\n            this.currentRouteRoot.data.componentName !== this._lastComponentName\r\n        )\r\n      )\r\n      .subscribe(() => (this.extra = null));\r\n  }\r\n\r\n  public get currentRouteData$(): Observable<ICurrentRouteData> {\r\n    return this.navigationEnd$.pipe(\r\n      map(() => this.currentRouteData),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  public get currentRouteData(): ICurrentRouteData {\r\n    const current = this.currentRouteRoot;\r\n\r\n    this._title = !current.data.hideTitle ? current.data.title || '' : '';\r\n    this._lastComponentName = current?.data?.componentName || null;\r\n    if (!current.data.hideBreadcrumbs) {\r\n      const routes = current.pathFromRoot.filter(\r\n        (route) =>\r\n          route.data.title &&\r\n          !route.data.hideInBreadcrumbs &&\r\n          !route.routeConfig.loadChildren\r\n      );\r\n      let url = '';\r\n      this._breadcrumbs = routes.map((route) => ({\r\n        title: route.data.title,\r\n        url: (url += `${route.routeConfig.path}/`),\r\n      }));\r\n    } else {\r\n      this._breadcrumbs = [];\r\n    }\r\n\r\n    return {\r\n      title: this._title,\r\n      breadcrumbs: this._breadcrumbs,\r\n      showBackBtn: current.data.showBackBtn,\r\n    };\r\n  }\r\n\r\n  public get extra$(): Observable<TemplateRef<any> | null> {\r\n    return this._extra.asObservable();\r\n  }\r\n\r\n  public set extra(tpl: TemplateRef<any> | null) {\r\n    this._extra.next(tpl);\r\n  }\r\n\r\n  private get currentRouteRoot(): any {\r\n    let current = this.$router.routerState.snapshot.root;\r\n\r\n    while (current.firstChild) {\r\n      current = current.firstChild;\r\n    }\r\n\r\n    return current;\r\n  }\r\n\r\n  private get navigationEnd$(): Observable<any> {\r\n    let lastRoute: string;\r\n    return this.$router.events.pipe(\r\n      filter((event) => event instanceof NavigationEnd),\r\n      filter((event: NavigationEnd) => {\r\n        const eventRoute: string = event.urlAfterRedirects.split('?')[0];\r\n        if (eventRoute === lastRoute) return false;\r\n        lastRoute = eventRoute;\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public toScrollTop$() {\r\n    this._scrollTop.next();\r\n  }\r\n  public get scrollTop$() {\r\n    return this._scrollTop;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  public transform<T>(values: T[], key: string, searchValue: any, direct: boolean = true): T[] {\r\n    const stringedSearchValue: string = String(searchValue).toLowerCase();\r\n\r\n    return values.filter((value): any => {\r\n      if (typeof value === 'object' && value !== null) {\r\n        value = value[key];\r\n      }\r\n      const result: boolean = this.compareValues(searchValue, stringedSearchValue, value);\r\n      return direct ? result : !result;\r\n    });\r\n  }\r\n\r\n  private compareValues(searchValue: any, stringedSearchValue: string, comparedValue: any): boolean {\r\n    const stringedCompareValue: string = String(comparedValue).toLowerCase();\r\n    return searchValue === comparedValue || stringedCompareValue.includes(stringedSearchValue);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { CommonFunction } from '../types/function.type';\r\nimport { detectCdr } from '@core/utils/decorators.utils';\r\n\r\nexport const MarkForCheck: (target: any, key: string, descriptor?: PropertyDescriptor) => void = asyncDecoratorFactory('markForCheck');\r\nexport const DetectChanges: (target: any, key: string, descriptor?: PropertyDescriptor) => void = asyncDecoratorFactory('markForCheck');\r\n\r\nfunction asyncDecoratorFactory(checkType: 'markForCheck' | 'detectChanges' = 'markForCheck') {\r\n  return (target: any, key: string, descriptor?: PropertyDescriptor): void => {\r\n    let originalMethod: CommonFunction;\r\n    let cdr: ChangeDetectorRef | null;\r\n\r\n    if (!descriptor) {\r\n      const valueSymbol: symbol = Symbol(key);\r\n\r\n      delete target[key];\r\n\r\n      Object.defineProperty(target, key, {\r\n        get(): any {\r\n          return this[valueSymbol];\r\n        },\r\n        set(value: any) {\r\n          if (!cdr) {\r\n            cdr = detectCdr(this);\r\n          }\r\n\r\n          this[valueSymbol] = value;\r\n          check(checkType);\r\n        }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if ('value' in descriptor) {\r\n      originalMethod = descriptor.value;\r\n      descriptor.value = newMethod;\r\n    } else if (!!descriptor.set) {\r\n      originalMethod = descriptor.set;\r\n      descriptor.set = newMethod;\r\n    } else {\r\n      console.error(`Can't apply '${checkType}' decorator for property '${key}' of '${target.constructor?.name}'. Absent setter or original method for '${key}'`);\r\n      return;\r\n    }\r\n\r\n    function newMethod(...args: any[]): void {\r\n      try {\r\n        originalMethod.apply(this, args);\r\n        check(checkType);\r\n      } catch (e) {\r\n        console.error(`Can't use original method or setter for property '${key}' of '${target.constructor.name}' in '${checkType}' decorator`);\r\n      }\r\n    }\r\n\r\n    function check(checkType: 'markForCheck' | 'detectChanges'): void {\r\n      if (cdr) {\r\n        switch (checkType) {\r\n          case 'detectChanges':\r\n            cdr.detectChanges();\r\n            break;\r\n\r\n          case 'markForCheck':\r\n            cdr.markForCheck();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export function indexedDbMigrationFactory() {\r\n  return {};\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { APP_CONFIG_VALUES } from './core.tokens';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { ObjectEntriesPipe } from './pipes/object-entries.pipe';\r\nimport { ObjectFirstKeyPipe } from './pipes/object-first-key.pipe';\r\nimport { SafeUrlPipe } from './pipes/safe-url.pipe';\r\nimport { PluckPipe } from './pipes/pluck.pipe';\r\nimport { MapPipe } from './pipes/map.pipe';\r\nimport { DictionaryPipe } from './pipes/dictionary.pipe';\r\nimport { DictionaryService } from './services/dictionary.service';\r\nimport { ConditionService } from './services/condition.service';\r\nimport { ConfigService } from './services/config.service';\r\nimport { HttpService } from './services/http.service';\r\nimport { LocalStorageService } from './services/local-storage.service';\r\nimport { UrlService } from './services/url.service';\r\nimport { StringPipe } from './pipes/string.pipe';\r\nimport { HttpHelperService } from './services/http-helper.service';\r\nimport { DelayPipe } from './pipes/delay.pipe';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ObjectPipe } from './pipes/object.pipe';\r\nimport { AntdModule } from '@core/antd/antd.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { PerfectScrollDirective } from './directives/perfect-scroll.directive';\r\nimport { ConditionDirective } from './directives/condition.directive';\r\nimport { LocalizePipe } from './pipes/localize.pipe';\r\nimport { NavigationService } from '@core/services/navigation.service';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { BlurDirective } from './directives/blur.directive';\r\nimport { MessageService } from '@core/services/message.service';\r\nimport { ArrayPipe } from './pipes/array.pipe';\r\nimport { HighlightPipe } from './pipes/highlight.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FilterPipe,\r\n    ObjectEntriesPipe,\r\n    ObjectFirstKeyPipe,\r\n    SafeUrlPipe,\r\n    PluckPipe,\r\n    MapPipe,\r\n    DictionaryPipe,\r\n    StringPipe,\r\n    DelayPipe,\r\n    ObjectPipe,\r\n    PerfectScrollDirective,\r\n    ConditionDirective,\r\n    LocalizePipe,\r\n    BlurDirective,\r\n    ArrayPipe,\r\n    HighlightPipe\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    TranslateModule,\r\n    AntdModule,\r\n    PerfectScrollbarModule,\r\n    FilterPipe,\r\n    ObjectEntriesPipe,\r\n    ObjectFirstKeyPipe,\r\n    SafeUrlPipe,\r\n    PluckPipe,\r\n    MapPipe,\r\n    DictionaryPipe,\r\n    StringPipe,\r\n    DelayPipe,\r\n    PerfectScrollDirective,\r\n    ConditionDirective,\r\n    LocalizePipe,\r\n    HighlightPipe,\r\n    BlurDirective\r\n  ],\r\n  providers: [\r\n    ConditionService,\r\n    HttpHelperService,\r\n    LocalStorageService,\r\n    UrlService,\r\n    NavigationService\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  public static forRoot(): ModuleWithProviders<CoreModule> {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        {\r\n          provide: APP_CONFIG_VALUES,\r\n          useValue: [],\r\n          multi: true\r\n        },\r\n        ConfigService,\r\n        DictionaryService,\r\n        HttpService,\r\n        LocalizationService,\r\n        MessageService\r\n      ]\r\n    };\r\n  }\r\n\r\n  public static forChild(): ModuleWithProviders<CoreModule> {\r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgxIndexedDBModule } from 'ngx-indexed-db';\r\nimport { indexedDbConfig } from '@app/shared/indexed-db/indexed-db.config';\r\nimport { IndexedDbService } from '@shared/indexed-db/indexed-db.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    NgxIndexedDBModule.forRoot(indexedDbConfig),\r\n  ],\r\n  providers: [\r\n    IndexedDbService\r\n  ]\r\n})\r\nexport class IndexedDbModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { LayoutComponent } from '@app/layout/layout/layout.component';\r\nimport { environment } from '@src/environments/environment';\r\nimport { LoadingDictionariesComponent } from '@app/layout/loading-dictionaries/loading-dictionaries.component';\r\nimport { DictionariesMatchersService } from '@shared/dictionaries/services/dictionaries-matchers.service';\r\nimport { TeamProfileComponent } from '@presentation/team/team-profile/team-profile.component';\r\n\r\nconst layoutRoutes: Routes = [\r\n  {\r\n    path: 'reservations',\r\n    loadChildren: () =>\r\n      import('./reservations/reservations.module').then(\r\n        ( {ReservationsModule} ) => ReservationsModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'office',\r\n    loadChildren: () =>\r\n      import('./offices/offices.module').then(\r\n        ( {OfficesModule} ) => OfficesModule\r\n      ),\r\n    data: {\r\n      title: 'Офисы',\r\n    },\r\n  },\r\n  {\r\n    path: 'services',\r\n    loadChildren: () =>\r\n      import('./office-services/office-services.module').then(\r\n        ( {OfficeServicesModule} ) => OfficeServicesModule\r\n      ),\r\n  }, {\r\n    path: 'search',\r\n    loadChildren: () =>\r\n      import('./search/search.module').then(\r\n        ( {SearchModule} ) => SearchModule\r\n      ),\r\n    data: {\r\n      title: 'Search'\r\n    }\r\n  },\r\n  {\r\n    path: 'team',\r\n    loadChildren: () =>\r\n      import('./team/team.module').then( ( {TeamModule} ) => TeamModule ),\r\n    data: {\r\n      title: 'Моя команда',\r\n    },\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: TeamProfileComponent,\r\n    data: {\r\n      title: 'Мой профиль',\r\n    },\r\n  },\r\n  {\r\n    loadChildren: () =>\r\n      import('./dashboard/dashboard.module').then(\r\n        ( {DashboardModule} ) => DashboardModule\r\n      ),\r\n    matcher: DictionariesMatchersService.alreadyMatcherFactory(),\r\n  },\r\n  {\r\n    component: LoadingDictionariesComponent,\r\n    matcher: DictionariesMatchersService.notAlreadyMatcherFactory(),\r\n  },\r\n];\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () =>\r\n      import('./auth/auth.module').then( ( {AuthModule} ) => AuthModule ),\r\n  },\r\n  {\r\n    path: '',\r\n    component: LayoutComponent,\r\n    canActivate: [ AuthGuard ],\r\n    children: layoutRoutes,\r\n    data: {\r\n      title: 'Главная',\r\n    },\r\n  },\r\n];\r\n\r\nif (!environment.production) {\r\n  layoutRoutes.unshift( {\r\n    path: 'dev',\r\n    loadChildren: () =>\r\n      import('./develop/develop.module').then(\r\n        ( {DevelopModule} ) => DevelopModule\r\n      ),\r\n    data: {\r\n      title: 'Разработка',\r\n    },\r\n  } );\r\n}\r\n\r\n@NgModule( {\r\n  imports: [ RouterModule.forRoot( routes, {useHash: true} ) ],\r\n  exports: [ RouterModule ],\r\n  providers: [ AuthGuard ],\r\n} )\r\nexport class PresentationRoutingModule {\r\n}\r\n","import {Inject, Injectable, Optional} from '@angular/core';\r\nimport {TranslateService as NgxTranslateService} from '@ngx-translate/core';\r\nimport {APP_DEFAULT_LANG, APP_LANGS} from '../core.tokens';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {ObservableUtil} from '../utils/observable.util';\r\nimport {map, pluck, switchMap, tap} from 'rxjs/operators';\r\nimport {en_US, NzI18nService, ru_RU} from 'ng-zorro-antd/i18n';\r\nimport {enUS, ru} from 'date-fns/locale';\r\n\r\n@Injectable()\r\nexport class LocalizationService {\r\n  public static currentLang: string = null;\r\n  private readonly _currentLangS: ReplaySubject<string> = new ReplaySubject<string>(1);\r\n\r\n  public constructor(\r\n    private $translate: NgxTranslateService,\r\n    private $i18n: NzI18nService,\r\n    @Optional() @Inject(APP_LANGS) private _langs: string[],\r\n    @Optional() @Inject(APP_DEFAULT_LANG) private _defaultLang: string,\r\n  ) {\r\n    if (!_defaultLang) {\r\n      this._defaultLang = this.$translate.getBrowserLang();\r\n    }\r\n\r\n    if (!_langs) {\r\n      this._langs = [this._defaultLang];\r\n    }\r\n    this.$translate.onLangChange.pipe(\r\n      pluck('lang'),\r\n      tap((currentLang) => {\r\n        LocalizationService.currentLang = currentLang;\r\n        this.switchNzLanguage();\r\n      })\r\n    ).subscribe(this._currentLangS);\r\n  }\r\n\r\n  public get browserDefaultLang(): string {\r\n    return this.$translate.getBrowserLang();\r\n  }\r\n\r\n  public get currentLang$(): Observable<string> {\r\n    return this._currentLangS;\r\n  }\r\n\r\n  public get currentLang(): string {\r\n    return this.$translate.currentLang;\r\n  }\r\n\r\n  public get langs(): string[] {\r\n    return this._langs;\r\n  }\r\n\r\n  public set langs(langs: string[]) {\r\n    this._langs = langs;\r\n  }\r\n\r\n  public get defaultLang(): string {\r\n    return this._defaultLang;\r\n  }\r\n\r\n  public set defaultLang(defaultLang: string) {\r\n    this._defaultLang = defaultLang;\r\n  }\r\n\r\n  public getTranslation(lang: string): Observable<any> {\r\n    return this.$translate.getTranslation(lang);\r\n  }\r\n\r\n  public initialize(lang: string = this.defaultLang): Observable<any> {\r\n    return this.getTranslation(lang).pipe(\r\n      map(() => {\r\n        this.$translate.addLangs(this.langs);\r\n        this.$translate.setDefaultLang(this.defaultLang);\r\n      }),\r\n      switchMap(() => this.use(lang))\r\n    );\r\n  }\r\n\r\n  public use(lang: string = this.defaultLang): Observable<any> {\r\n    lang = this.getAvailableLang(lang);\r\n    return this.$translate.use(lang);\r\n  }\r\n\r\n  public translate(query: string): string {\r\n    return ObservableUtil.take<string>(\r\n      this.translate$(query)\r\n    );\r\n  }\r\n\r\n  public translate$(query: string): Observable<string> {\r\n    return this.$translate.get(query);\r\n  }\r\n\r\n  private getAvailableLang(lang: string = null): string {\r\n    return this.langs.includes(lang)\r\n      ? lang\r\n      : this.defaultLang;\r\n  }\r\n\r\n  private switchNzLanguage(): void {\r\n    switch (this.currentLang) {\r\n      case 'ru':\r\n        this.$i18n.setLocale(ru_RU);\r\n        this.$i18n.setDateLocale(ru);\r\n        break;\r\n\r\n      case 'en':\r\n        this.$i18n.setLocale(en_US);\r\n        this.$i18n.setDateLocale(enUS);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { ObjectStoreMeta } from 'ngx-indexed-db/lib/ngx-indexed-db.meta';\r\nimport { CUSTOM_DICTIONARIES, dbConfigItem, dbCustomDictionariesConfig, DICTIONARIES, DICTIONARY_PREFIX_NAME, DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { IDictionary, IDictionaryBuildings, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\n\r\nexport function getDictionariesDbStoreNames(): string[] {\r\n  return DICTIONARIES.map(getDictionaryDbStoreName);\r\n}\r\n\r\nexport function getDictionariesDbConfig(): ObjectStoreMeta[] {\r\n  return getLoadableDictionariesDbStoreNames()\r\n    .map(store => ({ ...dbConfigItem, store } as ObjectStoreMeta))\r\n    .concat(dbCustomDictionariesConfig);\r\n}\r\n\r\nexport function getDictionaryDbStoreName(name: DictionaryName | string): string {\r\n  return name.startsWith(DICTIONARY_PREFIX_NAME) ? name : `${DICTIONARY_PREFIX_NAME}${name}`;\r\n}\r\n\r\nexport function getLoadableDictionaries(): DictionaryName[] {\r\n  return DICTIONARIES.filter((name: any) => !CUSTOM_DICTIONARIES.includes(name));\r\n}\r\n\r\nexport function getLoadableDictionariesDbStoreNames(): string[] {\r\n  return getLoadableDictionaries().map(getDictionaryDbStoreName);\r\n}\r\n\r\nexport function filterFloorMaps(floorMaps: IDictionaryFloorMaps, items: IDictionary): IDictionaryFloorMaps {\r\n  return floorMaps.filter(({ id }) =>\r\n    items.some(({ floorMapId }) => floorMapId === id)\r\n  );\r\n}\r\n\r\nexport function filterFloorMapsByBuildingId(floorMaps: IDictionaryFloorMaps, id: number): IDictionaryFloorMaps {\r\n  return floorMaps.filter(({ buildingId }) => buildingId === id);\r\n}\r\n\r\nexport function filterBuildingsByFloorMaps(buildings: IDictionaryBuildings, floorMaps: IDictionaryFloorMaps): IDictionaryBuildings {\r\n  return buildings.filter(({ id }) =>\r\n    floorMaps.some(({ buildingId }) => buildingId === id)\r\n  );\r\n}\r\n\r\nexport function sortItemsBySequence<T extends Array<unknown> = IDictionary>(items: T, fieldName: string, sequence: unknown[]): T {\r\n  if (!sequence?.length || !fieldName) return items;\r\n\r\n  return items.sort((item1, item2) =>\r\n    sequence.indexOf(item1?.[fieldName]) - sequence.indexOf(item2?.[fieldName])\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { IDictionaryStatuses } from '@shared/dictionaries/models/statuses.model';\r\n\r\nexport const STATUSES_DICT_NAME: DictionaryName = 'statuses';\r\nexport const STATUSES_URL_KEY: string = 'statusesUrl';\r\nexport const STATUSES_DEFAULT_VALUES: IDictionaryStatuses = [\r\n  {\r\n    id: 0,\r\n    lang: 'ru',\r\n    default: true,\r\n    statuses: [\r\n      {\r\n        code: 'NEW',\r\n        name: 'Создана',\r\n        color: '#FADB14',\r\n        secondaryColor: '#ffffb8'\r\n      },\r\n      {\r\n        code: 'APPROVED',\r\n        name: 'Одобрена',\r\n        color: '#FA8C16',\r\n        secondaryColor: '#ffe7ba'\r\n      },\r\n      {\r\n        code: 'CONFIRMED',\r\n        name: 'Подтверждена',\r\n        color: '#52c41a',\r\n        secondaryColor: '#d9f7be'\r\n      },\r\n      {\r\n        code: 'CLOSED',\r\n        name: 'Завершена',\r\n        color: '#1890FF',\r\n        secondaryColor: '#bae7ff'\r\n      },\r\n      {\r\n        code: 'CANCELED',\r\n        name: 'Отменена',\r\n        color: '#8c8c8c',\r\n        secondaryColor: '#d9d9d9'\r\n      },\r\n      {\r\n        code: 'DENIED',\r\n        name: 'Отклонена',\r\n        color: '#FF4D4F',\r\n        secondaryColor: '#ffccc7'\r\n      },\r\n      {\r\n        code: 'REFUSED',\r\n        name: 'Отказ',\r\n        color: '#FF4D4F',\r\n        secondaryColor: '#ffccc7'\r\n      },\r\n      {\r\n        code: 'UNDEFINED',\r\n        name: 'Неизвестен',\r\n        color: '#8c8c8c',\r\n        secondaryColor: '#d9d9d9'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 1,\r\n    lang: 'en',\r\n    default: false,\r\n    statuses: [\r\n      {\r\n        code: 'NEW',\r\n        name: 'New',\r\n        color: '#FADB14',\r\n        secondaryColor: '#ffffb8'\r\n      },\r\n      {\r\n        code: 'APPROVED',\r\n        name: 'Approved',\r\n        color: '#FA8C16',\r\n        secondaryColor: '#ffe7ba'\r\n      },\r\n      {\r\n        code: 'CONFIRMED',\r\n        name: 'Confirmed',\r\n        color: '#3FA80B',\r\n        secondaryColor: '#d9f7be'\r\n      },\r\n      {\r\n        code: 'CLOSED',\r\n        name: 'Завершена',\r\n        color: '#1890FF',\r\n        secondaryColor: '#bae7ff'\r\n      },\r\n      {\r\n        code: 'CANCELED',\r\n        name: 'Отменена',\r\n        color: '#8c8c8c',\r\n        secondaryColor: '#d9d9d9'\r\n      },\r\n      {\r\n        code: 'DENIED',\r\n        name: 'Отклонена',\r\n        color: '#FF4D4F',\r\n        secondaryColor: '#ffccc7'\r\n      },\r\n      {\r\n        code: 'REFUSED',\r\n        name: 'Отказ',\r\n        color: '#FF4D4F',\r\n        secondaryColor: '#ffccc7'\r\n      },\r\n      {\r\n        code: 'UNDEFINED',\r\n        name: 'Неизвестен',\r\n        color: '#8c8c8c',\r\n        secondaryColor: '#d9d9d9'\r\n      }\r\n    ]\r\n  }\r\n];\r\n","export enum SharedDictionary {\r\n  AccessDenied = 'Access denied',\r\n  ActionCompleted = 'Action completed',\r\n  ActionCompletedSuccessfully = 'Action completed successfully',\r\n  ActionFailed = 'Action failed',\r\n  Add = 'Add',\r\n  AllDay = 'All day',\r\n  Attention = 'Attention',\r\n  Cancel = 'Cancel',\r\n  Close = 'Close',\r\n  ConnectionFailed = 'Connection failed',\r\n  Create = 'Create',\r\n  CriticalError = 'Critical error',\r\n  CriticalErrorOccurred = 'Critical error occurred',\r\n  Day = 'Day',\r\n  Delete = 'Delete',\r\n  EnterName = 'Enter name',\r\n  EnterYourName = 'Enter your name',\r\n  Error = 'Error',\r\n  ErrorLoading = 'Error loading',\r\n  Export = 'Export',\r\n  FailedDeleteItem = 'Failed to delete item',\r\n  LoadingPleaseWait = 'Loading... Please wait',\r\n  Month = 'Month',\r\n  NextDay = 'Next day',\r\n  NextMonth = 'Next month',\r\n  NextWeek = 'Next week',\r\n  No = 'No',\r\n  NotFound = 'Not found',\r\n  NoSelectableValues = 'No selectable values',\r\n  Save = 'Save',\r\n  SelectWorkplace = 'Select workplace',\r\n  ServerError = 'Server error',\r\n  PrevDay = 'Previous day',\r\n  PrevMonth = 'Previous month',\r\n  PrevWeek = 'Previous week',\r\n  ResultOfAction = 'Result of action',\r\n  SelectOffice = 'Select office',\r\n  Today = 'Today',\r\n  WaitPleaseResourcesLoading = 'Wait, please. Resources are loading',\r\n  Week = 'Week',\r\n\r\n  items = 'items'\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { filter, map, switchMap, take } from 'rxjs/operators';\r\nimport { IHttpResponseNotificationMessages } from '@core/models/http.model';\r\nimport { BaseApi } from '@shared/common/base/base.api';\r\nimport { LocalizationService } from '@core/services/localization.service';\r\nimport { AppError } from '@core/models/app-errorl.model';\r\nimport { HEADERS_META } from '@shared/common/utils/reservations.util';\r\n\r\n@Injectable()\r\nexport class MetaApiService extends BaseApi {\r\n  protected _metaUrl: Record<string, string>;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n    private $localization: LocalizationService\r\n  ) {\r\n    super(injector);\r\n\r\n    this.$config\r\n      .getOne$('metaUrl')\r\n      .subscribe((metaUrl: Record<string, string>) =>\r\n        this._metaUrl = metaUrl\r\n      );\r\n  }\r\n\r\n  public getMeta<T = Record<string, any>>(\r\n    name: string,\r\n    messages: IHttpResponseNotificationMessages = {}\r\n  ): Observable<T | AppError> {\r\n    return this.$localization.currentLang$.pipe(\r\n      map((lang) =>\r\n        this.$url.createUrl(this._metaUrl[name], { lang })\r\n      ),\r\n      switchMap((url) =>\r\n        this.$http.get<T>(url, {}, { headers: HEADERS_META })\r\n      ),\r\n      filterNoProgressHttpEvent(),\r\n      this.$httpHelper.responseNotification(messages),\r\n      map(this.processResponse)\r\n    );\r\n  }\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {HttpService} from './http.service';\r\nimport {UrlService} from './url.service';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError, map, switchMap} from 'rxjs/operators';\r\nimport {IEntry} from '../models/common.model';\r\nimport {IConditionResult} from '../models/condition.model';\r\nimport {isEmpty} from '../utils/instanceOf.utilI';\r\n\r\nconst EXPRESSION_FUNCTION_ARGS: Array<any> = [empty, equals, pluck];\r\nconst EXPRESSION_FUNCTION_ARGS_LIST: string[] = ['value', 'response', 'empty', 'equals', 'pluck'];\r\nconst OPERATORS: RegExp = /(!==|===|!=|==|<=|>=|<|>|\\+|-|\\*\\*|\\*|\\/|&&|\\|\\|)/g;\r\n\r\n@Injectable()\r\nexport class ConditionService {\r\n  constructor(\r\n    @Inject(HttpService) private $http: HttpService,\r\n    private $url: UrlService\r\n  ) {\r\n  }\r\n\r\n  public check(e: string, d: IEntry<any>, r?: boolean, v?: any): boolean;\r\n  public check(e: string, d: IEntry<any>, r?: boolean, v?: any, p?: boolean): IConditionResult;\r\n  public check(\r\n    expression: string,\r\n    data: IEntry<any>,\r\n    defaultResult: boolean = false,\r\n    value: any,\r\n    preFlight: boolean = false\r\n  ): boolean | IConditionResult {\r\n    try {\r\n      return this.checkExpression(expression, data, defaultResult, value, preFlight);\r\n    } catch (e) {\r\n      return defaultResult;\r\n    }\r\n  }\r\n\r\n  public checkAsync(e: string, d: IEntry<any>, u: string | null, r?: boolean, v?: any): Observable<boolean>;\r\n  public checkAsync(e: string, d: IEntry<any>, u: string | null, r?: boolean, v?: any, p?: boolean): Observable<IConditionResult>;\r\n  public checkAsync(\r\n    expression: string,\r\n    data: IEntry<any>,\r\n    url: string | null = null,\r\n    defaultResult: boolean = false,\r\n    value: any,\r\n    preFlight: boolean = false\r\n  ): Observable<boolean | IConditionResult> {\r\n    return of(this.$url.createUrl(url, data))\r\n      .pipe(\r\n        switchMap((_url) =>\r\n          !_url\r\n            ? of(null)\r\n            : this.$http.get(_url)\r\n              .pipe(\r\n                map(({success, data: _data}) =>\r\n                  success ? _data : defaultResult\r\n                )\r\n              )\r\n        ),\r\n        map(responseData =>\r\n          this.checkExpression(expression, data, defaultResult, value, preFlight, responseData)\r\n        ),\r\n        catchError(() =>\r\n          of(defaultResult)\r\n        )\r\n      );\r\n  }\r\n\r\n  private checkExpression(\r\n    expression: string,\r\n    data: IEntry<any>,\r\n    defaultResult: any,\r\n    value: any,\r\n    hasPreFlight: boolean = false,\r\n    response: any = null,\r\n  ): boolean | IConditionResult {\r\n    const result: boolean = this.calcExpression(expression, data, value, response, defaultResult);\r\n    const operands: string[] = expression.split(OPERATORS).map(o => o.trim());\r\n\r\n    if (!hasPreFlight) {\r\n      return result;\r\n    }\r\n\r\n    if (operands) {\r\n      operands.forEach(operand =>\r\n        expression = expression.replace(\r\n          operand,\r\n          this.calcExpression(operand, data, value, response)\r\n        )\r\n      );\r\n    }\r\n\r\n    return {result, preflight: expression};\r\n  }\r\n\r\n  private calcExpression(expression: string, data: IEntry<any>, value: any, response: any = null, defaultResult: any = null): any {\r\n    const argsList: string[] = [...EXPRESSION_FUNCTION_ARGS_LIST, ...Object.keys(data), `return ${expression}`];\r\n    const argsValues: any[] = [value, response, ...EXPRESSION_FUNCTION_ARGS, ...Object.values(data)];\r\n\r\n    try {\r\n      return (Function(...argsList))(...argsValues);\r\n    } catch (e) {\r\n      return defaultResult;\r\n    }\r\n  }\r\n}\r\n\r\nfunction empty(value: any): boolean {\r\n  return isEmpty(value);\r\n}\r\n\r\nfunction equals(a, b): boolean {\r\n  return a === b;\r\n}\r\n\r\nfunction pluck(obj: any, keys: string[]): any | null;\r\nfunction pluck(obj: any, keys: string, ...anyKeys: string[]): any | null;\r\nfunction pluck(obj: any, keys: string | string[], ...anyKeys: string[]): any | null {\r\n  if (typeof obj !== 'object' || !obj) {\r\n    return null;\r\n  }\r\n\r\n  if (typeof keys === 'string') {\r\n    keys = anyKeys.concat(keys);\r\n  }\r\n\r\n  return keys.reduce(\r\n    (_obj: {} | null, key: string): {} | null =>\r\n      _obj ? _obj[key] : null,\r\n    obj\r\n  );\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { INavigations } from '@app/layout/navigation/navigation.model';\r\nimport { NavigationService } from '@app/layout/navigation/navigation.service';\r\nimport { NzMenuModeType } from 'ng-zorro-antd/menu';\r\nimport { GlobalLoaderService } from '@core/services/global-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavigationComponent implements OnChanges {\r\n  @Input() readonly mode: NzMenuModeType = 'inline';\r\n  @Input() items: INavigations = [];\r\n  constructor(\r\n    public $navigation: NavigationService,\r\n    public $loader: GlobalLoaderService\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes && changes.items && changes.items.currentValue) {\r\n      const currentItems: INavigations = changes.items.currentValue;\r\n      this.items = currentItems.filter((item) => !item.showOnlyOnMobile);\r\n    }\r\n  }\r\n}\r\n","<div [ngClass]=\"{ 'd-none': $loader.menuLoading$ | async }\">\r\n  <ul nz-menu class=\"navigation\" [nzMode]=\"mode\" [nzInlineIndent]=\"26\" [nzInlineCollapsed]=\"$navigation.collapse | async\">\r\n    <ng-container *ngFor=\"let item of items\">\r\n      <ng-template #itemTpl let-item=\"item\">\r\n        <li nz-menu-item class=\"navigation__item\" [title]=\"item.title\" [routerLink]=\"item.url\">\r\n          <i nz-icon [nzType]=\"item.icon\" *ngIf=\"item.icon\"></i>\r\n          <span>{{ item.title }}</span>\r\n        </li>\r\n      </ng-template>\r\n      <ng-template #subItemTpl let-item=\"item\">\r\n        <li nz-submenu [nzTitle]=\"item.title\" [nzIcon]=\"item.icon\" class=\"navigation__sub-item\" [title]=\"item.title\">\r\n          <ul>\r\n            <li nz-menu-item *ngFor=\"let children of item.children\" [routerLink]=\"children.url\" [queryParams]=\"{}\">\r\n              <i nz-icon [nzType]=\"children.icon\" *ngIf=\"children.icon\"></i> {{ children.title }}\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ng-template>\r\n      <ng-container *ngTemplateOutlet=\"item.children?.length > 0 ? subItemTpl : itemTpl; context: { item: item }\"></ng-container>\r\n    </ng-container>\r\n  </ul>\r\n</div>\r\n\r\n<div class=\"p-30\" *ngIf=\"$loader.menuLoading$ | async\">\r\n  <nz-spin nzSimple nzTip=\"Загрузка навигации...\"></nz-spin>\r\n</div>\r\n\r\n","import { Observable, Subject, timer } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport {IEntry} from '../models/common.model';\r\n\r\nexport class ObservableUtil {\r\n  public static complete(subjects: IEntry<Subject<any>> | Array<Subject<any>>): void;\r\n  public static complete(...subjects: Array<Subject<any>>): void;\r\n  public static complete(...subjects: any[]): void {\r\n    if (typeof subjects === 'object' && !Array.isArray(subjects)) {\r\n      subjects = Object.values(subjects);\r\n    }\r\n\r\n    subjects.forEach(subject =>\r\n      subject.complete()\r\n    );\r\n  }\r\n\r\n  public static take<T>(observable: Observable<T>): T {\r\n    let value: T = null;\r\n\r\n    observable.pipe(take(1))\r\n      .subscribe((_value: T) =>\r\n        value = _value\r\n      );\r\n\r\n    return value;\r\n  }\r\n}\r\n\r\n\r\nexport function delayWhen(trueDelay: number = 5000, falseDelay: number = 0): any {\r\n  return switchMap((value) =>\r\n    timer(value ? trueDelay : falseDelay).pipe(\r\n      map(() => value)\r\n    )\r\n  );\r\n}\r\n","import { Directive, EmbeddedViewRef, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { ConditionService } from '@core/services/condition.service';\r\nimport { ConditionType } from '@core/types/condition.type';\r\nimport { ICondition } from '@core/models/condition.model';\r\n\r\ninterface IConditionContext {\r\n  $implicit: boolean;\r\n}\r\n\r\n@Directive({\r\n  selector: '[appCondition]'\r\n})\r\nexport class ConditionDirective implements OnInit {\r\n  private _type: ConditionType = 'disable';\r\n  private _expression: string = 'false';\r\n  private _url: string;\r\n  private _data: Record<string, any> = {};\r\n  private _context: IConditionContext;\r\n  private _ready: boolean = false;\r\n\r\n  private _viewRef: EmbeddedViewRef<IConditionContext> | null = null;\r\n  private _altTemplateRef: TemplateRef<any> | null = null;\r\n\r\n  @Input()\r\n  public set appConditionFor(condition: ICondition | string | boolean) {\r\n    if (typeof condition === 'object') {\r\n      this._type = condition.type;\r\n      this._expression = String(condition.expression);\r\n      this._url = condition.url\r\n    } else {\r\n      this._expression = String(condition);\r\n    }\r\n\r\n    this.checkCondition();\r\n  }\r\n\r\n  @Input()\r\n  public set appConditionType(type: ConditionType) {\r\n    this._type = type;\r\n    this.checkCondition();\r\n  }\r\n\r\n  @Input()\r\n  public set appConditionUrl(url: string) {\r\n    this._url = url;\r\n    this.checkCondition();\r\n  }\r\n\r\n  @Input()\r\n  public set appConditionData(data: Record<string, any>) {\r\n    this._data = data;\r\n    this.checkCondition();\r\n  }\r\n\r\n  @Input()\r\n  public set appConditionElse(altTemplateRef: TemplateRef<any>) {\r\n    this._altTemplateRef = altTemplateRef;\r\n  }\r\n\r\n  private set $implicit($implicit: boolean) {\r\n    this._context.$implicit = $implicit;\r\n    this.updateView();\r\n  }\r\n\r\n  public constructor(\r\n    private $condition: ConditionService,\r\n    private _templateRef: TemplateRef<IConditionContext>,\r\n    private _viewContainer: ViewContainerRef\r\n  ) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._context = {\r\n      $implicit: this._type === 'visible'\r\n    }\r\n\r\n    this._ready = true;\r\n    this.checkCondition();\r\n  }\r\n\r\n  private checkCondition(): void {\r\n    if (!this._ready) {\r\n      return;\r\n    }\r\n\r\n    if (this._url) {\r\n      this.checkConditionAsync();\r\n      return\r\n    }\r\n\r\n    this.$implicit = this.$condition.check(this._expression, this._data);\r\n  }\r\n\r\n  private checkConditionAsync(): void {\r\n    this.$condition.checkAsync(\r\n      this._expression,\r\n      this._data,\r\n      this._url\r\n    ).subscribe(result =>\r\n      this.$implicit = result\r\n    );\r\n  }\r\n\r\n  private updateView(): void {\r\n    if (this._type !== 'visible') {\r\n      if (!this._viewRef) {\r\n        this._viewRef = this._viewContainer.createEmbeddedView(this._templateRef, this._context);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._context.$implicit && !this._viewRef) {\r\n      this._viewRef = this._viewContainer.createEmbeddedView(this._templateRef, this._context);\r\n      return;\r\n    }\r\n\r\n    if (!this._context.$implicit && this._altTemplateRef) {\r\n      this._viewRef = this._viewContainer.createEmbeddedView(this._altTemplateRef, this._context);\r\n      return;\r\n    }\r\n\r\n    if (!this._context.$implicit && !!this._viewRef) {\r\n      this._viewRef = null;\r\n      this._viewContainer.clear();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  ChangeDetectorRef,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { UserCardService } from '@composite/user-card/user-card.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Subscriptions } from '@core/decorators/subscriptions.decorator';\r\nimport { MessagesService } from '@core/services/messages.service';\r\nimport { CardEditModeEvent, ICard } from '@base/card/card.model';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { UserService } from '@src/app/core/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-card',\r\n  templateUrl: './user-card.component.html',\r\n  styleUrls: ['./user-card.component.less'],\r\n  providers: [UserCardService, FormBuilder],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserCardComponent implements OnInit, OnDestroy {\r\n  private _userId: number;\r\n  @Subscriptions()\r\n  sub: Subscription;\r\n  userCard: ICard = this.$service.default();\r\n\r\n  editModeEnabled: boolean = false;\r\n\r\n  @Input()\r\n  set userId(value: number) {\r\n    this._userId = value;\r\n    if (value) {\r\n      this.$service\r\n        .userData(value)\r\n        .then((_user) => {\r\n          this.userCard = this.$service.convertUserToCard();\r\n        })\r\n        .catch(() => {\r\n          this.userCard = this.$service.default();\r\n          this.$messages.error(`Пользователь ${value} не найден`);\r\n        })\r\n        .finally(() => this.cdr.markForCheck());\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public $service: UserCardService,\r\n    public $userService: UserService,\r\n    private $messages: MessagesService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.$service.user$.subscribe((value) => {\r\n      if (value) {\r\n        this.userCard = this.$service.convertUserToCard();\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditModeChange(cardEditModeEvent: CardEditModeEvent): void {\r\n    switch (cardEditModeEvent) {\r\n      case CardEditModeEvent.Enable:\r\n        this.editModeEnabled = true;\r\n        break;\r\n      case CardEditModeEvent.Save:\r\n        this.saveEditState();\r\n        break;\r\n      case CardEditModeEvent.Cancel:\r\n        this.cancelEditMode();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  get showEditControls(): boolean {\r\n    return this.$userService.info.id === this._userId;\r\n  }\r\n\r\n  private saveEditState(): void {\r\n    this.editModeEnabled = false;\r\n    this.sub = this.$service\r\n      .updateUserData(this._userId, this.userCard.form.value)\r\n      .subscribe();\r\n  }\r\n\r\n  private cancelEditMode(): void {\r\n    this.editModeEnabled = false;\r\n    this.userCard.form.reset(this.$service.user);\r\n  }\r\n\r\n  public ngOnDestroy(): void {}\r\n}\r\n","<app-card\r\n  class=\"user-card\"\r\n  [type]=\"'flex'\"\r\n  [title]=\"userCard?.title | translate\"\r\n  [image]=\"userCard?.image | imageBlob | async\"\r\n  [width]=\"userCard?.width\"\r\n  [descriptionList]=\"userCard?.descriptionList\"\r\n  [tags]=\"userCard?.tags\"\r\n  [cardForm]=\"userCard?.form\"\r\n  [showEditControls]=\"showEditControls\"\r\n  [editModeEnabled]=\"editModeEnabled\"\r\n  [loading]=\"$service.isLoading$ | async\"\r\n  (editModeChange)=\"onEditModeChange($event)\"\r\n  mask\r\n>\r\n  <ng-template appCardFormControl=\"phoneControl\">\r\n    <input\r\n       nz-input\r\n       [formControl]=\"userCard?.form.controls.mainPhone\"\r\n       mask=\"+0 (000) 000-00-00\"\r\n       placeholder=\"+1 (234) 567-89-00\"\r\n       class=\"ant-input\"/>\r\n  </ng-template>\r\n</app-card>\r\n\r\n{{userCard?.image}}\r\n","import {\r\n  IDictionary,\r\n  IDictionaryBuildings,\r\n  IDictionaryBuildingsItem,\r\n  IDictionaryFloorMaps,\r\n  IDictionaryFloorMapsItem,\r\n  IDictionaryItem\r\n} from '@shared/dictionaries/dictionaries.model';\r\nimport { isEmpty } from '@core/utils/common.util';\r\nimport { GlobalSearchType, IGlobalSearchResultGroup } from './global-search.model';\r\n\r\nconst TAG_REGEXP: RegExp = /<[^>]*>/g;\r\n\r\nexport const ITEMS_ROUTES: Record<GlobalSearchType, string[]> = {\r\n  user: [ 'team', 'profiles' ],\r\n  customObject: [ 'office' ],\r\n  workplace: [ 'office' ],\r\n  room: [ 'office' ],\r\n  parkingLot: [ 'office' ]\r\n};\r\n\r\nconst FILTER_FIELDS: Record<GlobalSearchType, string[]> = {\r\n  user: [ 'name', 'mail', 'mainPhone', 'phones' ],\r\n  customObject: [ 'name', 'description' ],\r\n  workplace: [ 'name', 'uniqueCode' ],\r\n  room: [ 'name', 'description' ],\r\n  parkingLot: [ 'name', 'description' ],\r\n};\r\n\r\nconst MAP_DATA_FIELDS: Record<GlobalSearchType, string[]> = {\r\n  user: [ 'name', 'mail', 'mainPhone', 'phones' ],\r\n  customObject: [ 'name', 'description', 'floor', 'buildingId' ],\r\n  workplace: [ 'name', 'building', 'floor', 'buildingId' ],\r\n  room: [ 'name', 'description', 'building', 'floor', 'buildingId' ],\r\n  parkingLot: [ 'name', 'description', 'building', 'floor', 'buildingId' ],\r\n};\r\n\r\nconst DEFAULT_IMAGE: Record<GlobalSearchType, string> = {\r\n  user: './assets/images/avatar-def.png',\r\n  workplace: './assets/images/workplace-card-default.jpg',\r\n  room: './assets/images/workplace-card-default.jpg',\r\n  customObject: './assets/icons/printer.svg',\r\n  parkingLot: './assets/icons/parkinglots.svg',\r\n};\r\n\r\nconst IMAGE_FIELDS: Record<GlobalSearchType, string> = {\r\n  user: 'avatarImageUrl',\r\n  workplace: 'no-image',\r\n  room: 'avatarImageUrl',\r\n  customObject: 'imageNormalUrl',\r\n  parkingLot: 'no-image',\r\n};\r\n\r\nexport function filterDictionaryItems<T extends IDictionary>( items: T, query: string, type: GlobalSearchType ): T {\r\n  return items.filter( item =>\r\n    FILTER_FIELDS[ type ].some( field =>\r\n      item[ field ]?.toLocaleLowerCase().includes( query )\r\n    )\r\n  ) as T;\r\n}\r\n\r\nexport function mapItemsToFloorMaps<T extends IDictionary = IDictionary>( items: T, floorMaps: IDictionaryFloorMaps ): T {\r\n  return items.map( item => {\r\n    const floorMap: IDictionaryFloorMapsItem = floorMaps.find( ( {id} ) => item.floorMapId === id );\r\n\r\n    if (floorMap) {\r\n      Object.assign( item, {floor: floorMap.name || '', buildingId: floorMap.buildingId} );\r\n    }\r\n\r\n    return item;\r\n  } ) as T;\r\n}\r\n\r\nexport function mapItemsToBuildings<T extends IDictionary = IDictionary>( items: T, buildings: IDictionaryBuildings ): T {\r\n  return items\r\n    .filter( ( {buildingId} ) => !isEmpty( buildingId ) )\r\n    .map( item => {\r\n      const building: IDictionaryBuildingsItem = buildings.find( ( {id} ) => item.floorMapId === id );\r\n\r\n      if (building) {\r\n        Object.assign( item, {building: building.name} );\r\n      }\r\n\r\n      return item;\r\n    } ) as T;\r\n}\r\n\r\nexport function mapSearchResult(\r\n  items: IDictionary,\r\n  title: string,\r\n  type: GlobalSearchType\r\n): IGlobalSearchResultGroup {\r\n  return {\r\n    type,\r\n    title,\r\n    items: items.map( ( item: IDictionaryItem ) => ( {\r\n      $implicit: type,\r\n      title: item.name,\r\n      img: item[ IMAGE_FIELDS[ type ] ] || DEFAULT_IMAGE[ type ],\r\n      data: reduceItemData( item, MAP_DATA_FIELDS[ type ] )\r\n    } ) )\r\n  };\r\n\r\n  function reduceItemData( item: IDictionaryItem, fields: string[] ): Record<string, any> {\r\n    return fields\r\n      .map( key => {\r\n        const value: any = typeof item[ key ] === 'string'\r\n          ? item[ key ].replace( TAG_REGEXP, '' )\r\n          : item[ key ];\r\n\r\n        return [ key, value ];\r\n      } )\r\n      .reduce( ( data, [ key, value ] ) =>\r\n          ( Object.assign( data, {[ key ]: value} ) ),\r\n        {id: item.id}\r\n      );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\ntype ArrayOperation = 'push';\r\n\r\n@Pipe( {\r\n  name: 'array'\r\n} )\r\nexport class ArrayPipe implements PipeTransform {\r\n  private static push<T>( arr: T[], value: T ): T[] {\r\n    arr.push( value );\r\n\r\n    return arr;\r\n  }\r\n\r\n  public transform<T>( arr: T[], operation: ArrayOperation, value?: T ): T[] | T | null {\r\n    if (!arr) return null;\r\n\r\n    switch (operation) {\r\n      case 'push':\r\n        return ArrayPipe.push( arr, value );\r\n\r\n      default:\r\n        return arr;\r\n    }\r\n  }\r\n}\r\n","import { SupportTimeOptions } from 'ng-zorro-antd/date-picker';\r\n\r\nexport const HOURS: number[] = Array.from(Array(24)).map((_,index) => index);\r\nexport const MINUTES: number[] = Array.from(Array(60)).map((_,index) => index);\r\nexport const WORK_HOURS: number[] = [ 7, 19 ];\r\nexport const DEFAULT_TIME_PICKER_OPTIONS: SupportTimeOptions = {\r\n  nzDefaultOpenValue: new Date(),\r\n  nzFormat: 'HH:mm',\r\n  nzMinuteStep: 5,\r\n  nzHideDisabledOptions: false,\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'object'\r\n})\r\nexport class ObjectPipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { UrlMatcher, UrlSegment } from '@angular/router';\r\n\r\nexport class DictionariesMatchersService {\r\n  private static _already: boolean = false;\r\n\r\n  public static alreadyMatcherFactory(): UrlMatcher {\r\n    return (url: UrlSegment[]) => DictionariesMatchersService._already\r\n      ? ({ consumed: url })\r\n      : null;\r\n  }\r\n\r\n  public static notAlreadyMatcherFactory(): UrlMatcher {\r\n    return (url: UrlSegment[]) => !DictionariesMatchersService._already\r\n      ? ({ consumed: url })\r\n      : null;\r\n  }\r\n\r\n  public static set already(already: boolean) {\r\n    this._already = already;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BarcodeFormat } from '@zxing/library';\r\nimport { NzModalRef, NzModalService } from 'ng-zorro-antd/modal';\r\nimport {\r\n  IReservationByQr,\r\n  ReservationActionType,\r\n  ReservationDateRange,\r\n  ReservationObjectType,\r\n} from './reservation-by-qr.model';\r\nimport { ReservationByQRService } from './reservation-by-qr.service';\r\nimport { getReservationId } from './reservation-by-qr.util';\r\n\r\n@Component({\r\n  selector: 'app-reservation-by-qr',\r\n  templateUrl: './reservation-by-qr.component.html',\r\n  styleUrls: ['./reservation-by-qr.component.less'],\r\n})\r\nexport class ReservationByQRComponent implements OnInit {\r\n  availableDevices: MediaDeviceInfo[];\r\n  currentDevice: MediaDeviceInfo = null;\r\n\r\n  formatsEnabled: BarcodeFormat[] = [\r\n    BarcodeFormat.CODE_128,\r\n    BarcodeFormat.DATA_MATRIX,\r\n    BarcodeFormat.EAN_13,\r\n    BarcodeFormat.QR_CODE,\r\n  ];\r\n\r\n  hasDevices: boolean;\r\n  hasPermission: boolean;\r\n\r\n  reservation: IReservationByQr | undefined;\r\n  gotQrResult: boolean = false;\r\n\r\n  reservationDateRange: ReservationDateRange | undefined;\r\n\r\n  constructor(\r\n    private modal: NzModalRef,\r\n    private $modalService: NzModalService,\r\n    private $service: ReservationByQRService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reservationDateRange = this.$service.reservationDateRange;\r\n    console.log(\"this.reservationDateRange: \",this.reservationDateRange)\r\n  }\r\n\r\n  get placeInfo(): string {\r\n    return this.floorName + ', ' + this.placeName;\r\n  }\r\n\r\n  get floorName(): string {\r\n    return this.reservation?.floor?.name ? this.reservation?.floor?.name : '';\r\n  }\r\n\r\n  get placeName(): string {\r\n    return this.reservation?.objectData?.name\r\n      ? this.reservation?.objectData?.name\r\n      : '';\r\n  }\r\n\r\n  get reservationType(): ReservationObjectType {\r\n    return this.reservation?.objectType;\r\n  }\r\n\r\n  get actionType(): ReservationActionType {\r\n    return this.reservation?.actionType;\r\n  }\r\n\r\n  get placeId(): number {\r\n    return this.reservation?.objectData?.id;\r\n  }\r\n\r\n  get reservationId(): number {\r\n    return getReservationId(this.reservation);\r\n  }\r\n\r\n  get actionMessage(): string {\r\n    switch (this.actionType) {\r\n      case 'WORKPLACE_RESERVATION_CANCEL':\r\n        return this.reservationCancelMessage;\r\n      case 'WORKPLACE_RESERVATION_CONFIRM':\r\n        return this.reservationConfirmMessage;\r\n      case 'WORKPLACE_RESERVATION_ALREADY_EXISTS':\r\n        return this.reservationAlreadyExistsMessage;\r\n      case 'WORKPLACE_DISABLED_BY_LABEL_PROPERTIES':\r\n        return this.reservationDisabledByLabelMessage;\r\n      case 'WORKPLACE_DISABLED_BY_SOCIAL_DISTANCE':\r\n        return this.reservationDisabledBySocialDistanceMessage;\r\n      case 'APPOINTMENT_VIEW':\r\n      case 'WORKPLACE_VIEW':\r\n      case 'WORKPLACE_RESERVATION_VIEW':\r\n        return this.reservationViewMessage;\r\n      case 'APPOINTMENT_CREATE':\r\n      case 'WORKPLACE_RESERVATION_CREATE':\r\n      default:\r\n        return this.reservationCreateMessage;\r\n    }\r\n  }\r\n\r\n  get reservationCreateMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Забронировать рабочее место';\r\n      case 'APPOINTMENT':\r\n        return 'Забронировать переговорная комната';\r\n      case 'PARKING_LOT':\r\n        return 'Забронировать парковочное место';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get reservationCancelMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Отменить бронирование рабочего места';\r\n      case 'APPOINTMENT':\r\n        return 'Отменить бронирование переговорной комнаты';\r\n      case 'PARKING_LOT':\r\n        return 'Отменить бронирование парковочного места';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get reservationConfirmMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Подтвердить бронирование рабочего места';\r\n      case 'APPOINTMENT':\r\n        return 'Подтвердить бронирование переговорной комнаты';\r\n      case 'PARKING_LOT':\r\n        return 'Подтвердить бронирование парковочного места';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get reservationAlreadyExistsMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Вы уже забронировали рабочее место';\r\n      case 'APPOINTMENT':\r\n        return 'Вы уже забронировали переговорная комната';\r\n      case 'PARKING_LOT':\r\n        return 'Вы уже забронировали парковочное место';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get reservationDisabledByLabelMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Рабочее место недоступно';\r\n      case 'APPOINTMENT':\r\n        return 'Переговорная комната недоступно';\r\n      case 'PARKING_LOT':\r\n        return 'Парковочное место недоступно';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get reservationDisabledBySocialDistanceMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Рабочее место недоступно из-за нарушения социалной дистанции';\r\n      case 'APPOINTMENT':\r\n        return 'Переговорная комната недоступно из-за нарушения социалной дистанции';\r\n      case 'PARKING_LOT':\r\n        return 'Парковочное место недоступно из-за нарушения социалной дистанции';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get reservationViewMessage(): string {\r\n    switch (this.reservationType) {\r\n      case 'WORKPLACE':\r\n        return 'Рабочее место';\r\n      case 'APPOINTMENT':\r\n        return 'Переговорная комната';\r\n      case 'PARKING_LOT':\r\n        return 'Парковочное место';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  get canCreateReservation(): boolean {\r\n    return (\r\n      this.actionType === 'APPOINTMENT_CREATE' ||\r\n      this.actionType === 'WORKPLACE_RESERVATION_CREATE'\r\n    );\r\n  }\r\n\r\n  get canCancelReservation(): boolean {\r\n    return this.actionType === 'WORKPLACE_RESERVATION_CANCEL';\r\n  }\r\n\r\n  get canConfirmReservation(): boolean {\r\n    return this.actionType === 'WORKPLACE_RESERVATION_CONFIRM';\r\n  }\r\n\r\n  get reservationAlreadyExists(): boolean {\r\n    return this.actionType === 'WORKPLACE_RESERVATION_ALREADY_EXISTS';\r\n  }\r\n\r\n  get reservationDisabled(): boolean {\r\n    return (\r\n      this.actionType === 'WORKPLACE_RESERVATION_ALREADY_EXISTS' ||\r\n      this.actionType === 'WORKPLACE_DISABLED_BY_LABEL_PROPERTIES' ||\r\n      this.actionType === 'WORKPLACE_DISABLED_BY_SOCIAL_DISTANCE' ||\r\n      this.actionType === 'APPOINTMENT_VIEW' ||\r\n      this.actionType === 'WORKPLACE_RESERVATION_VIEW' ||\r\n      this.actionType === 'WORKPLACE_VIEW'\r\n    );\r\n  }\r\n\r\n  clearResult(): void {\r\n    this.reservation = undefined;\r\n  }\r\n\r\n  onCodeResult(qrCode: string) {\r\n    this.$service.getReservationByQR(qrCode).subscribe((reservation) => {\r\n      this.reservation = reservation;\r\n      this.gotQrResult = true;\r\n    });\r\n  }\r\n\r\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\r\n    this.availableDevices = devices;\r\n    this.hasDevices = Boolean(devices && devices.length);\r\n    this.onDeviceSelectChange();\r\n  }\r\n\r\n  onDeviceSelectChange() {\r\n    const device = this.availableDevices[0];\r\n    this.currentDevice = device || null;\r\n  }\r\n\r\n  onHasPermission(has: boolean) {\r\n    this.hasPermission = has;\r\n  }\r\n\r\n  yesAction(): void {\r\n    switch (this.actionType) {\r\n      case 'WORKPLACE_RESERVATION_CANCEL':\r\n        this.cancelReservation();\r\n        break;\r\n      case 'WORKPLACE_RESERVATION_CONFIRM':\r\n        this.confirmReservation();\r\n        break;\r\n      case 'APPOINTMENT_CREATE':\r\n      case 'WORKPLACE_RESERVATION_CREATE':\r\n        this.reservationPlace();\r\n        break;\r\n      default:\r\n        this.destroyModal();\r\n        break;\r\n    }\r\n  }\r\n\r\n  reservationPlace() {\r\n    this.$service\r\n      .reservationPlaceByType(\r\n        this.reservationType,\r\n        this.placeId,\r\n        this.reservationDateRange?.value\r\n      )\r\n      .subscribe((reservations) => {\r\n        this.$modalService.closeAll();\r\n        const main = reservations.find((r) => r.meta.recordCode === 'main');\r\n        if (reservations.length === 1) {\r\n          if (main.meta.isOk) {\r\n            this.$modalService.success({\r\n              nzTitle: 'Успешно забронировано',\r\n              nzContent: main.meta.message,\r\n            });\r\n          } else {\r\n            this.$modalService.error({\r\n              nzTitle: 'Не удалось забронировать',\r\n              nzContent: main.meta.message,\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  cancelReservation() {\r\n    this.$service\r\n      .cancelReservationByType(this.reservationType, this.reservationId)\r\n      .subscribe((success) => {\r\n        this.$modalService.closeAll();\r\n        if (success) {\r\n          this.$modalService.success({\r\n            nzTitle: 'Бронирование успешно отменено',\r\n          });\r\n        } else {\r\n          this.$modalService.error({\r\n            nzTitle: 'Не удалось отменить бронирование',\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  confirmReservation() {\r\n    this.$service\r\n      .confirmReservationByType(this.reservationType, this.reservationId)\r\n      .subscribe((success) => {\r\n        this.$modalService.closeAll();\r\n        if (success) {\r\n          this.$modalService.success({\r\n            nzTitle: 'Бронирование успешно подтвержена',\r\n          });\r\n        } else {\r\n          this.$modalService.error({\r\n            nzTitle: 'Не удалось выполнить подтверждение бронирования',\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  destroyModal(): void {\r\n    this.modal.destroy();\r\n  }\r\n}\r\n","<div *nzModalTitle>\r\n  {{ gotQrResult ? \"Быстрое бронирование места\" : \"Сканируйте QR-код\" }}\r\n</div>\r\n<div class=\"content\" *ngIf=\"!gotQrResult\">\r\n  <zxing-scanner\r\n    class=\"qr-scanner\"\r\n    [hidden]=\"!hasDevices\"\r\n    [(device)]=\"currentDevice\"\r\n    (scanSuccess)=\"onCodeResult($event)\"\r\n    [formats]=\"formatsEnabled\"\r\n    (permissionResponse)=\"onHasPermission($event)\"\r\n    (camerasFound)=\"onCamerasFound($event)\"\r\n  ></zxing-scanner>\r\n  <div class=\"element\"></div>\r\n</div>\r\n<div class=\"content\" *ngIf=\"gotQrResult\">\r\n  <div class=\"place-info\">\r\n    <p>{{ actionMessage }}</p>\r\n    <p>{{ placeInfo }}</p>\r\n    <app-filter-date-time\r\n      *ngIf=\"canCreateReservation\"\r\n      [(ngModel)]=\"reservationDateRange.value\"\r\n      [layout]=\"'vertical'\"\r\n      [workHours]=\"reservationDateRange.workHours\"\r\n      [autoUpdateDateTo]=\"true\"\r\n      [autoUpdateDateToFullDay]=\"true\"\r\n    ></app-filter-date-time>\r\n  </div>\r\n  <div class=\"actions\" *ngIf=\"gotQrResult\">\r\n    <button\r\n      *ngIf=\"!reservationDisabled\"\r\n      nz-button\r\n      nzType=\"primary\"\r\n      [nzDanger]=\"canCancelReservation\"\r\n      (click)=\"yesAction()\"\r\n    >\r\n      Да\r\n    </button>\r\n    <button nz-button nzType=\"default\" (click)=\"destroyModal()\">\r\n      {{ reservationDisabled ? \"Ок\" : \"Нет\" }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { GlobalSearchService } from '@shared/global-search/global-search.service';\r\nimport { fromEvent, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ISearchResult } from '@app/layout/header/models/header.search.model';\r\nimport { isEmpty } from '@core/utils/common.util';\r\nimport { NavigationService } from '@core/services/navigation.service';\r\nimport { GlobalSearchType } from '@shared/global-search/global-search.model';\r\n\r\n@Injectable()\r\nexport class HeaderSearchService {\r\n  constructor(\r\n    private $navigate: NavigationService,\r\n    private $globalSearch: GlobalSearchService\r\n  ) {\r\n  }\r\n\r\n  public getQuery$( {nativeElement}: ElementRef<HTMLInputElement> ): Observable<string> {\r\n    return fromEvent( nativeElement, 'keyup' ).pipe(\r\n      map( () =>\r\n        nativeElement.value.trim().toLocaleLowerCase()\r\n      ),\r\n    );\r\n  }\r\n\r\n  public getResultsByQuery$( query: string ): Observable<ISearchResult | null> {\r\n    return isEmpty( query )\r\n      ? of( null )\r\n      : this.$globalSearch.search( query );\r\n  }\r\n\r\n  public openItem( type: GlobalSearchType, data: Record<string, any> ): void {\r\n    this.$globalSearch.openItem( type, data );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { INotifications } from '@app/layout/header/components/header-notifications/header-notifications.model';\r\nimport { INotificationItem } from '@app/layout/header/components/header-notifications/header-notifications-item/header-notifications-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderNotificationsService {\r\n  constructor() {}\r\n  userNotifications$: BehaviorSubject<INotifications> = new BehaviorSubject<INotifications>([]);\r\n  addNotification(item: INotificationItem): void {\r\n    this.userNotifications$.next([...this.userNotifications$.getValue(), item]);\r\n  }\r\n}\r\n","import { ColorAlias } from '@src/theme/ts/color-aslias';\r\n\r\nexport { ColorAlias };\r\n","import { Injectable } from '@angular/core';\r\nimport { DictionariesService } from '@shared/dictionaries/dictionaries.service';\r\nimport { IDictionaryBuildings, IDictionaryFloorMaps } from '@shared/dictionaries/dictionaries.model';\r\nimport { combineLatest, Observable, of } from 'rxjs';\r\nimport { catchError, map, shareReplay, startWith, take } from 'rxjs/operators';\r\nimport { filterBuildingsByFloorMaps, sortItemsBySequence } from '@shared/dictionaries/dictionaries.utils';\r\nimport { DictionaryName } from '@shared/dictionaries/dictionaries.constants';\r\nimport { FloorMapsService } from '@shared/dictionaries/services/floor-maps.service';\r\nimport { UserService } from '@core/services/user.service';\r\n\r\n@Injectable()\r\nexport class BuildingsService {\r\n  private readonly _allBuildings$: Observable<IDictionaryBuildings>;\r\n  private readonly _parkingLotsBuildings$: Observable<IDictionaryBuildings>;\r\n  private readonly _roomsBuildings$: Observable<IDictionaryBuildings>;\r\n  private readonly _workplacesBuildings$: Observable<IDictionaryBuildings>;\r\n\r\n  constructor(\r\n    private $dictionaries: DictionariesService,\r\n    private $floorMaps: FloorMapsService,\r\n    private $user: UserService\r\n  ) {\r\n    this._allBuildings$ = this.getAllBuildings$();\r\n    this._parkingLotsBuildings$ = this.getBuildingsByType('parkingLots');\r\n    this._roomsBuildings$ = this.getBuildingsByType('rooms');\r\n    this._workplacesBuildings$ = this.getBuildingsByType('workplaces');\r\n  }\r\n\r\n  public get allBuildings$(): Observable<IDictionaryBuildings> {\r\n    return this._allBuildings$;\r\n  }\r\n\r\n  public get allBuildingsOne$(): Observable<IDictionaryBuildings> {\r\n    return this.allBuildings$.pipe(\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  public get parkingLotsBuildings$(): Observable<IDictionaryBuildings> {\r\n    return this._parkingLotsBuildings$;\r\n  }\r\n\r\n  public get roomsBuildings$(): Observable<IDictionaryBuildings> {\r\n    return this._roomsBuildings$;\r\n  }\r\n\r\n  public get workplacesBuildings$(): Observable<IDictionaryBuildings> {\r\n    return this._workplacesBuildings$;\r\n  }\r\n\r\n  public get allBuildingsWithFloorMaps$(): Observable<[ IDictionaryBuildings, IDictionaryFloorMaps ]> {\r\n    return combineLatest([ this.allBuildings$, this.$floorMaps.allFloorMaps$ ]);\r\n  }\r\n\r\n  public get roomsBuildingsWithFloorMaps$(): Observable<[ IDictionaryBuildings, IDictionaryFloorMaps ]> {\r\n    return combineLatest([ this.roomsBuildings$, this.$floorMaps.roomsFloorMaps$ ]);\r\n  }\r\n\r\n  public get parkingLotsBuildingsWithFloorMaps$(): Observable<[ IDictionaryBuildings, IDictionaryFloorMaps ]> {\r\n    return combineLatest([ this.parkingLotsBuildings$, this.$floorMaps.parkingLotsFloorMaps$ ]);\r\n  }\r\n\r\n  public get workplacesBuildingsWithFloorMaps$(): Observable<[ IDictionaryBuildings, IDictionaryFloorMaps ]> {\r\n    return combineLatest([ this.workplacesBuildings$, this.$floorMaps.workplacesFloorMaps$ ]);\r\n  }\r\n\r\n  public getBuildingsByPlaceType$(type: DictionaryName | string): Observable<IDictionaryBuildings> {\r\n    switch (type) {\r\n      case 'rooms':\r\n        return this.roomsBuildings$;\r\n\r\n      case 'parkingLots':\r\n        return this.parkingLotsBuildings$;\r\n\r\n      case 'workplaces':\r\n        return this.workplacesBuildings$;\r\n\r\n      default:\r\n        return this.allBuildings$;\r\n    }\r\n  }\r\n\r\n  private getBuildingsByType(name: DictionaryName): Observable<IDictionaryBuildings> {\r\n    let floorMaps$: Observable<IDictionaryFloorMaps> = this.$floorMaps.allFloorMaps$;\r\n\r\n    switch (name) {\r\n      case 'rooms':\r\n        floorMaps$ = this.$floorMaps.roomsFloorMaps$;\r\n        break;\r\n\r\n      case 'parkingLots':\r\n        floorMaps$ = this.$floorMaps.parkingLotsFloorMaps$;\r\n        break;\r\n\r\n      case 'workplaces':\r\n        floorMaps$ = this.$floorMaps.workplacesFloorMaps$;\r\n        break;\r\n    }\r\n\r\n    return combineLatest([ this.allBuildings$, floorMaps$ ]).pipe(\r\n      map(([ buildings, floorMaps ]) =>\r\n        filterBuildingsByFloorMaps(buildings, floorMaps)\r\n      ),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  private get sequence$(): Observable<number[]> {\r\n    return this.$user.label$.pipe(\r\n      startWith(null),\r\n      map((label) => label?.buildingsSequence || []),\r\n      catchError(() => of([]))\r\n    );\r\n  }\r\n\r\n  private getAllBuildings$(): Observable<IDictionaryBuildings> {\r\n    return combineLatest([\r\n      this.$dictionaries.getDictionary<IDictionaryBuildings>('buildings'),\r\n      this.sequence$\r\n    ]).pipe(\r\n      map(([ allBuildings, sequence ]) =>\r\n        sortItemsBySequence(allBuildings, 'id', sequence)\r\n      ),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n}\r\n","import {DB_CACHE_RESPONSE_HEADER} from '@shared/http/utils/constants.util';\r\nimport {DictionariesService} from '@shared/dictionaries/dictionaries.service';\r\nimport {BehaviorSubject, forkJoin, from, Observable, of, zip} from 'rxjs';\r\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\r\nimport {QueryParamsBuilder} from '@shared/common/utils/query-params-builder.util';\r\nimport {IStatusRenderer, IStatusRendererMap} from '@base/renderer/renderer.model';\r\nimport {IStatuses} from '@shared/dictionaries/models/statuses.model';\r\nimport {Params} from '@angular/router';\r\nimport {IListColumns} from '@base/list/models/list-column.model';\r\nimport {IDictionaryItem} from '@shared/dictionaries/dictionaries.model';\r\nimport {formatDate} from '@angular/common';\r\nimport {IListQueryParams, IListRows} from '@base/list/models/list.model';\r\nimport {\r\n  IList,\r\n  IReservationsMeta,\r\n  IReservationsMetaDictionaries,\r\n  IReservationsMetaDictionariesItem\r\n} from '@presentation/reservations/models/list.model';\r\nimport {User, Users} from '@core/models/user.model';\r\n\r\nexport const maxFilterButtonVisibleWindowWidth: number = 1600;\r\nexport const maxFilterHideWindowWith: number = 1366;\r\nexport const HEADERS_META: Record<string, any> = {[DB_CACHE_RESPONSE_HEADER]: 'true'};\r\n\r\nexport function mapActiveLabels<T extends Array<any>>(reservations: T, activeLabels: Record<string, any>[]) {\r\n  return reservations.forEach(reservation =>\r\n    reservation.online = activeLabels.some(({id}) => reservation.labelId = id)\r\n  );\r\n}\r\n\r\nexport function mapActions(\r\n  $dictionaries: DictionariesService,\r\n  meta: IReservationsMeta,\r\n  data: IListRows,\r\n  currentUser: User\r\n): Observable<IList> {\r\n  if (!data?.length) {\r\n    return of({data, meta});\r\n  }\r\n\r\n  return forkJoin([\r\n    $dictionaries.getDictionary('labels'),\r\n    $dictionaries.getDictionary('labelGroups')\r\n  ]).pipe(\r\n    map(([labels, labelGroups]) =>\r\n      (new Users(labels)).map((user) => user.setManagers(labelGroups))\r\n    ),\r\n    tap((users: Users) => data.forEach(item => {\r\n      item.currentUser = currentUser.id;\r\n      item.managers = users.getUserById(item.labelId)?.managers || [];\r\n    })),\r\n    map(() => ({data, meta}))\r\n  );\r\n}\r\n\r\nexport function mapDictionaryValues(\r\n  $dictionaries: DictionariesService,\r\n  meta: IReservationsMeta,\r\n  data: IListRows\r\n): any {\r\n  if (!meta.dictionaries?.length || !data?.length) {\r\n    return of({data, meta});\r\n  }\r\n\r\n  sortMetaDictionaries(meta.dictionaries);\r\n\r\n  const next$: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n  const lastDictionaryName: string = [...meta.dictionaries].reverse().shift().name;\r\n\r\n  return zip(from(meta.dictionaries), next$).pipe(\r\n    switchMap(([{name, fieldId, maps}, _any]: [IReservationsMetaDictionariesItem, any]) =>\r\n      $dictionaries.getDictionary(name).pipe(\r\n        map((items) => {\r\n          data.forEach(row => {\r\n            const item: IDictionaryItem = items.find(item => item.id === row[fieldId]) || {};\r\n\r\n            (maps || []).forEach(({fieldFrom, fieldTo}) => {\r\n              row[fieldTo] = typeof item[fieldFrom] !== 'undefined' ? item[fieldFrom] : row[fieldTo];\r\n\r\n              if (typeof row[fieldTo] === 'undefined') {\r\n                row[fieldTo] = null;\r\n              }\r\n            });\r\n          });\r\n\r\n          return name;\r\n        }),\r\n        catchError(() => {\r\n          return of(name);\r\n        })\r\n      )\r\n    ),\r\n    tap((dictionaryName) =>\r\n      dictionaryName !== lastDictionaryName ? next$.next(null) : next$.complete()\r\n    ),\r\n    filter((dictionaryName) => dictionaryName === lastDictionaryName),\r\n    map(() => ({data, meta}))\r\n  );\r\n}\r\n\r\nfunction sortMetaDictionaries(dictionaries: IReservationsMetaDictionaries): IReservationsMetaDictionaries {\r\n  return dictionaries.sort(\r\n    (\r\n      {order: orderA}: IReservationsMetaDictionariesItem,\r\n      {order: orderB}: IReservationsMetaDictionariesItem\r\n    ) => (orderA < orderB ? -1 : orderB < orderA ? 1 : 0)\r\n  );\r\n}\r\n\r\nexport function prepareUrlQueryParams(queryParams: Params, dateFormat: string, currentLang: string): Params {\r\n  queryParams = {...queryParams};\r\n  Object.entries(queryParams).forEach(([key, value]) => {\r\n    if (value === null || value?.length === 0) {\r\n      delete queryParams[key];\r\n      return;\r\n    }\r\n\r\n    if (value instanceof Date) {\r\n      queryParams[key] = formatDate(value, dateFormat, currentLang);\r\n      return;\r\n    }\r\n\r\n    queryParams[key] = String(value);\r\n  });\r\n\r\n  return queryParams;\r\n}\r\n\r\nexport function parseUrlQueryParams(queryParams: Record<string, any>): IListQueryParams {\r\n  queryParams = {...queryParams};\r\n\r\n  Object.entries(queryParams).forEach(([key, value]) => {\r\n    switch (key) {\r\n      case 'buildingId':\r\n      case 'floorMapIds':\r\n      case 'labelIds':\r\n      case 'requestAppointmentRoomFloorMapIds':\r\n      case 'requestAppointmentLabelIds':\r\n        queryParams[key] = parseNumberArrayUrlQueryParam(value);\r\n        return;\r\n\r\n      case 'labelGroupId':\r\n        queryParams[key] = parseInt(value, 10);\r\n        return;\r\n\r\n      case 'statuses':\r\n      case 'requestAppointmentStatuses':\r\n        queryParams[key] = parseStringArray(value);\r\n        return;\r\n\r\n      case 'dateTimeFrom':\r\n      case 'dateTimeTo':\r\n      case 'requestAppointmentDateFrom':\r\n      case 'requestAppointmentDateTo':\r\n        queryParams[key] = parseDataUrlQueryParam(value);\r\n        return;\r\n    }\r\n\r\n    if (value === 'false') {\r\n      queryParams[key] = false;\r\n      return;\r\n    }\r\n\r\n    if (value === 'false') {\r\n      queryParams[key] = true;\r\n      return;\r\n    }\r\n  });\r\n\r\n  return queryParams as IListQueryParams;\r\n}\r\n\r\nfunction parseStringArray(value: string | string[]): string[] {\r\n  return (value instanceof Array)\r\n    ? value\r\n    : !value\r\n      ? []\r\n      : value.split(',');\r\n}\r\n\r\nfunction parseNumberArrayUrlQueryParam(value: string): number[] {\r\n  return parseStringArray(value).map(id => parseInt(id, 10));\r\n}\r\n\r\nfunction parseDataUrlQueryParam(value: string): Date | null {\r\n  try {\r\n    return new Date(Date.parse(value));\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function filterActionsColumn(meta: IReservationsMeta, user: User): void {\r\n  if (user?.labelGroupsManager?.length > 0) {\r\n    return;\r\n  }\r\n\r\n  meta.columns = meta.columns.filter(({renderer}) =>\r\n    renderer?.type !== 'actions'\r\n  );\r\n}\r\n\r\nexport function mapStatusDictionary(columns: IListColumns, statuses: IStatuses): void {\r\n  try {\r\n    const statusColumnRenderer: IStatusRenderer = columns\r\n      .find(({id}) => id === 'status')?.renderer as IStatusRenderer;\r\n\r\n    if (statusColumnRenderer) {\r\n      const map: IStatusRendererMap = statuses.reduce((statusRendererMap: IStatusRendererMap, status) => ({\r\n          ...statusRendererMap,\r\n          [status.code]: {value: status.name, color: status.color}\r\n        }),\r\n        {}\r\n      );\r\n\r\n      statusColumnRenderer.options = {map};\r\n    }\r\n  } catch (e) {\r\n  }\r\n}\r\n\r\nexport function initQueryParams(\r\n  queryParamsBuilder: QueryParamsBuilder,\r\n  meta: IReservationsMeta,\r\n  routeQueryParams: Params,\r\n  filters: Record<string, any> = {}\r\n): void {\r\n  queryParamsBuilder\r\n    // .clear()\r\n    .withPaging(meta.paging)\r\n    .withSort(meta.sort)\r\n    .withFilters(filters)\r\n    .updateQueryParams(\r\n      parseUrlQueryParams(routeQueryParams)\r\n    )\r\n    .withParams({updateData: true});\r\n\r\n  queryParamsBuilder.ready = true;\r\n}\r\n","export const DEFAULT_USER_AVATAR = './assets/images/avatar-def.png';\r\nexport const DEFAULT_WORKPLACE_CARD = './assets/images/workplace-card-default.jpg';\r\nexport const DEFAULT_MAP_POINT = './assets/images/default-map-point.png';\r\nexport const DEFAULT_MAP_MARK = './assets/images/map-marker.png';\r\nexport const MAP_POINT_SVG = './assets/images/traffic-light-green.svg';\r\nexport const MAP_POINT_BUSY_SVG = './assets/images/traffic-light-red.svg';\r\nexport const MAP_POINT_DISABLED_SVG = './assets/images/traffic-light-gray.svg';\r\nexport const ROOM_DISABLED_COLOR: string = '#bfbfbf';\r\nexport const CALENDAR_ICON = './assets/images/calendar.svg';","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'pluck'\r\n})\r\nexport class PluckPipe implements PipeTransform {\r\n  public transform<T>(obj: any, keys: Array<string | number>): T | null;\r\n  public transform<T>(obj: any, keys: string | number, ...anyKeys: Array<string | number>): T | null;\r\n  public transform<T>(obj: any, keys: string | number | Array<string | number>, ...anyKeys: Array<string | number>): T | null {\r\n    if (!(keys instanceof Array)) {\r\n      keys = [].concat(keys).concat(anyKeys);\r\n    }\r\n\r\n    while (keys.length > 0) {\r\n      const key: string | number = keys.shift();\r\n\r\n      if (typeof obj === 'undefined') {\r\n        obj = {};\r\n      }\r\n\r\n      obj = obj[key];\r\n    }\r\n\r\n    return typeof obj !== 'undefined' ? obj : null;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BaseApi } from '@shared/common/base/base.api';\r\nimport { Observable } from 'rxjs';\r\nimport { IHttpResponse } from '@core/models/http.model';\r\nimport { filterNoProgressHttpEvent } from '@core/utils/http.util';\r\nimport { environment } from '@src/environments/environment';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class UserApiService extends BaseApi {\r\n  private _apiUrl = environment.apiUrl;\r\n\r\n  constructor(\r\n    protected injector: Injector,\r\n  ) {\r\n    super(injector);\r\n  }\r\n\r\n  public setLabelBuildingsSequence(params: Record<string, any> = {}): Observable<IHttpResponse<any>> {\r\n    return this.$http.post(this._apiUrl + '/setLabelBuildingsSequence', params).pipe(\r\n      filterNoProgressHttpEvent()\r\n    );\r\n  }\r\n\r\n  public setLabelFloorMapsSequence(params: Record<string, any> = {}): Observable<IHttpResponse<any>> {\r\n    return this.$http.post(this._apiUrl + '/setLabelFloorMapsSequence', params).pipe(\r\n      filterNoProgressHttpEvent(),\r\n    );\r\n  }\r\n}\r\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ProcessResponseInterceptor } from '@app/shared/http/interceptors/process-response.interceptor';\r\nimport { CacheResponseInterceptor } from '@app/shared/http/interceptors/cache-response.interceptor';\r\nimport { ImagesModule } from '@shared/images/images.module';\r\nimport { API_SERVICES } from '@shared/http/http.constants';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ImagesModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: CacheResponseInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ProcessResponseInterceptor,\r\n      multi: true\r\n    },\r\n    ...API_SERVICES\r\n  ]\r\n})\r\nexport class HttpModule {\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from '@app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injector } from '@angular/core';\r\nimport { HttpService } from '@core/services/http.service';\r\nimport { UrlService } from '@core/services/url.service';\r\nimport { HttpHelperService } from '@core/services/http-helper.service';\r\nimport { DictionaryService } from '@core/services/dictionary.service';\r\nimport { LocalStorageService } from '@core/services/local-storage.service';\r\nimport { ConfigService } from '@core/services/config.service';\r\nimport { IHttpResponse } from '@core/models/http.model';\r\nimport { AppError, IAppError } from '@core/models/app-errorl.model';\r\n\r\nexport class BaseApi {\r\n  protected readonly $config: ConfigService = this.injector.get(ConfigService);\r\n  protected readonly $localStorage: LocalStorageService = this.injector.get(LocalStorageService);\r\n  protected readonly $http: HttpService = this.injector.get(HttpService);\r\n  protected readonly $httpHelper: HttpHelperService = this.injector.get(HttpHelperService);\r\n  protected readonly $url: UrlService = this.injector.get(UrlService);\r\n  protected readonly $dict: DictionaryService = this.injector.get(DictionaryService);\r\n\r\n  constructor(protected injector: Injector) {\r\n  }\r\n\r\n  protected processResponse<T>(response: IHttpResponse<T>): T | AppError {\r\n    return response.success\r\n      ? response.data\r\n      : new AppError(response.error);\r\n  }\r\n}\r\n","export interface IAppError extends Record<string, any> {\r\n  isError?: boolean;\r\n  code?: number | string;\r\n  title?: string;\r\n  subtitle?: string;\r\n  message?: string;\r\n}\r\n\r\nexport class AppError implements IAppError {\r\n  code: number | string;\r\n  isError: boolean = true;\r\n  message: string;\r\n  subtitle: string;\r\n  title: string;\r\n\r\n  constructor(props: Partial<IAppError>);\r\n  constructor(code: string | number, message: string, title: string, subTitle?: string);\r\n  constructor(codeOrProps: string | number | Partial<IAppError>, message?: string, title?: string, subtitle?: string) {\r\n    if (isErrorObject(codeOrProps)) {\r\n      Object.assign(this, codeOrProps);\r\n      return;\r\n    }\r\n\r\n    this.code = codeOrProps;\r\n    this.message = message;\r\n    this.subtitle = subtitle;\r\n    this.title = title;\r\n  }\r\n}\r\n\r\nfunction isErrorObject(codeOrProps: string | number | Partial<IAppError>): codeOrProps is Partial<IAppError> {\r\n  return codeOrProps && typeof codeOrProps === 'object';\r\n}\r\n\r\n\r\nconst err: AppError = new AppError({  })\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}